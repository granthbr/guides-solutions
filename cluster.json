{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "3"
                },
                "creationTimestamp": "2025-08-05T13:51:00Z",
                "generation": 3,
                "labels": {
                    "app.kubernetes.io/instance": "ai-agent-kafka",
                    "app.kubernetes.io/managed-by": "strimzi-cluster-operator",
                    "app.kubernetes.io/name": "entity-operator",
                    "app.kubernetes.io/part-of": "strimzi-ai-agent-kafka",
                    "strimzi.io/cluster": "ai-agent-kafka",
                    "strimzi.io/component-type": "entity-operator",
                    "strimzi.io/kind": "Kafka",
                    "strimzi.io/name": "ai-agent-kafka-entity-operator"
                },
                "name": "ai-agent-kafka-entity-operator",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "kafka.strimzi.io/v1beta2",
                        "blockOwnerDeletion": false,
                        "controller": false,
                        "kind": "Kafka",
                        "name": "ai-agent-kafka",
                        "uid": "ced44e65-14cd-4eec-8046-9cb903eda53c"
                    }
                ],
                "resourceVersion": "4119942",
                "uid": "5c0fdc35-9a7b-49e2-951b-742bf420752d"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "strimzi.io/cluster": "ai-agent-kafka",
                        "strimzi.io/kind": "Kafka",
                        "strimzi.io/name": "ai-agent-kafka-entity-operator"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "strimzi.io/cluster-ca-cert-generation": "0",
                            "strimzi.io/cluster-ca-key-generation": "0",
                            "strimzi.io/server-cert-hash": "23c64466a33c3057"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "ai-agent-kafka",
                            "app.kubernetes.io/managed-by": "strimzi-cluster-operator",
                            "app.kubernetes.io/name": "entity-operator",
                            "app.kubernetes.io/part-of": "strimzi-ai-agent-kafka",
                            "strimzi.io/cluster": "ai-agent-kafka",
                            "strimzi.io/component-type": "entity-operator",
                            "strimzi.io/kind": "Kafka",
                            "strimzi.io/name": "ai-agent-kafka-entity-operator"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "/opt/strimzi/bin/topic_operator_run.sh"
                                ],
                                "env": [
                                    {
                                        "name": "STRIMZI_RESOURCE_LABELS",
                                        "value": "strimzi.io/cluster=ai-agent-kafka"
                                    },
                                    {
                                        "name": "STRIMZI_KAFKA_BOOTSTRAP_SERVERS",
                                        "value": "ai-agent-kafka-kafka-bootstrap:9091"
                                    },
                                    {
                                        "name": "STRIMZI_NAMESPACE",
                                        "value": "ai-agent"
                                    },
                                    {
                                        "name": "STRIMZI_SECURITY_PROTOCOL",
                                        "value": "SSL"
                                    },
                                    {
                                        "name": "STRIMZI_TLS_ENABLED",
                                        "value": "true"
                                    },
                                    {
                                        "name": "STRIMZI_GC_LOG_ENABLED",
                                        "value": "false"
                                    }
                                ],
                                "image": "quay.io/strimzi/operator:0.46.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthy",
                                        "port": "healthcheck",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "topic-operator",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "healthcheck",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": "healthcheck",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "startupProbe": {
                                    "failureThreshold": 12,
                                    "httpGet": {
                                        "path": "/healthy",
                                        "port": "healthcheck",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "strimzi-to-tmp"
                                    },
                                    {
                                        "mountPath": "/opt/topic-operator/custom-config/",
                                        "name": "entity-topic-operator-metrics-and-logging"
                                    },
                                    {
                                        "mountPath": "/etc/eto-certs/",
                                        "name": "eto-certs"
                                    },
                                    {
                                        "mountPath": "/etc/tls-sidecar/cluster-ca-certs/",
                                        "name": "cluster-ca-certs"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "/opt/strimzi/bin/user_operator_run.sh"
                                ],
                                "env": [
                                    {
                                        "name": "STRIMZI_KAFKA_BOOTSTRAP_SERVERS",
                                        "value": "ai-agent-kafka-kafka-bootstrap:9091"
                                    },
                                    {
                                        "name": "STRIMZI_NAMESPACE",
                                        "value": "ai-agent"
                                    },
                                    {
                                        "name": "STRIMZI_LABELS",
                                        "value": "strimzi.io/cluster=ai-agent-kafka"
                                    },
                                    {
                                        "name": "STRIMZI_CA_KEY_NAME",
                                        "value": "ai-agent-kafka-clients-ca"
                                    },
                                    {
                                        "name": "STRIMZI_CA_CERT_NAME",
                                        "value": "ai-agent-kafka-clients-ca-cert"
                                    },
                                    {
                                        "name": "STRIMZI_CA_NAMESPACE",
                                        "value": "ai-agent"
                                    },
                                    {
                                        "name": "STRIMZI_CA_VALIDITY",
                                        "value": "365"
                                    },
                                    {
                                        "name": "STRIMZI_CA_RENEWAL",
                                        "value": "30"
                                    },
                                    {
                                        "name": "STRIMZI_CLUSTER_CA_CERT_SECRET_NAME",
                                        "value": "ai-agent-kafka-cluster-ca-cert"
                                    },
                                    {
                                        "name": "STRIMZI_EO_KEY_SECRET_NAME",
                                        "value": "ai-agent-kafka-entity-user-operator-certs"
                                    },
                                    {
                                        "name": "STRIMZI_GC_LOG_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "STRIMZI_SECRET_PREFIX"
                                    },
                                    {
                                        "name": "STRIMZI_ACLS_ADMIN_API_SUPPORTED",
                                        "value": "false"
                                    }
                                ],
                                "image": "quay.io/strimzi/operator:0.46.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthy",
                                        "port": "healthcheck",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "user-operator",
                                "ports": [
                                    {
                                        "containerPort": 8081,
                                        "name": "healthcheck",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": "healthcheck",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "strimzi-uo-tmp"
                                    },
                                    {
                                        "mountPath": "/opt/user-operator/custom-config/",
                                        "name": "entity-user-operator-metrics-and-logging"
                                    },
                                    {
                                        "mountPath": "/etc/euo-certs/",
                                        "name": "euo-certs"
                                    },
                                    {
                                        "mountPath": "/etc/tls-sidecar/cluster-ca-certs/",
                                        "name": "cluster-ca-certs"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "ai-agent-kafka-entity-operator",
                        "serviceAccountName": "ai-agent-kafka-entity-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "ai-agent-kafka-entity-topic-operator-config"
                                },
                                "name": "entity-topic-operator-metrics-and-logging"
                            },
                            {
                                "emptyDir": {
                                    "medium": "Memory",
                                    "sizeLimit": "5Mi"
                                },
                                "name": "strimzi-to-tmp"
                            },
                            {
                                "name": "eto-certs",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "ai-agent-kafka-entity-topic-operator-certs"
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "ai-agent-kafka-entity-user-operator-config"
                                },
                                "name": "entity-user-operator-metrics-and-logging"
                            },
                            {
                                "emptyDir": {
                                    "medium": "Memory",
                                    "sizeLimit": "5Mi"
                                },
                                "name": "strimzi-uo-tmp"
                            },
                            {
                                "name": "euo-certs",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "ai-agent-kafka-entity-user-operator-certs"
                                }
                            },
                            {
                                "name": "cluster-ca-certs",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "ai-agent-kafka-cluster-ca-cert"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-05T13:51:00Z",
                        "lastUpdateTime": "2025-08-18T07:46:34Z",
                        "message": "ReplicaSet \"ai-agent-kafka-entity-operator-68687c8998\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2025-08-18T07:47:16Z",
                        "lastUpdateTime": "2025-08-18T07:47:16Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"anomaly-results-processor\",\"component\":\"ai-pipeline\"},\"name\":\"anomaly-results-processor\",\"namespace\":\"ai-agent\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"anomaly-results-processor\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"anomaly-results-processor\",\"component\":\"ai-pipeline\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"KAFKA_BOOTSTRAP_SERVERS\",\"value\":\"ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local:9092\"},{\"name\":\"KAFKA_INPUT_TOPIC\",\"value\":\"morpheus-input\"},{\"name\":\"KAFKA_RESULTS_TOPIC\",\"value\":\"anomaly-results\"},{\"name\":\"KAFKA_CONSUMER_GROUP\",\"value\":\"anomaly-results-processor\"},{\"name\":\"S3_ENDPOINT\",\"value\":\"http://minio.minio.svc.cluster.local:9000\"},{\"name\":\"S3_ACCESS_KEY\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"rootUser\",\"name\":\"minio\"}}},{\"name\":\"S3_SECRET_KEY\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"rootPassword\",\"name\":\"minio\"}}},{\"name\":\"S3_BUCKET\",\"value\":\"data\"},{\"name\":\"S3_RESULTS_PREFIX\",\"value\":\"anomaly-results\"},{\"name\":\"BATCH_SIZE\",\"value\":\"50\"},{\"name\":\"ANOMALY_THRESHOLD\",\"value\":\"0.7\"}],\"image\":\"ghcr.io/granthbr/ai-agent-chart/anomaly-results-processor:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8089},\"initialDelaySeconds\":30,\"periodSeconds\":10},\"name\":\"processor\",\"ports\":[{\"containerPort\":8089,\"name\":\"api\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8089},\"initialDelaySeconds\":15,\"periodSeconds\":5},\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"1Gi\"}}}],\"imagePullSecrets\":[{\"name\":\"ghcr-secret\"}]}}}}\n"
                },
                "creationTimestamp": "2025-08-18T15:01:50Z",
                "generation": 1,
                "labels": {
                    "app": "anomaly-results-processor",
                    "component": "ai-pipeline"
                },
                "name": "anomaly-results-processor",
                "namespace": "ai-agent",
                "resourceVersion": "4218708",
                "uid": "cbd0d5d8-3cb2-4a9f-8538-bb57bb51a4e3"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "anomaly-results-processor"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "anomaly-results-processor",
                            "component": "ai-pipeline"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "KAFKA_BOOTSTRAP_SERVERS",
                                        "value": "ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local:9092"
                                    },
                                    {
                                        "name": "KAFKA_INPUT_TOPIC",
                                        "value": "morpheus-input"
                                    },
                                    {
                                        "name": "KAFKA_RESULTS_TOPIC",
                                        "value": "anomaly-results"
                                    },
                                    {
                                        "name": "KAFKA_CONSUMER_GROUP",
                                        "value": "anomaly-results-processor"
                                    },
                                    {
                                        "name": "S3_ENDPOINT",
                                        "value": "http://minio.minio.svc.cluster.local:9000"
                                    },
                                    {
                                        "name": "S3_ACCESS_KEY",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "rootUser",
                                                "name": "minio"
                                            }
                                        }
                                    },
                                    {
                                        "name": "S3_SECRET_KEY",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "rootPassword",
                                                "name": "minio"
                                            }
                                        }
                                    },
                                    {
                                        "name": "S3_BUCKET",
                                        "value": "data"
                                    },
                                    {
                                        "name": "S3_RESULTS_PREFIX",
                                        "value": "anomaly-results"
                                    },
                                    {
                                        "name": "BATCH_SIZE",
                                        "value": "50"
                                    },
                                    {
                                        "name": "ANOMALY_THRESHOLD",
                                        "value": "0.7"
                                    }
                                ],
                                "image": "ghcr.io/granthbr/ai-agent-chart/anomaly-results-processor:latest",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8089,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "processor",
                                "ports": [
                                    {
                                        "containerPort": 8089,
                                        "name": "api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8089,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "1Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "ghcr-secret"
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-18T15:01:50Z",
                        "lastUpdateTime": "2025-08-18T15:01:50Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-18T15:11:51Z",
                        "lastUpdateTime": "2025-08-18T15:11:51Z",
                        "message": "ReplicaSet \"anomaly-results-processor-584b847c98\" has timed out progressing.",
                        "reason": "ProgressDeadlineExceeded",
                        "status": "False",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "17",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"data-processor\",\"component\":\"data-processing\"},\"name\":\"data-processor\",\"namespace\":\"ai-agent\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"data-processor\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"8080\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"data-processor\",\"component\":\"data-processing\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"CHECKPOINT_LOCATION\",\"value\":\"s3a://data/checkpoints-v2/$(POD_NAME)\"},{\"name\":\"SPARK_APP_NAME\",\"value\":\"data-processor-$(POD_NAME)\"},{\"name\":\"FORCE_FRESH_START\",\"value\":\"true\"},{\"name\":\"DELTA_TABLE_PATH\",\"value\":\"s3a://data/tables/$(POD_NAME)\"},{\"name\":\"KAFKA_CONSUMER_GROUP\",\"value\":\"data-processor-$(POD_NAME)\"},{\"name\":\"ENABLE_GRACEFUL_SHUTDOWN\",\"value\":\"true\"},{\"name\":\"S3_ACCESS_KEY\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"rootUser\",\"name\":\"minio\"}}},{\"name\":\"S3_SECRET_KEY\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"rootPassword\",\"name\":\"minio\"}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"data-processor-config\"}}],\"image\":\"ghcr.io/granthbr/ai-agent-chart/data-processor:main-b3bc375\",\"imagePullPolicy\":\"Always\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/bin/sh\",\"-c\",\"sleep 10\"]}}},\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/health\",\"port\":8084},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":10},\"name\":\"data-processor\",\"ports\":[{\"containerPort\":8084,\"name\":\"health\",\"protocol\":\"TCP\"},{\"containerPort\":8085,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"exec\":{\"command\":[\"python\",\"-c\",\"import socket; sock = socket.socket(); sock.connect(('ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local', 9092)); sock.close()\"]},\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":5},\"resources\":{\"limits\":{\"cpu\":\"4\",\"memory\":\"12Gi\"},\"requests\":{\"cpu\":\"2\",\"memory\":\"6Gi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}}}],\"imagePullSecrets\":[{\"name\":\"ghcr-secret\"}],\"restartPolicy\":\"Always\",\"serviceAccountName\":\"ai-agent-sa\",\"terminationGracePeriodSeconds\":60}}}}\n"
                },
                "creationTimestamp": "2025-08-06T06:10:35Z",
                "generation": 23,
                "labels": {
                    "app": "data-processor",
                    "component": "data-processing"
                },
                "name": "data-processor",
                "namespace": "ai-agent",
                "resourceVersion": "4194983",
                "uid": "9e9067ef-815b-4bac-a6e9-02e17cd90c8e"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "data-processor"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/restartedAt": "2025-08-18T13:46:53+02:00",
                            "prometheus.io/path": "/metrics",
                            "prometheus.io/port": "8080",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "data-processor",
                            "component": "data-processing"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CHECKPOINT_LOCATION",
                                        "value": "s3a://data/checkpoints-v2/$(POD_NAME)"
                                    },
                                    {
                                        "name": "SPARK_APP_NAME",
                                        "value": "data-processor-$(POD_NAME)"
                                    },
                                    {
                                        "name": "FORCE_FRESH_START",
                                        "value": "true"
                                    },
                                    {
                                        "name": "DELTA_TABLE_PATH",
                                        "value": "s3a://data/tables/$(POD_NAME)"
                                    },
                                    {
                                        "name": "KAFKA_CONSUMER_GROUP",
                                        "value": "data-processor-$(POD_NAME)"
                                    },
                                    {
                                        "name": "ENABLE_GRACEFUL_SHUTDOWN",
                                        "value": "true"
                                    },
                                    {
                                        "name": "S3_ACCESS_KEY",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "rootUser",
                                                "name": "minio"
                                            }
                                        }
                                    },
                                    {
                                        "name": "S3_SECRET_KEY",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "rootPassword",
                                                "name": "minio"
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "data-processor-config"
                                        }
                                    }
                                ],
                                "image": "ghcr.io/granthbr/ai-agent-chart/data-processor:main-16792e3",
                                "imagePullPolicy": "Always",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/bin/sh",
                                                "-c",
                                                "sleep 10"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8084,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "name": "data-processor",
                                "ports": [
                                    {
                                        "containerPort": 8084,
                                        "name": "health",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8085,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "python",
                                            "-c",
                                            "import socket; sock = socket.socket(); sock.connect(('ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local', 9092)); sock.close()"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "4",
                                        "memory": "12Gi"
                                    },
                                    "requests": {
                                        "cpu": "2",
                                        "memory": "6Gi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsNonRoot": true,
                                    "runAsUser": 1000,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "ghcr-secret"
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "ai-agent-sa",
                        "serviceAccountName": "ai-agent-sa",
                        "terminationGracePeriodSeconds": 60
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-18T13:24:16Z",
                        "lastUpdateTime": "2025-08-18T13:24:16Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-06T06:10:35Z",
                        "lastUpdateTime": "2025-08-18T13:24:16Z",
                        "message": "ReplicaSet \"data-processor-5dcc6f8f86\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 23,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "5",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"delta-morpheus-connector\",\"component\":\"morpheus-pipeline\"},\"name\":\"delta-morpheus-connector\",\"namespace\":\"ai-agent\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"delta-morpheus-connector\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"delta-morpheus-connector\",\"component\":\"morpheus-pipeline\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"TRITON_ENDPOINT\",\"value\":\"http://ai-engine.gpu-operator.svc.cluster.local:8000\"},{\"name\":\"TRITON_MODEL_NAME\",\"value\":\"netflow-anomaly-detector\"},{\"name\":\"TRITON_MODEL_VERSION\",\"value\":\"1\"},{\"name\":\"TRITON_TIMEOUT\",\"value\":\"30\"},{\"name\":\"S3_ENDPOINT\",\"value\":\"http://minio.minio.svc.cluster.local:9000\"},{\"name\":\"S3_ACCESS_KEY\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"rootUser\",\"name\":\"minio\"}}},{\"name\":\"S3_SECRET_KEY\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"rootPassword\",\"name\":\"minio\"}}},{\"name\":\"S3_BUCKET\",\"value\":\"data\"},{\"name\":\"DELTA_INPUT_TABLE\",\"value\":\"s3a://data/aggregated-netflow\"},{\"name\":\"DELTA_RESULTS_TABLE\",\"value\":\"s3a://data/morpheus-results\"},{\"name\":\"BATCH_SIZE\",\"value\":\"50\"},{\"name\":\"POLL_INTERVAL\",\"value\":\"30\"},{\"name\":\"ANOMALY_THRESHOLD\",\"value\":\"0.5\"},{\"name\":\"LOG_LEVEL\",\"value\":\"DEBUG\"},{\"name\":\"STRUCTURED_LOGGING\",\"value\":\"true\"},{\"name\":\"LOG_FORMAT\",\"value\":\"json\"},{\"name\":\"METRICS_ENABLED\",\"value\":\"true\"},{\"name\":\"OPERATIONAL_LOGGING\",\"value\":\"true\"}],\"image\":\"ghcr.io/granthbr/ai-agent-chart/delta-morpheus-connector:triton-fix-v1\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8084},\"initialDelaySeconds\":30,\"periodSeconds\":10,\"timeoutSeconds\":5},\"name\":\"connector\",\"ports\":[{\"containerPort\":8084,\"name\":\"http-api\"},{\"containerPort\":8085,\"name\":\"metrics\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8084},\"initialDelaySeconds\":15,\"periodSeconds\":5,\"timeoutSeconds\":3},\"resources\":{\"limits\":{\"cpu\":\"2\",\"memory\":\"4Gi\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"2Gi\"}}}],\"imagePullSecrets\":[{\"name\":\"ghcr-secret\"}]}}}}\n"
                },
                "creationTimestamp": "2025-08-18T13:50:47Z",
                "generation": 7,
                "labels": {
                    "app": "delta-morpheus-connector",
                    "component": "morpheus-pipeline"
                },
                "name": "delta-morpheus-connector",
                "namespace": "ai-agent",
                "resourceVersion": "4386750",
                "uid": "500d2cc3-e7f8-43f8-a6a7-18d4d68d33a6"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "delta-morpheus-connector"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/restartedAt": "2025-08-18T16:46:28+02:00"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "delta-morpheus-connector",
                            "component": "morpheus-pipeline"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "TRITON_ENDPOINT",
                                        "value": "http://ai-engine.gpu-operator.svc.cluster.local:8000"
                                    },
                                    {
                                        "name": "TRITON_MODEL_NAME",
                                        "value": "netflow-anomaly-detector"
                                    },
                                    {
                                        "name": "TRITON_MODEL_VERSION",
                                        "value": "1"
                                    },
                                    {
                                        "name": "TRITON_TIMEOUT",
                                        "value": "30"
                                    },
                                    {
                                        "name": "S3_ENDPOINT",
                                        "value": "http://minio.minio.svc.cluster.local:9000"
                                    },
                                    {
                                        "name": "S3_ACCESS_KEY",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "rootUser",
                                                "name": "minio"
                                            }
                                        }
                                    },
                                    {
                                        "name": "S3_SECRET_KEY",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "rootPassword",
                                                "name": "minio"
                                            }
                                        }
                                    },
                                    {
                                        "name": "S3_BUCKET",
                                        "value": "data"
                                    },
                                    {
                                        "name": "DELTA_INPUT_TABLE",
                                        "value": "s3a://data/aggregated-netflow"
                                    },
                                    {
                                        "name": "DELTA_RESULTS_TABLE",
                                        "value": "s3a://data/morpheus-results"
                                    },
                                    {
                                        "name": "BATCH_SIZE",
                                        "value": "50"
                                    },
                                    {
                                        "name": "POLL_INTERVAL",
                                        "value": "30"
                                    },
                                    {
                                        "name": "ANOMALY_THRESHOLD",
                                        "value": "0.5"
                                    },
                                    {
                                        "name": "LOG_LEVEL",
                                        "value": "DEBUG"
                                    },
                                    {
                                        "name": "STRUCTURED_LOGGING",
                                        "value": "true"
                                    },
                                    {
                                        "name": "LOG_FORMAT",
                                        "value": "json"
                                    },
                                    {
                                        "name": "METRICS_ENABLED",
                                        "value": "true"
                                    },
                                    {
                                        "name": "OPERATIONAL_LOGGING",
                                        "value": "true"
                                    }
                                ],
                                "image": "ghcr.io/granthbr/ai-agent-chart/morpheus-connector:main-40791e0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8084,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "connector",
                                "ports": [
                                    {
                                        "containerPort": 8084,
                                        "name": "http-api",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8085,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8084,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 3
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "4Gi"
                                    },
                                    "requests": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "ghcr-secret"
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-19T04:10:37Z",
                        "lastUpdateTime": "2025-08-19T04:10:37Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-19T03:34:56Z",
                        "lastUpdateTime": "2025-08-19T04:10:37Z",
                        "message": "ReplicaSet \"delta-morpheus-connector-5f67b4d569\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 7,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"enhanced-results-api\",\"component\":\"results-processing\"},\"name\":\"enhanced-results-api\",\"namespace\":\"ai-agent\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"enhanced-results-api\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"enhanced-results-api\",\"component\":\"results-processing\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"DELTA_RESULTS_TABLE\",\"value\":\"s3a://data/morpheus-results\"},{\"name\":\"DELTA_NETFLOW_TABLE\",\"value\":\"s3a://data/aggregated-netflow\"},{\"name\":\"DELTA_ANALYTICS_TABLE\",\"value\":\"s3a://data/analytics-results\"},{\"name\":\"S3_BUCKET\",\"value\":\"data\"},{\"name\":\"S3_ENDPOINT\",\"value\":\"http://minio.minio.svc.cluster.local:9000\"},{\"name\":\"S3_ACCESS_KEY\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"rootUser\",\"name\":\"minio\"}}},{\"name\":\"S3_SECRET_KEY\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"rootPassword\",\"name\":\"minio\"}}},{\"name\":\"SPARK_APP_NAME\",\"value\":\"EnhancedResultsAPI\"},{\"name\":\"SPARK_MASTER\",\"value\":\"local[*]\"},{\"name\":\"API_HOST\",\"value\":\"0.0.0.0\"},{\"name\":\"API_PORT\",\"value\":\"8088\"},{\"name\":\"LOG_LEVEL\",\"value\":\"INFO\"},{\"name\":\"S3_COMPLIANCE_PREFIX\",\"value\":\"compliance\"},{\"name\":\"S3_REPORTS_PREFIX\",\"value\":\"reports\"},{\"name\":\"ANOMALY_THRESHOLD\",\"value\":\"0.5\"},{\"name\":\"MAX_RECORDS_PER_BATCH\",\"value\":\"50000\"},{\"name\":\"REPORT_RETENTION_HOURS\",\"value\":\"168\"},{\"name\":\"ENABLE_ADVANCED_ANALYTICS\",\"value\":\"true\"}],\"image\":\"ghcr.io/granthbr/ai-agent-chart/enhanced-results-api:main-2dbbd4f\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8088},\"initialDelaySeconds\":30,\"periodSeconds\":10,\"timeoutSeconds\":5},\"name\":\"results-api\",\"ports\":[{\"containerPort\":8088,\"name\":\"http-api\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8088},\"initialDelaySeconds\":15,\"periodSeconds\":5,\"timeoutSeconds\":3},\"resources\":{\"limits\":{\"cpu\":\"2\",\"memory\":\"4Gi\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"2Gi\"}}}],\"imagePullSecrets\":[{\"name\":\"ghcr-secret\"}]}}}}\n"
                },
                "creationTimestamp": "2025-08-19T05:44:29Z",
                "generation": 2,
                "labels": {
                    "app": "enhanced-results-api",
                    "component": "results-processing"
                },
                "name": "enhanced-results-api",
                "namespace": "ai-agent",
                "resourceVersion": "4418951",
                "uid": "87663fc7-4c3c-4353-88ae-b743a3782fbd"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "enhanced-results-api"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "enhanced-results-api",
                            "component": "results-processing"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "DELTA_RESULTS_TABLE",
                                        "value": "s3a://data/morpheus-results"
                                    },
                                    {
                                        "name": "DELTA_NETFLOW_TABLE",
                                        "value": "s3a://data/aggregated-netflow"
                                    },
                                    {
                                        "name": "DELTA_ANALYTICS_TABLE",
                                        "value": "s3a://data/analytics-results"
                                    },
                                    {
                                        "name": "S3_BUCKET",
                                        "value": "data"
                                    },
                                    {
                                        "name": "S3_ENDPOINT",
                                        "value": "http://minio.minio.svc.cluster.local:9000"
                                    },
                                    {
                                        "name": "S3_ACCESS_KEY",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "rootUser",
                                                "name": "minio"
                                            }
                                        }
                                    },
                                    {
                                        "name": "S3_SECRET_KEY",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "rootPassword",
                                                "name": "minio"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SPARK_APP_NAME",
                                        "value": "EnhancedResultsAPI"
                                    },
                                    {
                                        "name": "SPARK_MASTER",
                                        "value": "local[*]"
                                    },
                                    {
                                        "name": "API_HOST",
                                        "value": "0.0.0.0"
                                    },
                                    {
                                        "name": "API_PORT",
                                        "value": "8088"
                                    },
                                    {
                                        "name": "LOG_LEVEL",
                                        "value": "INFO"
                                    },
                                    {
                                        "name": "S3_COMPLIANCE_PREFIX",
                                        "value": "compliance"
                                    },
                                    {
                                        "name": "S3_REPORTS_PREFIX",
                                        "value": "reports"
                                    },
                                    {
                                        "name": "ANOMALY_THRESHOLD",
                                        "value": "0.5"
                                    },
                                    {
                                        "name": "MAX_RECORDS_PER_BATCH",
                                        "value": "50000"
                                    },
                                    {
                                        "name": "REPORT_RETENTION_HOURS",
                                        "value": "168"
                                    },
                                    {
                                        "name": "ENABLE_ADVANCED_ANALYTICS",
                                        "value": "true"
                                    }
                                ],
                                "image": "ghcr.io/granthbr/ai-agent-chart/enhanced-results-api:main-2dbbd4f",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8088,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "results-api",
                                "ports": [
                                    {
                                        "containerPort": 8088,
                                        "name": "http-api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8088,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 3
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "4Gi"
                                    },
                                    "requests": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "ghcr-secret"
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-19T05:44:47Z",
                        "lastUpdateTime": "2025-08-19T05:44:47Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-19T05:44:29Z",
                        "lastUpdateTime": "2025-08-19T06:37:54Z",
                        "message": "ReplicaSet \"enhanced-results-api-fb475cb7b\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "3",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"kafka-agent-bridge\",\"component\":\"data-processing\"},\"name\":\"kafka-agent-bridge\",\"namespace\":\"ai-agent\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"kafka-agent-bridge\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"8001\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"kafka-agent-bridge\",\"component\":\"data-processing\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"kafka-agent-bridge-config\"}}],\"image\":\"ghcr.io/granthbr/ai-agent-chart/kafka-agent-bridge:main-314a348\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/health\",\"port\":8000},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":10},\"name\":\"kafka-agent-bridge\",\"ports\":[{\"containerPort\":8000,\"name\":\"health\",\"protocol\":\"TCP\"},{\"containerPort\":8001,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"exec\":{\"command\":[\"python\",\"-c\",\"import socket; sock = socket.socket(); sock.connect(('ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local', 9092)); sock.close()\"]},\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":5},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"256Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}}}],\"imagePullSecrets\":[{\"name\":\"ghcr-secret\"}],\"restartPolicy\":\"Always\",\"serviceAccountName\":\"ai-agent-sa\"}}}}\n"
                },
                "creationTimestamp": "2025-08-06T04:49:44Z",
                "generation": 3,
                "labels": {
                    "app": "kafka-agent-bridge",
                    "component": "data-processing"
                },
                "name": "kafka-agent-bridge",
                "namespace": "ai-agent",
                "resourceVersion": "4127009",
                "uid": "54db6a92-769d-4b07-ac97-d0cb3cba348e"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "kafka-agent-bridge"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/restartedAt": "2025-08-18T10:14:18+02:00",
                            "prometheus.io/path": "/metrics",
                            "prometheus.io/port": "8001",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kafka-agent-bridge",
                            "component": "data-processing"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "kafka-agent-bridge-config"
                                        }
                                    }
                                ],
                                "image": "ghcr.io/granthbr/ai-agent-chart/kafka-agent-bridge:main-314a348",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8000,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "name": "kafka-agent-bridge",
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "name": "health",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8001,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "python",
                                            "-c",
                                            "import socket; sock = socket.socket(); sock.connect(('ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local', 9092)); sock.close()"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "512Mi"
                                    },
                                    "requests": {
                                        "cpu": "200m",
                                        "memory": "256Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsNonRoot": true,
                                    "runAsUser": 1000,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "ghcr-secret"
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "ai-agent-sa",
                        "serviceAccountName": "ai-agent-sa",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 2,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-06T04:50:13Z",
                        "lastUpdateTime": "2025-08-06T04:50:13Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-06T04:49:44Z",
                        "lastUpdateTime": "2025-08-18T08:14:47Z",
                        "message": "ReplicaSet \"kafka-agent-bridge-696499bdd5\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 2,
                "replicas": 2,
                "updatedReplicas": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "3",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"morpheus-triton-connector\",\"component\":\"inference-pipeline\"},\"name\":\"morpheus-triton-connector\",\"namespace\":\"ai-agent\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"morpheus-triton-connector\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"8085\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"morpheus-triton-connector\",\"component\":\"inference-pipeline\"}},\"spec\":{\"containers\":[{\"args\":[\"/app/morpheus_triton_connector.py\"],\"command\":[\"python3\"],\"env\":[{\"name\":\"KAFKA_BOOTSTRAP_SERVERS\",\"value\":\"ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local:9092\"},{\"name\":\"KAFKA_INPUT_TOPIC\",\"value\":\"morpheus-input\"},{\"name\":\"KAFKA_OUTPUT_TOPIC\",\"value\":\"morpheus-results\"},{\"name\":\"KAFKA_GROUP_ID\",\"value\":\"morpheus-connector\"},{\"name\":\"TRITON_ENDPOINT\",\"value\":\"http://ai-engine.gpu-operator.svc.cluster.local:8000\"},{\"name\":\"TRITON_MODEL_NAME\",\"value\":\"netflow-anomaly-detector\"},{\"name\":\"TRITON_MODEL_VERSION\",\"value\":\"1\"},{\"name\":\"S3_ENDPOINT\",\"value\":\"http://minio.minio.svc.cluster.local:9000\"},{\"name\":\"S3_BUCKET\",\"value\":\"data\"},{\"name\":\"DELTA_BASE_PATH\",\"value\":\"s3a://data\"},{\"name\":\"BATCH_SIZE\",\"value\":\"100\"},{\"name\":\"ANOMALY_THRESHOLD\",\"value\":\"0.7\"}],\"image\":\"ghcr.io/granthbr/ai-agent-chart/morpheus-connector:main-f8f297c\",\"imagePullPolicy\":\"Always\",\"name\":\"morpheus-triton-connector\",\"ports\":[{\"containerPort\":8084,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":8085,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"1Gi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/app/logs\",\"name\":\"logs\"}]}],\"imagePullSecrets\":[{\"name\":\"ghcr-secret\"}],\"restartPolicy\":\"Always\",\"securityContext\":{\"fsGroup\":1000,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumes\":[{\"emptyDir\":{},\"name\":\"logs\"}]}}}}\n"
                },
                "creationTimestamp": "2025-08-06T09:33:23Z",
                "generation": 3,
                "labels": {
                    "app": "morpheus-triton-connector",
                    "component": "inference-pipeline"
                },
                "name": "morpheus-triton-connector",
                "namespace": "ai-agent",
                "resourceVersion": "4119530",
                "uid": "3898f48c-6cd1-4543-931f-9d1b66952ba4"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "morpheus-triton-connector"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/restartedAt": "2025-08-18T09:46:09+02:00",
                            "prometheus.io/path": "/metrics",
                            "prometheus.io/port": "8085",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "morpheus-triton-connector",
                            "component": "inference-pipeline"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "/app/morpheus_triton_connector.py"
                                ],
                                "command": [
                                    "python3"
                                ],
                                "env": [
                                    {
                                        "name": "KAFKA_BOOTSTRAP_SERVERS",
                                        "value": "ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local:9092"
                                    },
                                    {
                                        "name": "KAFKA_INPUT_TOPIC",
                                        "value": "morpheus-input"
                                    },
                                    {
                                        "name": "KAFKA_OUTPUT_TOPIC",
                                        "value": "morpheus-results"
                                    },
                                    {
                                        "name": "KAFKA_GROUP_ID",
                                        "value": "morpheus-connector"
                                    },
                                    {
                                        "name": "TRITON_ENDPOINT",
                                        "value": "http://ai-engine.gpu-operator.svc.cluster.local:8000"
                                    },
                                    {
                                        "name": "TRITON_MODEL_NAME",
                                        "value": "netflow-anomaly-detector"
                                    },
                                    {
                                        "name": "TRITON_MODEL_VERSION",
                                        "value": "1"
                                    },
                                    {
                                        "name": "S3_ENDPOINT",
                                        "value": "http://minio.minio.svc.cluster.local:9000"
                                    },
                                    {
                                        "name": "S3_BUCKET",
                                        "value": "data"
                                    },
                                    {
                                        "name": "DELTA_BASE_PATH",
                                        "value": "s3a://data"
                                    },
                                    {
                                        "name": "BATCH_SIZE",
                                        "value": "100"
                                    },
                                    {
                                        "name": "ANOMALY_THRESHOLD",
                                        "value": "0.7"
                                    }
                                ],
                                "image": "ghcr.io/granthbr/ai-agent-chart/morpheus-connector:main-f8f297c",
                                "imagePullPolicy": "Always",
                                "name": "morpheus-triton-connector",
                                "ports": [
                                    {
                                        "containerPort": 8084,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8085,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "1Gi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsNonRoot": true,
                                    "runAsUser": 1000,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/app/logs",
                                        "name": "logs"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "ghcr-secret"
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1000,
                            "runAsNonRoot": true,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "logs"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-06T09:33:25Z",
                        "lastUpdateTime": "2025-08-06T09:33:25Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-06T09:33:23Z",
                        "lastUpdateTime": "2025-08-18T07:46:15Z",
                        "message": "ReplicaSet \"morpheus-triton-connector-6c7dc945db\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "4",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"netflow-generator\",\"component\":\"data-ingestion\"},\"name\":\"netflow-generator\",\"namespace\":\"ai-agent\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"netflow-generator\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"8085\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"netflow-generator\",\"component\":\"data-ingestion\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"KAFKA_BOOTSTRAP_SERVERS\",\"value\":\"ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local:9092\"},{\"name\":\"KAFKA_OUTPUT_TOPIC\",\"value\":\"raw-netflow\"},{\"name\":\"GENERATION_RATE\",\"value\":\"50\"},{\"name\":\"BATCH_SIZE\",\"value\":\"25\"},{\"name\":\"ANOMALY_PERCENTAGE\",\"value\":\"8.0\"},{\"name\":\"AUTO_START\",\"value\":\"true\"},{\"name\":\"LOG_LEVEL\",\"value\":\"DEBUG\"},{\"name\":\"STRUCTURED_LOGGING\",\"value\":\"true\"},{\"name\":\"LOG_FORMAT\",\"value\":\"json\"},{\"name\":\"METRICS_ENABLED\",\"value\":\"true\"},{\"name\":\"OPERATIONAL_LOGGING\",\"value\":\"true\"},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"ghcr.io/granthbr/ai-agent-chart/netflow-generator:main-415d876\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/health\",\"port\":8084},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":10},\"name\":\"netflow-generator\",\"ports\":[{\"containerPort\":8084,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":8085,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/health\",\"port\":8084},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":5},\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"256Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"128Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/app/config\",\"name\":\"config\"},{\"mountPath\":\"/app/logs\",\"name\":\"logs\"}]}],\"imagePullSecrets\":[{\"name\":\"ghcr-secret\"}],\"restartPolicy\":\"Always\",\"serviceAccountName\":\"ai-agent-sa\",\"volumes\":[{\"configMap\":{\"name\":\"netflow-generator-config\"},\"name\":\"config\"},{\"emptyDir\":{},\"name\":\"logs\"}]}}}}\n"
                },
                "creationTimestamp": "2025-08-05T13:59:43Z",
                "generation": 4,
                "labels": {
                    "app": "netflow-generator",
                    "component": "data-ingestion"
                },
                "name": "netflow-generator",
                "namespace": "ai-agent",
                "resourceVersion": "4126692",
                "uid": "2993f817-d0f1-4e5f-b77a-94789b70e75b"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "netflow-generator"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/restartedAt": "2025-08-18T09:46:09+02:00",
                            "prometheus.io/path": "/metrics",
                            "prometheus.io/port": "8085",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "netflow-generator",
                            "component": "data-ingestion"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "KAFKA_BOOTSTRAP_SERVERS",
                                        "value": "ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local:9092"
                                    },
                                    {
                                        "name": "KAFKA_OUTPUT_TOPIC",
                                        "value": "raw-netflow"
                                    },
                                    {
                                        "name": "GENERATION_RATE",
                                        "value": "50"
                                    },
                                    {
                                        "name": "BATCH_SIZE",
                                        "value": "25"
                                    },
                                    {
                                        "name": "ANOMALY_PERCENTAGE",
                                        "value": "8.0"
                                    },
                                    {
                                        "name": "AUTO_START",
                                        "value": "true"
                                    },
                                    {
                                        "name": "LOG_LEVEL",
                                        "value": "DEBUG"
                                    },
                                    {
                                        "name": "STRUCTURED_LOGGING",
                                        "value": "true"
                                    },
                                    {
                                        "name": "LOG_FORMAT",
                                        "value": "json"
                                    },
                                    {
                                        "name": "METRICS_ENABLED",
                                        "value": "true"
                                    },
                                    {
                                        "name": "OPERATIONAL_LOGGING",
                                        "value": "true"
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "ghcr.io/granthbr/ai-agent-chart/netflow-generator:main-415d876",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8084,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "name": "netflow-generator",
                                "ports": [
                                    {
                                        "containerPort": 8084,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8085,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8084,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "256Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "128Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsNonRoot": true,
                                    "runAsUser": 1000,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/app/config",
                                        "name": "config"
                                    },
                                    {
                                        "mountPath": "/app/logs",
                                        "name": "logs"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "ghcr-secret"
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "ai-agent-sa",
                        "serviceAccountName": "ai-agent-sa",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "netflow-generator-config"
                                },
                                "name": "config"
                            },
                            {
                                "emptyDir": {},
                                "name": "logs"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-05T16:19:38Z",
                        "lastUpdateTime": "2025-08-05T16:19:38Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-05T13:59:43Z",
                        "lastUpdateTime": "2025-08-18T08:13:58Z",
                        "message": "ReplicaSet \"netflow-generator-7c5ddd78bd\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 4,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "3",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"splunk-hec-connector\",\"component\":\"kafka-connector\"},\"name\":\"splunk-hec-connector\",\"namespace\":\"ai-agent\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"splunk-hec-connector\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"splunk-hec-connector\",\"component\":\"kafka-connector\"}},\"spec\":{\"containers\":[{\"command\":[\"/bin/bash\",\"-c\",\"# Install required packages including snappy codec for Kafka compression\\npip install --no-cache-dir kafka-python requests prometheus-client flask python-snappy\\n\\n# Copy production connector source\\ncp /app/src/production_splunk_hec_connector.py /tmp/\\n\\n# Run production connector\\npython /tmp/production_splunk_hec_connector.py\\n\"],\"env\":[{\"name\":\"KAFKA_BOOTSTRAP_SERVERS\",\"value\":\"ai-agent-kafka-kafka-bootstrap:9092\"},{\"name\":\"KAFKA_TOPICS\",\"value\":\"morpheus-results,processed-netflow,analysis-output\"},{\"name\":\"KAFKA_GROUP_ID\",\"value\":\"splunk-hec-connector\"},{\"name\":\"KAFKA_AUTO_OFFSET_RESET\",\"value\":\"latest\"},{\"name\":\"SPLUNK_HEC_ENDPOINT\",\"value\":\"https://http-inputs-prd-p-vzdue.splunkcloud.com:443/services/collector\"},{\"name\":\"SPLUNK_HEC_TOKEN\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"token\",\"name\":\"splunk-hec-token\",\"optional\":true}}},{\"name\":\"SPLUNK_INDEX\",\"value\":\"netflow_anomalies\"},{\"name\":\"SPLUNK_SOURCE\",\"value\":\"morpheus-ai-pipeline\"},{\"name\":\"SPLUNK_SOURCETYPE\",\"value\":\"morpheus:anomaly\"},{\"name\":\"SPLUNK_VERIFY_SSL\",\"value\":\"false\"},{\"name\":\"SPLUNK_BATCH_SIZE\",\"value\":\"10\"},{\"name\":\"FLUSH_INTERVAL\",\"value\":\"5\"},{\"name\":\"MAX_RETRIES\",\"value\":\"3\"},{\"name\":\"RETRY_DELAY\",\"value\":\"1.0\"}],\"image\":\"python:3.11-slim\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8084},\"initialDelaySeconds\":30,\"periodSeconds\":30},\"name\":\"splunk-hec-connector\",\"ports\":[{\"containerPort\":8084,\"name\":\"http\"},{\"containerPort\":8085,\"name\":\"metrics\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8084},\"initialDelaySeconds\":10,\"periodSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"250m\",\"memory\":\"256Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"128Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/app/src\",\"name\":\"connector-source\",\"readOnly\":true}]}],\"restartPolicy\":\"Always\",\"volumes\":[{\"configMap\":{\"name\":\"splunk-hec-connector-source-prod\"},\"name\":\"connector-source\"}]}}}}\n"
                },
                "creationTimestamp": "2025-08-18T09:25:22Z",
                "generation": 4,
                "labels": {
                    "app": "splunk-hec-connector",
                    "component": "kafka-connector"
                },
                "name": "splunk-hec-connector",
                "namespace": "ai-agent",
                "resourceVersion": "4197730",
                "uid": "4ea9c106-ecc4-40b3-b8ad-7d074235481a"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 0,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "splunk-hec-connector"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "splunk-hec-connector",
                            "component": "kafka-connector"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/bin/bash",
                                    "-c",
                                    "# Install required packages including snappy codec for Kafka compression\npip install --no-cache-dir kafka-python requests prometheus-client flask python-snappy\n\n# Copy production connector source\ncp /app/src/production_splunk_hec_connector.py /tmp/\n\n# Run production connector\npython /tmp/production_splunk_hec_connector.py\n"
                                ],
                                "env": [
                                    {
                                        "name": "KAFKA_BOOTSTRAP_SERVERS",
                                        "value": "ai-agent-kafka-kafka-bootstrap:9092"
                                    },
                                    {
                                        "name": "KAFKA_TOPICS",
                                        "value": "morpheus-results,processed-netflow,analysis-output"
                                    },
                                    {
                                        "name": "KAFKA_GROUP_ID",
                                        "value": "splunk-hec-connector"
                                    },
                                    {
                                        "name": "KAFKA_AUTO_OFFSET_RESET",
                                        "value": "latest"
                                    },
                                    {
                                        "name": "SPLUNK_HEC_ENDPOINT",
                                        "value": "https://prd-p-vzdue.splunkcloud.com:8088/services/collector"
                                    },
                                    {
                                        "name": "SPLUNK_HEC_TOKEN",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "token",
                                                "name": "splunk-hec-token",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "SPLUNK_INDEX",
                                        "value": "main"
                                    },
                                    {
                                        "name": "SPLUNK_SOURCE",
                                        "value": "morpheus-ai-pipeline"
                                    },
                                    {
                                        "name": "SPLUNK_SOURCETYPE",
                                        "value": "morpheus:anomaly"
                                    },
                                    {
                                        "name": "SPLUNK_VERIFY_SSL",
                                        "value": "false"
                                    },
                                    {
                                        "name": "SPLUNK_BATCH_SIZE",
                                        "value": "10"
                                    },
                                    {
                                        "name": "FLUSH_INTERVAL",
                                        "value": "5"
                                    },
                                    {
                                        "name": "MAX_RETRIES",
                                        "value": "3"
                                    },
                                    {
                                        "name": "RETRY_DELAY",
                                        "value": "1.0"
                                    }
                                ],
                                "image": "python:3.11-slim",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8084,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "splunk-hec-connector",
                                "ports": [
                                    {
                                        "containerPort": 8084,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8085,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8084,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "250m",
                                        "memory": "256Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "128Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/app/src",
                                        "name": "connector-source",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "splunk-hec-connector-source-prod"
                                },
                                "name": "connector-source"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-18T09:25:55Z",
                        "lastUpdateTime": "2025-08-18T09:25:55Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-18T09:25:22Z",
                        "lastUpdateTime": "2025-08-18T09:47:37Z",
                        "message": "ReplicaSet \"splunk-hec-connector-86d8c56fd9\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 4
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "cert-manager",
                    "meta.helm.sh/release-namespace": "cert-manager"
                },
                "creationTimestamp": "2025-08-14T16:52:48Z",
                "generation": 1,
                "labels": {
                    "app": "cert-manager",
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cert-manager",
                    "app.kubernetes.io/version": "v1.18.2",
                    "helm.sh/chart": "cert-manager-v1.18.2"
                },
                "name": "cert-manager",
                "namespace": "cert-manager",
                "resourceVersion": "3044571",
                "uid": "a13ba4b3-436b-4700-92e3-8c6fe8e9ceff"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "controller",
                        "app.kubernetes.io/instance": "cert-manager",
                        "app.kubernetes.io/name": "cert-manager"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/path": "/metrics",
                            "prometheus.io/port": "9402",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "cert-manager",
                            "app.kubernetes.io/component": "controller",
                            "app.kubernetes.io/instance": "cert-manager",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "cert-manager",
                            "app.kubernetes.io/version": "v1.18.2",
                            "helm.sh/chart": "cert-manager-v1.18.2"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--cluster-resource-namespace=$(POD_NAMESPACE)",
                                    "--leader-election-namespace=kube-system",
                                    "--acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.18.2",
                                    "--max-concurrent-challenges=60"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/jetstack/cert-manager-controller:v1.18.2",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 8,
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "http-healthz",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 15
                                },
                                "name": "cert-manager-controller",
                                "ports": [
                                    {
                                        "containerPort": 9402,
                                        "name": "http-metrics",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9403,
                                        "name": "http-healthz",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": false,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "cert-manager",
                        "serviceAccountName": "cert-manager",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-14T16:52:53Z",
                        "lastUpdateTime": "2025-08-14T16:52:53Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-14T16:52:48Z",
                        "lastUpdateTime": "2025-08-14T16:52:53Z",
                        "message": "ReplicaSet \"cert-manager-58dd99f969\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "cert-manager",
                    "meta.helm.sh/release-namespace": "cert-manager"
                },
                "creationTimestamp": "2025-08-14T16:52:48Z",
                "generation": 1,
                "labels": {
                    "app": "cainjector",
                    "app.kubernetes.io/component": "cainjector",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cainjector",
                    "app.kubernetes.io/version": "v1.18.2",
                    "helm.sh/chart": "cert-manager-v1.18.2"
                },
                "name": "cert-manager-cainjector",
                "namespace": "cert-manager",
                "resourceVersion": "3044568",
                "uid": "1b17c520-9d23-4f9b-b5a7-043b3ebeb600"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "cainjector",
                        "app.kubernetes.io/instance": "cert-manager",
                        "app.kubernetes.io/name": "cainjector"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/path": "/metrics",
                            "prometheus.io/port": "9402",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "cainjector",
                            "app.kubernetes.io/component": "cainjector",
                            "app.kubernetes.io/instance": "cert-manager",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "cainjector",
                            "app.kubernetes.io/version": "v1.18.2",
                            "helm.sh/chart": "cert-manager-v1.18.2"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--leader-election-namespace=kube-system"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/jetstack/cert-manager-cainjector:v1.18.2",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "cert-manager-cainjector",
                                "ports": [
                                    {
                                        "containerPort": 9402,
                                        "name": "http-metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": false,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "cert-manager-cainjector",
                        "serviceAccountName": "cert-manager-cainjector",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-14T16:52:53Z",
                        "lastUpdateTime": "2025-08-14T16:52:53Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-14T16:52:48Z",
                        "lastUpdateTime": "2025-08-14T16:52:53Z",
                        "message": "ReplicaSet \"cert-manager-cainjector-55cd9f77b5\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "cert-manager",
                    "meta.helm.sh/release-namespace": "cert-manager"
                },
                "creationTimestamp": "2025-08-14T16:52:48Z",
                "generation": 1,
                "labels": {
                    "app": "webhook",
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "webhook",
                    "app.kubernetes.io/version": "v1.18.2",
                    "helm.sh/chart": "cert-manager-v1.18.2"
                },
                "name": "cert-manager-webhook",
                "namespace": "cert-manager",
                "resourceVersion": "3044603",
                "uid": "3e83d5bc-f656-40a1-80d8-0bb17bb07ee0"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "webhook",
                        "app.kubernetes.io/instance": "cert-manager",
                        "app.kubernetes.io/name": "webhook"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/path": "/metrics",
                            "prometheus.io/port": "9402",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "webhook",
                            "app.kubernetes.io/component": "webhook",
                            "app.kubernetes.io/instance": "cert-manager",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "webhook",
                            "app.kubernetes.io/version": "v1.18.2",
                            "helm.sh/chart": "cert-manager-v1.18.2"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--secure-port=10250",
                                    "--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)",
                                    "--dynamic-serving-ca-secret-name=cert-manager-webhook-ca",
                                    "--dynamic-serving-dns-names=cert-manager-webhook",
                                    "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)",
                                    "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/jetstack/cert-manager-webhook:v1.18.2",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "healthcheck",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "cert-manager-webhook",
                                "ports": [
                                    {
                                        "containerPort": 10250,
                                        "name": "https",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 6080,
                                        "name": "healthcheck",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9402,
                                        "name": "http-metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthcheck",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": false,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "cert-manager-webhook",
                        "serviceAccountName": "cert-manager-webhook",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-14T16:52:59Z",
                        "lastUpdateTime": "2025-08-14T16:52:59Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-14T16:52:48Z",
                        "lastUpdateTime": "2025-08-14T16:52:59Z",
                        "message": "ReplicaSet \"cert-manager-webhook-7987476d56\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "namecheap-webhook",
                    "meta.helm.sh/release-namespace": "cert-manager"
                },
                "creationTimestamp": "2025-08-14T16:54:58Z",
                "generation": 1,
                "labels": {
                    "app": "cert-manager-webhook-namecheap",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "cert-manager-webhook-namecheap-0.2.2",
                    "heritage": "Helm",
                    "release": "namecheap-webhook"
                },
                "name": "namecheap-webhook-cert-manager-webhook-namecheap",
                "namespace": "cert-manager",
                "resourceVersion": "3045162",
                "uid": "e80a0c5f-4ef0-4f5b-bdb0-daca16aaf376"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "cert-manager-webhook-namecheap",
                        "release": "namecheap-webhook"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "cert-manager-webhook-namecheap",
                            "release": "namecheap-webhook"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--tls-cert-file=/tls/tls.crt",
                                    "--tls-private-key-file=/tls/tls.key"
                                ],
                                "env": [
                                    {
                                        "name": "GROUP_NAME",
                                        "value": "acme.namecheap.com"
                                    }
                                ],
                                "image": "ghcr.io/extrality/cert-manager-webhook-namecheap:v0.3.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "cert-manager-webhook-namecheap",
                                "ports": [
                                    {
                                        "containerPort": 443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tls",
                                        "name": "certs",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "namecheap-webhook-cert-manager-webhook-namecheap",
                        "serviceAccountName": "namecheap-webhook-cert-manager-webhook-namecheap",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "namecheap-webhook-cert-manager-webhook-namecheap-webhook-tls"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-14T16:55:04Z",
                        "lastUpdateTime": "2025-08-14T16:55:04Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-14T16:54:58Z",
                        "lastUpdateTime": "2025-08-14T16:55:04Z",
                        "message": "ReplicaSet \"namecheap-webhook-cert-manager-webhook-namecheap-65ff5fc9c5\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "morpheus-ai-engine",
                    "meta.helm.sh/release-namespace": "gpu-operator"
                },
                "creationTimestamp": "2025-08-07T07:15:46Z",
                "generation": 2,
                "labels": {
                    "app": "ai-engine",
                    "app.kubernetes.io/instance": "morpheus-ai-engine",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ai-engine",
                    "version": "v1"
                },
                "name": "ai-engine",
                "namespace": "gpu-operator",
                "resourceVersion": "943715",
                "uid": "7ac6993e-1f54-4c3e-9017-e1bf3ec2d393"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "ai-engine"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "ai-engine"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "tritonserver",
                                    "--model-repository",
                                    "/mnt/common/triton-model-repo",
                                    "--model-control-mode",
                                    "explicit",
                                    "--backend-directory",
                                    "/opt/tritonserver/backends",
                                    "--allow-http",
                                    "true",
                                    "--allow-grpc",
                                    "true",
                                    "--allow-metrics",
                                    "true",
                                    "--log-info",
                                    "true"
                                ],
                                "image": "nvcr.io/nvidia/tritonserver:24.03-py3",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "morpheus-ai-engine",
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8001,
                                        "name": "grpc",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8002,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "4",
                                        "memory": "8Gi",
                                        "nvidia.com/gpu": "1"
                                    },
                                    "requests": {
                                        "cpu": "2",
                                        "memory": "4Gi",
                                        "nvidia.com/gpu": "1"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/mnt/common/triton-model-repo",
                                        "name": "triton-model-path"
                                    },
                                    {
                                        "mountPath": "/mnt/common/models",
                                        "name": "model-path"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "nvidia-registrykey-secret"
                            }
                        ],
                        "nodeSelector": {
                            "nvidia.com/gpu.present": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "default",
                        "serviceAccountName": "default",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "model-path",
                                "persistentVolumeClaim": {
                                    "claimName": "morpheus-ai-engine-model-pvc-single-cluster"
                                }
                            },
                            {
                                "name": "triton-model-path",
                                "persistentVolumeClaim": {
                                    "claimName": "morpheus-ai-engine-triton-model-pvc-single-cluster"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-07T07:15:46Z",
                        "lastUpdateTime": "2025-08-07T07:49:44Z",
                        "message": "ReplicaSet \"ai-engine-c974b49c4\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2025-08-07T08:15:46Z",
                        "lastUpdateTime": "2025-08-07T08:15:46Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "mlflow-barcelona",
                    "meta.helm.sh/release-namespace": "gpu-operator"
                },
                "creationTimestamp": "2025-08-05T16:37:51Z",
                "generation": 1,
                "labels": {
                    "app": "mlflow",
                    "app.kubernetes.io/instance": "mlflow-barcelona",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "mlflow",
                    "version": "v1"
                },
                "name": "mlflow",
                "namespace": "gpu-operator",
                "resourceVersion": "605604",
                "uid": "2b7a0c8f-dc31-4759-8a39-2eae76d27d48"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "mlflow"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "mlflow"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "mlflow",
                                    "server",
                                    "-h",
                                    "0.0.0.0",
                                    "-p",
                                    "5000",
                                    "--backend-store-uri",
                                    "sqlite:////mlflow/db/mlflow-db.sqlite",
                                    "--serve-artifacts",
                                    "--artifacts-destination",
                                    "s3://mlflow-artifacts-barcelona/",
                                    "--default-artifact-root",
                                    "s3://mlflow-artifacts-barcelona/"
                                ],
                                "env": [
                                    {
                                        "name": "MLFLOW_TRACKING_URI",
                                        "value": "sqlite:////mlflow/db/mlflow-db.sqlite"
                                    },
                                    {
                                        "name": "TRITON_MODEL_REPO",
                                        "value": "/common/triton-model-repo"
                                    },
                                    {
                                        "name": "TRITON_URL",
                                        "value": "ai-engine.gpu-operator.svc.cluster.local:8000"
                                    },
                                    {
                                        "name": "MLFLOW_S3_ENDPOINT_URL",
                                        "value": "http://minio.minio.svc.cluster.local:9000"
                                    },
                                    {
                                        "name": "AWS_ACCESS_KEY_ID",
                                        "value": "20u0U8Fn49lXbYrmhdEu"
                                    },
                                    {
                                        "name": "AWS_SECRET_ACCESS_KEY",
                                        "value": "nz48G2HB3lWp0f8NZRySgICnp82NDG8SS3XssDH6"
                                    }
                                ],
                                "image": "nvcr.io/nvidia/morpheus/mlflow-triton-plugin:latest",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "morpheus-mlflow",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/common/models",
                                        "name": "model-path"
                                    },
                                    {
                                        "mountPath": "/mlflow/db",
                                        "name": "mlflow-db"
                                    },
                                    {
                                        "mountPath": "/common/triton-model-repo",
                                        "name": "triton-model-path"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "nvidia-registrykey-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "/bin/bash",
                                    "-c",
                                    "db_file=$( echo sqlite:////mlflow/db/mlflow-db.sqlite | sed 's|sqlite:///||' )\nif [[ -f $db_file ]]; then\n   /opt/conda/envs/mlflow/bin/mlflow db upgrade sqlite:////mlflow/db/mlflow-db.sqlite\nfi\n"
                                ],
                                "image": "nvcr.io/nvidia/morpheus/mlflow-triton-plugin:latest",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "db-migrate",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/mlflow/db",
                                        "name": "mlflow-db"
                                    }
                                ]
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "mlflow-barcelona",
                        "serviceAccountName": "mlflow-barcelona",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/opt/morpheus/common/models",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "model-path"
                            },
                            {
                                "hostPath": {
                                    "path": "/opt/morpheus/common/mlflow/db",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "mlflow-db"
                            },
                            {
                                "hostPath": {
                                    "path": "/opt/morpheus/common/triton-model-repo",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "triton-model-path"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-05T16:38:39Z",
                        "lastUpdateTime": "2025-08-05T16:38:39Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-05T16:37:51Z",
                        "lastUpdateTime": "2025-08-05T16:38:39Z",
                        "message": "ReplicaSet \"mlflow-c95b7bb4c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "cilium",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cilium-operator",
                    "app.kubernetes.io/part-of": "cilium",
                    "io.cilium/app": "operator",
                    "name": "cilium-operator"
                },
                "name": "cilium-operator",
                "namespace": "kube-system",
                "resourceVersion": "1728017",
                "uid": "360742f4-4cdd-4baf-b4ac-203a42ec5b77"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "io.cilium/app": "operator",
                        "name": "cilium-operator"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "50%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/port": "9963",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "cilium-operator",
                            "app.kubernetes.io/part-of": "cilium",
                            "io.cilium/app": "operator",
                            "name": "cilium-operator"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchLabels": {
                                                "io.cilium/app": "operator"
                                            }
                                        },
                                        "topologyKey": "kubernetes.io/hostname"
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "--config-dir=/tmp/cilium/config-map",
                                    "--debug=$(CILIUM_DEBUG)"
                                ],
                                "command": [
                                    "cilium-operator-generic"
                                ],
                                "env": [
                                    {
                                        "name": "K8S_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CILIUM_K8S_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CILIUM_DEBUG",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "debug",
                                                "name": "cilium-config",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBERNETES_SERVICE_HOST",
                                        "value": "localhost"
                                    },
                                    {
                                        "name": "KUBERNETES_SERVICE_PORT",
                                        "value": "7445"
                                    }
                                ],
                                "image": "quay.io/cilium/operator-generic:v1.17.5@sha256:f954c97eeb1b47ed67d08cc8fb4108fb829f869373cbb3e698a7f8ef1085b09e",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "host": "127.0.0.1",
                                        "path": "/healthz",
                                        "port": 9234,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 3
                                },
                                "name": "cilium-operator",
                                "ports": [
                                    {
                                        "containerPort": 9963,
                                        "hostPort": 9963,
                                        "name": "prometheus",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "host": "127.0.0.1",
                                        "path": "/healthz",
                                        "port": 9234,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 3
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/cilium/config-map",
                                        "name": "cilium-config-path",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "cilium-operator",
                        "serviceAccountName": "cilium-operator",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "cilium-config"
                                },
                                "name": "cilium-config-path"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-03T06:13:59Z",
                        "lastUpdateTime": "2025-08-03T06:13:59Z",
                        "message": "ReplicaSet \"cilium-operator-665557897b\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2025-08-10T02:17:44Z",
                        "lastUpdateTime": "2025-08-10T02:17:44Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2025-08-01T08:46:17Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/name": "CoreDNS"
                },
                "name": "coredns",
                "namespace": "kube-system",
                "resourceVersion": "602908",
                "uid": "ac72a0c0-fade-456b-9ccc-9f267149656f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 100
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "env": [
                                    {
                                        "name": "GOMEMLIMIT",
                                        "value": "161MiB"
                                    }
                                ],
                                "image": "registry.k8s.io/coredns/coredns:v1.12.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "coredns",
                                "ports": [
                                    {
                                        "containerPort": 53,
                                        "name": "dns",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 53,
                                        "name": "dns-tcp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9153,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/coredns",
                                        "name": "config-volume",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "coredns",
                        "serviceAccountName": "coredns",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/control-plane",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.cloudprovider.kubernetes.io/uninitialized",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "name": "coredns"
                                },
                                "name": "config-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 2,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-01T08:46:17Z",
                        "lastUpdateTime": "2025-08-01T08:47:24Z",
                        "message": "ReplicaSet \"coredns-578d4f8ffc\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2025-08-03T05:58:18Z",
                        "lastUpdateTime": "2025-08-03T05:58:18Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 2,
                "replicas": 2,
                "updatedReplicas": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "cilium",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "hubble-relay",
                    "app.kubernetes.io/part-of": "cilium",
                    "k8s-app": "hubble-relay"
                },
                "name": "hubble-relay",
                "namespace": "kube-system",
                "resourceVersion": "603058",
                "uid": "596f7de7-2979-470d-a9b3-281485d2b709"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "hubble-relay"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "hubble-relay",
                            "app.kubernetes.io/part-of": "cilium",
                            "k8s-app": "hubble-relay"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchLabels": {
                                                "k8s-app": "cilium"
                                            }
                                        },
                                        "topologyKey": "kubernetes.io/hostname"
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": false,
                        "containers": [
                            {
                                "args": [
                                    "serve"
                                ],
                                "command": [
                                    "hubble-relay"
                                ],
                                "image": "quay.io/cilium/hubble-relay:v1.17.5@sha256:fbb8a6afa8718200fca9381ad274ed695792dbadd2417b0e99c36210ae4964ff",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 12,
                                    "grpc": {
                                        "port": 4222,
                                        "service": ""
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "name": "hubble-relay",
                                "ports": [
                                    {
                                        "containerPort": 4245,
                                        "name": "grpc",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "grpc": {
                                        "port": 4222,
                                        "service": ""
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 3
                                },
                                "resources": {},
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsGroup": 65532,
                                    "runAsNonRoot": true,
                                    "runAsUser": 65532
                                },
                                "startupProbe": {
                                    "failureThreshold": 20,
                                    "grpc": {
                                        "port": 4222,
                                        "service": ""
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/hubble-relay",
                                        "name": "config",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/lib/hubble-relay/tls",
                                        "name": "tls",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 65532
                        },
                        "serviceAccount": "hubble-relay",
                        "serviceAccountName": "hubble-relay",
                        "terminationGracePeriodSeconds": 1,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "config.yaml",
                                            "path": "config.yaml"
                                        }
                                    ],
                                    "name": "hubble-relay-config"
                                },
                                "name": "config"
                            },
                            {
                                "name": "tls",
                                "projected": {
                                    "defaultMode": 256,
                                    "sources": [
                                        {
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "tls.crt",
                                                        "path": "client.crt"
                                                    },
                                                    {
                                                        "key": "tls.key",
                                                        "path": "client.key"
                                                    },
                                                    {
                                                        "key": "ca.crt",
                                                        "path": "hubble-server-ca.crt"
                                                    }
                                                ],
                                                "name": "hubble-relay-client-certs"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-03T05:57:33Z",
                        "lastUpdateTime": "2025-08-03T05:57:33Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-03T05:57:33Z",
                        "lastUpdateTime": "2025-08-03T06:08:48Z",
                        "message": "ReplicaSet \"hubble-relay-697879c474\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "cilium",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "hubble-ui",
                    "app.kubernetes.io/part-of": "cilium",
                    "k8s-app": "hubble-ui"
                },
                "name": "hubble-ui",
                "namespace": "kube-system",
                "resourceVersion": "602925",
                "uid": "21efee80-0625-4331-8d33-5dab7f543919"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "hubble-ui"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "hubble-ui",
                            "app.kubernetes.io/part-of": "cilium",
                            "k8s-app": "hubble-ui"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "image": "quay.io/cilium/hubble-ui:v0.13.2@sha256:9e37c1296b802830834cc87342a9182ccbb71ffebb711971e849221bd9d59392",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "frontend",
                                "ports": [
                                    {
                                        "containerPort": 8081,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/nginx/conf.d/default.conf",
                                        "name": "hubble-ui-nginx-conf",
                                        "subPath": "nginx.conf"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-dir"
                                    }
                                ]
                            },
                            {
                                "env": [
                                    {
                                        "name": "EVENTS_SERVER_PORT",
                                        "value": "8090"
                                    },
                                    {
                                        "name": "FLOWS_API_ADDR",
                                        "value": "hubble-relay:80"
                                    }
                                ],
                                "image": "quay.io/cilium/hubble-ui-backend:v0.13.2@sha256:a034b7e98e6ea796ed26df8f4e71f83fc16465a19d166eff67a03b822c0bfa15",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "backend",
                                "ports": [
                                    {
                                        "containerPort": 8090,
                                        "name": "grpc",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1001,
                            "runAsGroup": 1001,
                            "runAsUser": 1001
                        },
                        "serviceAccount": "hubble-ui",
                        "serviceAccountName": "hubble-ui",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "hubble-ui-nginx"
                                },
                                "name": "hubble-ui-nginx-conf"
                            },
                            {
                                "emptyDir": {},
                                "name": "tmp-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-03T05:57:33Z",
                        "lastUpdateTime": "2025-08-03T05:57:33Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-03T05:57:33Z",
                        "lastUpdateTime": "2025-08-03T05:57:42Z",
                        "message": "ReplicaSet \"hubble-ui-76d4965bb6\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"local-path-provisioner\",\"namespace\":\"local-path-storage\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"local-path-provisioner\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"local-path-provisioner\"}},\"spec\":{\"containers\":[{\"command\":[\"local-path-provisioner\",\"--debug\",\"start\",\"--config\",\"/etc/config/config.json\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"CONFIG_MOUNT_PATH\",\"value\":\"/etc/config/\"}],\"image\":\"rancher/local-path-provisioner:v0.0.31\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"local-path-provisioner\",\"volumeMounts\":[{\"mountPath\":\"/etc/config/\",\"name\":\"config-volume\"}]}],\"serviceAccountName\":\"local-path-provisioner-service-account\",\"volumes\":[{\"configMap\":{\"name\":\"local-path-config\"},\"name\":\"config-volume\"}]}}}}\n"
                },
                "creationTimestamp": "2025-08-05T08:41:41Z",
                "generation": 2,
                "name": "local-path-provisioner",
                "namespace": "local-path-storage",
                "resourceVersion": "540297",
                "uid": "341e1bf4-ee91-413e-be59-f6368dc7b741"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "local-path-provisioner"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/restartedAt": "2025-08-05T10:49:49+02:00"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "local-path-provisioner"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "local-path-provisioner",
                                    "--debug",
                                    "start",
                                    "--config",
                                    "/etc/config/config.json"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONFIG_MOUNT_PATH",
                                        "value": "/etc/config/"
                                    }
                                ],
                                "image": "rancher/local-path-provisioner:v0.0.31",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "local-path-provisioner",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/config/",
                                        "name": "config-volume"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "local-path-provisioner-service-account",
                        "serviceAccountName": "local-path-provisioner-service-account",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "local-path-config"
                                },
                                "name": "config-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-05T08:41:46Z",
                        "lastUpdateTime": "2025-08-05T08:41:46Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-05T08:41:41Z",
                        "lastUpdateTime": "2025-08-05T08:49:50Z",
                        "message": "ReplicaSet \"local-path-provisioner-7ccbc84d94\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "minio",
                    "meta.helm.sh/release-namespace": "minio"
                },
                "creationTimestamp": "2025-08-05T14:08:37Z",
                "generation": 1,
                "labels": {
                    "app": "minio",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "minio-5.4.0",
                    "heritage": "Helm",
                    "release": "minio"
                },
                "name": "minio",
                "namespace": "minio",
                "resourceVersion": "584659",
                "uid": "f6a207f7-03e8-45db-8bd2-f2a97589f356"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "minio",
                        "release": "minio"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "100%",
                        "maxUnavailable": 0
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7",
                            "checksum/secrets": "af625c2dc8135a58062dd356936a073ab1d71f6a91c906d41d650e3956d4414a"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "minio",
                            "release": "minio"
                        },
                        "name": "minio"
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/bin/sh",
                                    "-ce",
                                    "/usr/bin/docker-entrypoint.sh minio server /export -S /etc/minio/certs/ --address :9000 --console-address :9001"
                                ],
                                "env": [
                                    {
                                        "name": "MINIO_ROOT_USER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "rootUser",
                                                "name": "minio"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MINIO_ROOT_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "rootPassword",
                                                "name": "minio"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MINIO_PROMETHEUS_AUTH_TYPE",
                                        "value": "public"
                                    },
                                    {
                                        "name": "MINIO_BROWSER_REDIRECT_URL",
                                        "value": "http://localhost:9001"
                                    },
                                    {
                                        "name": "MINIO_PROMETHEUS_AUTH_TYPE",
                                        "value": "public"
                                    },
                                    {
                                        "name": "MINIO_PROMETHEUS_URL",
                                        "value": "http://prometheus-stack-kube-prom-prometheus.monitoring.svc.cluster.local:9090"
                                    },
                                    {
                                        "name": "MINIO_SERVER_URL",
                                        "value": "http://localhost:9000"
                                    }
                                ],
                                "image": "quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "minio",
                                "ports": [
                                    {
                                        "containerPort": 9000,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9001,
                                        "name": "http-console",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "4",
                                        "memory": "16Gi"
                                    },
                                    "requests": {
                                        "cpu": "1",
                                        "memory": "4Gi"
                                    }
                                },
                                "securityContext": {
                                    "readOnlyRootFilesystem": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/credentials",
                                        "name": "minio-user",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/export",
                                        "name": "export"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1001,
                            "fsGroupChangePolicy": "OnRootMismatch",
                            "runAsGroup": 1001,
                            "runAsUser": 1001
                        },
                        "serviceAccount": "minio-sa",
                        "serviceAccountName": "minio-sa",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "export",
                                "persistentVolumeClaim": {
                                    "claimName": "minio"
                                }
                            },
                            {
                                "name": "minio-user",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "minio"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-05T14:08:48Z",
                        "lastUpdateTime": "2025-08-05T14:08:48Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-05T14:08:37Z",
                        "lastUpdateTime": "2025-08-05T14:08:48Z",
                        "message": "ReplicaSet \"minio-68f476c967\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "spark-operator",
                    "meta.helm.sh/release-namespace": "spark-operator"
                },
                "creationTimestamp": "2025-08-05T16:40:42Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "spark-operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "spark-operator",
                    "app.kubernetes.io/version": "2.3.0",
                    "helm.sh/chart": "spark-operator-2.3.0"
                },
                "name": "spark-operator-controller",
                "namespace": "spark-operator",
                "resourceVersion": "950464",
                "uid": "9f3b9590-386a-43d0-af87-536b3b17998d"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "controller",
                        "app.kubernetes.io/instance": "spark-operator",
                        "app.kubernetes.io/name": "spark-operator"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/path": "/metrics",
                            "prometheus.io/port": "8080",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "controller",
                            "app.kubernetes.io/instance": "spark-operator",
                            "app.kubernetes.io/name": "spark-operator"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "controller",
                                    "start",
                                    "--zap-log-level=info",
                                    "--zap-encoder=console",
                                    "--namespaces=default",
                                    "--controller-threads=10",
                                    "--enable-ui-service=true",
                                    "--enable-metrics=true",
                                    "--metrics-bind-address=:8080",
                                    "--metrics-endpoint=/metrics",
                                    "--metrics-prefix=",
                                    "--metrics-labels=app_type",
                                    "--metrics-job-start-latency-buckets=30,60,90,120,150,180,210,240,270,300",
                                    "--leader-election=true",
                                    "--leader-election-lock-name=spark-operator-controller-lock",
                                    "--leader-election-lock-namespace=spark-operator",
                                    "--workqueue-ratelimiter-bucket-qps=50",
                                    "--workqueue-ratelimiter-bucket-size=500",
                                    "--workqueue-ratelimiter-max-delay=6h",
                                    "--driver-pod-creation-grace-period=10s",
                                    "--max-tracked-executor-per-app=1000"
                                ],
                                "image": "ghcr.io/kubeflow/spark-operator/controller:2.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "spark-operator-controller",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 185
                        },
                        "serviceAccount": "spark-operator-controller",
                        "serviceAccountName": "spark-operator-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {
                                    "sizeLimit": "1Gi"
                                },
                                "name": "tmp"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-07T09:02:20Z",
                        "lastUpdateTime": "2025-08-07T09:02:20Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-07T09:01:51Z",
                        "lastUpdateTime": "2025-08-07T09:02:20Z",
                        "message": "ReplicaSet \"spark-operator-controller-6b86fc5457\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "spark-operator",
                    "meta.helm.sh/release-namespace": "spark-operator"
                },
                "creationTimestamp": "2025-08-05T16:40:42Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "spark-operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "spark-operator",
                    "app.kubernetes.io/version": "2.3.0",
                    "helm.sh/chart": "spark-operator-2.3.0"
                },
                "name": "spark-operator-webhook",
                "namespace": "spark-operator",
                "resourceVersion": "950460",
                "uid": "42d3a1a1-59a5-44d9-bdbb-f79fe13cddda"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "webhook",
                        "app.kubernetes.io/instance": "spark-operator",
                        "app.kubernetes.io/name": "spark-operator"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "webhook",
                            "app.kubernetes.io/instance": "spark-operator",
                            "app.kubernetes.io/name": "spark-operator"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "webhook",
                                    "start",
                                    "--zap-log-level=info",
                                    "--zap-encoder=console",
                                    "--namespaces=default",
                                    "--webhook-secret-name=spark-operator-webhook-certs",
                                    "--webhook-secret-namespace=spark-operator",
                                    "--webhook-svc-name=spark-operator-webhook-svc",
                                    "--webhook-svc-namespace=spark-operator",
                                    "--webhook-port=9443",
                                    "--mutating-webhook-name=spark-operator-webhook",
                                    "--validating-webhook-name=spark-operator-webhook",
                                    "--enable-metrics=true",
                                    "--metrics-bind-address=:8080",
                                    "--metrics-endpoint=/metrics",
                                    "--metrics-prefix=",
                                    "--metrics-labels=app_type",
                                    "--leader-election=true",
                                    "--leader-election-lock-name=spark-operator-webhook-lock",
                                    "--leader-election-lock-namespace=spark-operator"
                                ],
                                "image": "ghcr.io/kubeflow/spark-operator/controller:2.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "spark-operator-webhook",
                                "ports": [
                                    {
                                        "containerPort": 9443,
                                        "name": "webhook",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/k8s-webhook-server/serving-certs",
                                        "name": "serving-certs",
                                        "subPath": "serving-certs"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 185
                        },
                        "serviceAccount": "spark-operator-webhook",
                        "serviceAccountName": "spark-operator-webhook",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {
                                    "sizeLimit": "500Mi"
                                },
                                "name": "serving-certs"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-07T09:02:20Z",
                        "lastUpdateTime": "2025-08-07T09:02:20Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-07T09:01:51Z",
                        "lastUpdateTime": "2025-08-07T09:02:20Z",
                        "message": "ReplicaSet \"spark-operator-webhook-7d76df45bf\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2025-08-05T08:56:16Z",
                "generation": 1,
                "labels": {
                    "app": "strimzi"
                },
                "name": "strimzi-cluster-operator",
                "namespace": "strimzi-system",
                "resourceVersion": "602915",
                "uid": "fb5fe03f-1d13-49db-8a15-60b12c0a6821"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "name": "strimzi-cluster-operator",
                        "strimzi.io/kind": "cluster-operator"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "name": "strimzi-cluster-operator",
                            "strimzi.io/kind": "cluster-operator"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "/opt/strimzi/bin/cluster_operator_run.sh"
                                ],
                                "env": [
                                    {
                                        "name": "STRIMZI_NAMESPACE",
                                        "value": "*"
                                    },
                                    {
                                        "name": "STRIMZI_FULL_RECONCILIATION_INTERVAL_MS",
                                        "value": "120000"
                                    },
                                    {
                                        "name": "STRIMZI_OPERATION_TIMEOUT_MS",
                                        "value": "300000"
                                    },
                                    {
                                        "name": "STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE",
                                        "value": "quay.io/strimzi/kafka:0.46.1-kafka-4.0.0"
                                    },
                                    {
                                        "name": "STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE",
                                        "value": "quay.io/strimzi/kafka:0.46.1-kafka-4.0.0"
                                    },
                                    {
                                        "name": "STRIMZI_KAFKA_IMAGES",
                                        "value": "3.9.0=quay.io/strimzi/kafka:0.46.1-kafka-3.9.0\n4.0.0=quay.io/strimzi/kafka:0.46.1-kafka-4.0.0\n"
                                    },
                                    {
                                        "name": "STRIMZI_KAFKA_CONNECT_IMAGES",
                                        "value": "3.9.0=quay.io/strimzi/kafka:0.46.1-kafka-3.9.0\n4.0.0=quay.io/strimzi/kafka:0.46.1-kafka-4.0.0\n"
                                    },
                                    {
                                        "name": "STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES",
                                        "value": "3.9.0=quay.io/strimzi/kafka:0.46.1-kafka-3.9.0\n4.0.0=quay.io/strimzi/kafka:0.46.1-kafka-4.0.0\n"
                                    },
                                    {
                                        "name": "STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE",
                                        "value": "quay.io/strimzi/operator:0.46.1"
                                    },
                                    {
                                        "name": "STRIMZI_DEFAULT_USER_OPERATOR_IMAGE",
                                        "value": "quay.io/strimzi/operator:0.46.1"
                                    },
                                    {
                                        "name": "STRIMZI_DEFAULT_KAFKA_INIT_IMAGE",
                                        "value": "quay.io/strimzi/operator:0.46.1"
                                    },
                                    {
                                        "name": "STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE",
                                        "value": "quay.io/strimzi/kafka-bridge:0.32.0"
                                    },
                                    {
                                        "name": "STRIMZI_DEFAULT_KANIKO_EXECUTOR_IMAGE",
                                        "value": "quay.io/strimzi/kaniko-executor:0.46.1"
                                    },
                                    {
                                        "name": "STRIMZI_DEFAULT_MAVEN_BUILDER",
                                        "value": "quay.io/strimzi/maven-builder:0.46.1"
                                    },
                                    {
                                        "name": "STRIMZI_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "STRIMZI_LEADER_ELECTION_ENABLED",
                                        "value": "true"
                                    },
                                    {
                                        "name": "STRIMZI_LEADER_ELECTION_LEASE_NAME",
                                        "value": "strimzi-cluster-operator"
                                    },
                                    {
                                        "name": "STRIMZI_LEADER_ELECTION_LEASE_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "STRIMZI_LEADER_ELECTION_IDENTITY",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/strimzi/operator:0.46.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthy",
                                        "port": "http",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "strimzi-cluster-operator",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": "http",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "8",
                                        "memory": "64Gi"
                                    },
                                    "requests": {
                                        "cpu": "4",
                                        "memory": "32Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "strimzi-tmp"
                                    },
                                    {
                                        "mountPath": "/opt/strimzi/custom-config/",
                                        "name": "co-config-volume"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "strimzi-cluster-operator",
                        "serviceAccountName": "strimzi-cluster-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {
                                    "medium": "Memory",
                                    "sizeLimit": "1Mi"
                                },
                                "name": "strimzi-tmp"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "strimzi-cluster-operator"
                                },
                                "name": "co-config-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-05T08:56:16Z",
                        "lastUpdateTime": "2025-08-05T08:57:07Z",
                        "message": "ReplicaSet \"strimzi-cluster-operator-57d8ff798f\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2025-08-05T16:19:45Z",
                        "lastUpdateTime": "2025-08-05T16:19:45Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "wazuh-siem",
                    "meta.helm.sh/release-namespace": "wazuh"
                },
                "creationTimestamp": "2025-08-17T07:17:24Z",
                "generation": 2,
                "labels": {
                    "app": "wazuh-siem-dashboard",
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "name": "wazuh-siem-dashboard",
                "namespace": "wazuh",
                "resourceVersion": "3827088",
                "uid": "134da7dc-8cfd-4917-9499-27bcddc7da38"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "wazuh-siem-dashboard"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "33fa9fcd9b30510dc847b509c5cee98f9c757e2e98ec1d1f2757b0884385d8c9",
                            "kubectl.kubernetes.io/restartedAt": "2025-08-17T10:06:03+02:00"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "wazuh-siem-dashboard"
                        },
                        "name": "wazuh-siem-dashboard"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "INDEXER_URL",
                                        "value": "https://indexer:9200"
                                    },
                                    {
                                        "name": "INDEXER_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "username",
                                                "name": "indexer-cred"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INDEXER_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "password",
                                                "name": "indexer-cred"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DASHBOARD_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "username",
                                                "name": "dashboard-cred"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DASHBOARD_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "password",
                                                "name": "dashboard-cred"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVER_SSL_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "SERVER_SSL_CERTIFICATE",
                                        "value": "/usr/share/wazuh-dashboard/certs/cert.pem"
                                    },
                                    {
                                        "name": "SERVER_SSL_KEY",
                                        "value": "/usr/share/wazuh-dashboard/certs/key.pem"
                                    },
                                    {
                                        "name": "WAZUH_API_URL",
                                        "value": "https://wazuh"
                                    },
                                    {
                                        "name": "API_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "username",
                                                "name": "wazuh-api-cred"
                                            }
                                        }
                                    },
                                    {
                                        "name": "API_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "password",
                                                "name": "wazuh-api-cred"
                                            }
                                        }
                                    }
                                ],
                                "image": "wazuh/wazuh-dashboard:4.11.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "wazuh-dashboard",
                                "ports": [
                                    {
                                        "containerPort": 5601,
                                        "name": "dashboard",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "4Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "securityContext": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/usr/share/wazuh-dashboard/config/opensearch_dashboards.yml",
                                        "name": "config",
                                        "subPath": "opensearch_dashboards.yml"
                                    },
                                    {
                                        "mountPath": "/usr/share/wazuh-dashboard/certs/cert.pem",
                                        "name": "dashboard-certs",
                                        "readOnly": true,
                                        "subPath": "tls.crt"
                                    },
                                    {
                                        "mountPath": "/usr/share/wazuh-dashboard/certs/key.pem",
                                        "name": "dashboard-certs",
                                        "readOnly": true,
                                        "subPath": "tls.key"
                                    },
                                    {
                                        "mountPath": "/usr/share/wazuh-dashboard/certs/root-ca.pem",
                                        "name": "dashboard-certs",
                                        "readOnly": true,
                                        "subPath": "ca.crt"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "wazuh-siem-dashboard-config"
                                },
                                "name": "config"
                            },
                            {
                                "name": "dashboard-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "dashboard-tls"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-08-17T07:17:27Z",
                        "lastUpdateTime": "2025-08-17T07:17:27Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-08-17T07:17:25Z",
                        "lastUpdateTime": "2025-08-17T08:06:06Z",
                        "message": "ReplicaSet \"wazuh-siem-dashboard-7744b94f58\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "wazuh-siem",
                    "meta.helm.sh/release-namespace": "wazuh"
                },
                "creationTimestamp": "2025-08-17T07:17:25Z",
                "generation": 1,
                "labels": {
                    "app": "wazuh-siem-indexer",
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "name": "wazuh-siem-indexer",
                "namespace": "wazuh",
                "resourceVersion": "3816838",
                "uid": "b3b0e1a0-d887-4ee8-8f63-0d64be1fc9e1"
            },
            "spec": {
                "persistentVolumeClaimRetentionPolicy": {
                    "whenDeleted": "Retain",
                    "whenScaled": "Retain"
                },
                "podManagementPolicy": "OrderedReady",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "wazuh-siem-indexer"
                    }
                },
                "serviceName": "wazuh-siem-indexer-nodes",
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "39139db6684750dfe34f28fdc238cc7b9c7dab641921cf855bbf1fd9f6e900ed"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "wazuh-siem-indexer"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "OPENSEARCH_JAVA_OPTS",
                                        "value": "-Xms1g -Xmx1g -Dlog4j2.formatMsgNoLookups=true"
                                    },
                                    {
                                        "name": "CLUSTER_NAME",
                                        "value": "wazuh"
                                    },
                                    {
                                        "name": "NETWORK_HOST",
                                        "value": "0.0.0.0"
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DISCOVERY_SERVICE",
                                        "value": "wazuh-siem-indexer-rest"
                                    },
                                    {
                                        "name": "KUBERNETES_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DISABLE_INSTALL_DEMO_CONFIG",
                                        "value": "true"
                                    }
                                ],
                                "image": "wazuh/wazuh-indexer:4.11.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "wazuh-indexer",
                                "ports": [
                                    {
                                        "containerPort": 9200,
                                        "name": "indexer-rest",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9300,
                                        "name": "indexer-nodes",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "3Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "securityContext": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/wazuh-indexer",
                                        "name": "wazuh-indexer"
                                    },
                                    {
                                        "mountPath": "/usr/share/wazuh-indexer/certs/node-key.pem",
                                        "name": "node-certs",
                                        "readOnly": true,
                                        "subPath": "tls.key"
                                    },
                                    {
                                        "mountPath": "/usr/share/wazuh-indexer/certs/node.pem",
                                        "name": "node-certs",
                                        "readOnly": true,
                                        "subPath": "tls.crt"
                                    },
                                    {
                                        "mountPath": "/usr/share/wazuh-indexer/certs/root-ca.pem",
                                        "name": "node-certs",
                                        "readOnly": true,
                                        "subPath": "ca.crt"
                                    },
                                    {
                                        "mountPath": "/usr/share/wazuh-indexer/certs/admin.pem",
                                        "name": "admin-certs",
                                        "readOnly": true,
                                        "subPath": "tls.crt"
                                    },
                                    {
                                        "mountPath": "/usr/share/wazuh-indexer/certs/admin-key.pem",
                                        "name": "admin-certs",
                                        "readOnly": true,
                                        "subPath": "tls.key"
                                    },
                                    {
                                        "mountPath": "/usr/share/wazuh-indexer/opensearch.yml",
                                        "name": "indexer-conf",
                                        "readOnly": true,
                                        "subPath": "opensearch.yml"
                                    },
                                    {
                                        "mountPath": "/usr/share/wazuh-indexer/opensearch-security/internal_users.yml",
                                        "name": "indexer-conf",
                                        "readOnly": true,
                                        "subPath": "internal_users.yml"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "sh",
                                    "-c",
                                    "chown -R 1000:1000 /var/lib/wazuh-indexer"
                                ],
                                "image": "busybox:stable",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "volume-mount-hack",
                                "resources": {
                                    "limits": {
                                        "memory": "256Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "128Mi"
                                    }
                                },
                                "securityContext": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/wazuh-indexer",
                                        "name": "wazuh-indexer"
                                    }
                                ]
                            },
                            {
                                "command": [
                                    "sysctl",
                                    "-w",
                                    "vm.max_map_count=262144"
                                ],
                                "image": "busybox:stable",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "increase-the-vm-max-map-count",
                                "resources": {
                                    "limits": {
                                        "memory": "256Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "128Mi"
                                    }
                                },
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "admin-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "admin-tls"
                                }
                            },
                            {
                                "name": "node-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "node-tls"
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "wazuh-siem-indexer-config"
                                },
                                "name": "indexer-conf"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate"
                },
                "volumeClaimTemplates": [
                    {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "creationTimestamp": null,
                            "name": "wazuh-indexer"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "50Gi"
                                }
                            },
                            "volumeMode": "Filesystem"
                        },
                        "status": {
                            "phase": "Pending"
                        }
                    }
                ]
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "wazuh-siem-indexer-79c4bf85b4",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "wazuh-siem-indexer-79c4bf85b4",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "wazuh-siem",
                    "meta.helm.sh/release-namespace": "wazuh"
                },
                "creationTimestamp": "2025-08-17T07:17:25Z",
                "generation": 1,
                "labels": {
                    "app": "wazuh-siem-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "node-type": "master"
                },
                "name": "wazuh-siem-manager-master",
                "namespace": "wazuh",
                "resourceVersion": "3816845",
                "uid": "9fd352bc-f36e-4ca9-8b27-5c75e3b1bba0"
            },
            "spec": {
                "persistentVolumeClaimRetentionPolicy": {
                    "whenDeleted": "Retain",
                    "whenScaled": "Retain"
                },
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "wazuh-siem-manager",
                        "node-type": "master"
                    }
                },
                "serviceName": "wazuh-siem-manager-cluster",
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "52c3130a6e3ad152ae33e7ae42e75f74d33d868ce29d262557a13f92b80e0873"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "wazuh-siem-manager",
                            "node-type": "master"
                        },
                        "name": "wazuh-manager-master"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "INDEXER_URL",
                                        "value": "https://indexer:9200"
                                    },
                                    {
                                        "name": "INDEXER_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "username",
                                                "name": "indexer-cred"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INDEXER_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "password",
                                                "name": "indexer-cred"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FILEBEAT_SSL_VERIFICATION_MODE",
                                        "value": "full"
                                    },
                                    {
                                        "name": "SSL_CERTIFICATE_AUTHORITIES",
                                        "value": "/etc/ssl/root-ca.pem"
                                    },
                                    {
                                        "name": "SSL_CERTIFICATE",
                                        "value": "/etc/ssl/filebeat.pem"
                                    },
                                    {
                                        "name": "SSL_KEY",
                                        "value": "/etc/ssl/filebeat.key"
                                    },
                                    {
                                        "name": "API_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "username",
                                                "name": "wazuh-api-cred"
                                            }
                                        }
                                    },
                                    {
                                        "name": "API_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "password",
                                                "name": "wazuh-api-cred"
                                            }
                                        }
                                    },
                                    {
                                        "name": "WAZUH_CLUSTER_KEY",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "key",
                                                "name": "wazuh-cluster-key"
                                            }
                                        }
                                    }
                                ],
                                "image": "wazuh/wazuh-manager:4.11.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "wazuh-manager",
                                "ports": [
                                    {
                                        "containerPort": 1515,
                                        "name": "registration",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 1516,
                                        "name": "cluster",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 55000,
                                        "name": "api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "1Gi"
                                    }
                                },
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "SYS_CHROOT"
                                        ]
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/wazuh-config-mount/etc/",
                                        "name": "result-config"
                                    },
                                    {
                                        "mountPath": "/var/ossec/etc/local_internal_options.conf",
                                        "name": "config",
                                        "readOnly": true,
                                        "subPath": "master_local_internal_options.conf"
                                    },
                                    {
                                        "mountPath": "/etc/ssl/root-ca.pem",
                                        "name": "filebeat-certs",
                                        "readOnly": true,
                                        "subPath": "ca.crt"
                                    },
                                    {
                                        "mountPath": "/etc/ssl/filebeat.pem",
                                        "name": "filebeat-certs",
                                        "readOnly": true,
                                        "subPath": "tls.crt"
                                    },
                                    {
                                        "mountPath": "/etc/ssl/filebeat.key",
                                        "name": "filebeat-certs",
                                        "readOnly": true,
                                        "subPath": "tls.key"
                                    },
                                    {
                                        "mountPath": "/wazuh-config-mount/etc/authd.pass",
                                        "name": "wazuh-authd-pass",
                                        "readOnly": true,
                                        "subPath": "authd.pass"
                                    },
                                    {
                                        "mountPath": "/var/ossec/api/configuration",
                                        "name": "wazuh-siem-manager-master",
                                        "subPath": "wazuh/var/ossec/api/configuration"
                                    },
                                    {
                                        "mountPath": "/var/ossec/etc",
                                        "name": "wazuh-siem-manager-master",
                                        "subPath": "wazuh/var/ossec/etc"
                                    },
                                    {
                                        "mountPath": "/var/ossec/logs",
                                        "name": "wazuh-siem-manager-master",
                                        "subPath": "wazuh/var/ossec/logs"
                                    },
                                    {
                                        "mountPath": "/var/ossec/queue",
                                        "name": "wazuh-siem-manager-master",
                                        "subPath": "wazuh/var/ossec/queue"
                                    },
                                    {
                                        "mountPath": "/var/ossec/var/multigroups",
                                        "name": "wazuh-siem-manager-master",
                                        "subPath": "wazuh/var/ossec/var/multigroups"
                                    },
                                    {
                                        "mountPath": "/var/ossec/integrations",
                                        "name": "wazuh-siem-manager-master",
                                        "subPath": "wazuh/var/ossec/integrations"
                                    },
                                    {
                                        "mountPath": "/var/ossec/active-response/bin",
                                        "name": "wazuh-siem-manager-master",
                                        "subPath": "wazuh/var/ossec/active-response/bin"
                                    },
                                    {
                                        "mountPath": "/var/ossec/agentless",
                                        "name": "wazuh-siem-manager-master",
                                        "subPath": "wazuh/var/ossec/agentless"
                                    },
                                    {
                                        "mountPath": "/var/ossec/wodles",
                                        "name": "wazuh-siem-manager-master",
                                        "subPath": "wazuh/var/ossec/wodles"
                                    },
                                    {
                                        "mountPath": "/etc/filebeat",
                                        "name": "wazuh-siem-manager-master",
                                        "subPath": "filebeat/etc/filebeat"
                                    },
                                    {
                                        "mountPath": "/var/lib/filebeat",
                                        "name": "wazuh-siem-manager-master",
                                        "subPath": "filebeat/var/lib/filebeat"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "sh",
                                    "-c",
                                    "/script.sh"
                                ],
                                "image": "busybox:stable",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "update-index",
                                "resources": {
                                    "limits": {
                                        "memory": "32Mi"
                                    },
                                    "requests": {
                                        "cpu": "5m",
                                        "memory": "16Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/ossec.conf",
                                        "name": "config",
                                        "readOnly": true,
                                        "subPath": "master.conf"
                                    },
                                    {
                                        "mountPath": "/wazuh-config-mount/etc/",
                                        "name": "result-config"
                                    },
                                    {
                                        "mountPath": "/script.sh",
                                        "name": "config",
                                        "readOnly": true,
                                        "subPath": "script.sh"
                                    }
                                ]
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 511,
                                    "name": "wazuh-siem-manager-config"
                                },
                                "name": "config"
                            },
                            {
                                "name": "filebeat-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "filebeat-tls"
                                }
                            },
                            {
                                "name": "wazuh-authd-pass",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "wazuh-authd-pass"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "result-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate"
                },
                "volumeClaimTemplates": [
                    {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "creationTimestamp": null,
                            "name": "wazuh-siem-manager-master"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "50Gi"
                                }
                            },
                            "volumeMode": "Filesystem"
                        },
                        "status": {
                            "phase": "Pending"
                        }
                    }
                ]
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "wazuh-siem-manager-master-86856bb8fc",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "wazuh-siem-manager-master-86856bb8fc",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "wazuh-siem",
                    "meta.helm.sh/release-namespace": "wazuh"
                },
                "creationTimestamp": "2025-08-17T07:17:25Z",
                "generation": 1,
                "labels": {
                    "app": "wazuh-siem-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "node-type": "worker"
                },
                "name": "wazuh-siem-manager-worker",
                "namespace": "wazuh",
                "resourceVersion": "3816850",
                "uid": "a4a3f935-ab90-4f3f-a2f4-8cf370b12b5d"
            },
            "spec": {
                "persistentVolumeClaimRetentionPolicy": {
                    "whenDeleted": "Retain",
                    "whenScaled": "Retain"
                },
                "podManagementPolicy": "Parallel",
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "wazuh-siem-manager",
                        "node-type": "worker"
                    }
                },
                "serviceName": "wazuh-siem-manager-cluster",
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "52c3130a6e3ad152ae33e7ae42e75f74d33d868ce29d262557a13f92b80e0873"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "wazuh-siem-manager",
                            "node-type": "worker"
                        },
                        "name": "wazuh-manager-worker"
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchLabels": {
                                                    "app": "wazuh-siem-manager-worker",
                                                    "node-type": "worker"
                                                }
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 100
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "INDEXER_URL",
                                        "value": "https://indexer:9200"
                                    },
                                    {
                                        "name": "INDEXER_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "username",
                                                "name": "indexer-cred"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INDEXER_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "password",
                                                "name": "indexer-cred"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FILEBEAT_SSL_VERIFICATION_MODE",
                                        "value": "full"
                                    },
                                    {
                                        "name": "WAZUH_CLUSTER_KEY",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "key",
                                                "name": "wazuh-cluster-key"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SSL_CERTIFICATE_AUTHORITIES",
                                        "value": "/etc/ssl/root-ca.pem"
                                    },
                                    {
                                        "name": "SSL_CERTIFICATE",
                                        "value": "/etc/ssl/filebeat.pem"
                                    },
                                    {
                                        "name": "SSL_KEY",
                                        "value": "/etc/ssl/filebeat.key"
                                    }
                                ],
                                "image": "wazuh/wazuh-manager:4.11.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "wazuh-manager",
                                "ports": [
                                    {
                                        "containerPort": 1514,
                                        "name": "agents-events",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 1516,
                                        "name": "cluster",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "1Gi"
                                    }
                                },
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "SYS_CHROOT"
                                        ]
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/wazuh-config-mount/etc/",
                                        "name": "result-config"
                                    },
                                    {
                                        "mountPath": "/var/ossec/etc/local_internal_options.conf",
                                        "name": "config",
                                        "readOnly": true,
                                        "subPath": "master_local_internal_options.conf"
                                    },
                                    {
                                        "mountPath": "/etc/ssl/root-ca.pem",
                                        "name": "filebeat-certs",
                                        "readOnly": true,
                                        "subPath": "ca.crt"
                                    },
                                    {
                                        "mountPath": "/etc/ssl/filebeat.pem",
                                        "name": "filebeat-certs",
                                        "readOnly": true,
                                        "subPath": "tls.crt"
                                    },
                                    {
                                        "mountPath": "/etc/ssl/filebeat.key",
                                        "name": "filebeat-certs",
                                        "readOnly": true,
                                        "subPath": "tls.key"
                                    },
                                    {
                                        "mountPath": "/var/ossec/api/configuration",
                                        "name": "wazuh-siem-manager-worker",
                                        "subPath": "wazuh/var/ossec/api/configuration"
                                    },
                                    {
                                        "mountPath": "/var/ossec/etc",
                                        "name": "wazuh-siem-manager-worker",
                                        "subPath": "wazuh/var/ossec/etc"
                                    },
                                    {
                                        "mountPath": "/var/ossec/logs",
                                        "name": "wazuh-siem-manager-worker",
                                        "subPath": "wazuh/var/ossec/logs"
                                    },
                                    {
                                        "mountPath": "/var/ossec/queue",
                                        "name": "wazuh-siem-manager-worker",
                                        "subPath": "wazuh/var/ossec/queue"
                                    },
                                    {
                                        "mountPath": "/var/ossec/var/multigroups",
                                        "name": "wazuh-siem-manager-worker",
                                        "subPath": "wazuh/var/ossec/var/multigroups"
                                    },
                                    {
                                        "mountPath": "/var/ossec/integrations",
                                        "name": "wazuh-siem-manager-worker",
                                        "subPath": "wazuh/var/ossec/integrations"
                                    },
                                    {
                                        "mountPath": "/var/ossec/active-response/bin",
                                        "name": "wazuh-siem-manager-worker",
                                        "subPath": "wazuh/var/ossec/active-response/bin"
                                    },
                                    {
                                        "mountPath": "/var/ossec/agentless",
                                        "name": "wazuh-siem-manager-worker",
                                        "subPath": "wazuh/var/ossec/agentless"
                                    },
                                    {
                                        "mountPath": "/var/ossec/wodles",
                                        "name": "wazuh-siem-manager-worker",
                                        "subPath": "wazuh/var/ossec/wodles"
                                    },
                                    {
                                        "mountPath": "/etc/filebeat",
                                        "name": "wazuh-siem-manager-worker",
                                        "subPath": "filebeat/etc/filebeat"
                                    },
                                    {
                                        "mountPath": "/var/lib/filebeat",
                                        "name": "wazuh-siem-manager-worker",
                                        "subPath": "filebeat/var/lib/filebeat"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "sh",
                                    "-c",
                                    "/script.sh"
                                ],
                                "image": "busybox:stable",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "update-index",
                                "resources": {
                                    "limits": {
                                        "memory": "32Mi"
                                    },
                                    "requests": {
                                        "cpu": "5m",
                                        "memory": "16Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/ossec.conf",
                                        "name": "config",
                                        "readOnly": true,
                                        "subPath": "worker.conf"
                                    },
                                    {
                                        "mountPath": "/wazuh-config-mount/etc/",
                                        "name": "result-config"
                                    },
                                    {
                                        "mountPath": "/script.sh",
                                        "name": "config",
                                        "readOnly": true,
                                        "subPath": "script.sh"
                                    }
                                ]
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 101
                        },
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 511,
                                    "name": "wazuh-siem-manager-config"
                                },
                                "name": "config"
                            },
                            {
                                "name": "filebeat-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "filebeat-tls"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "result-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                },
                "volumeClaimTemplates": [
                    {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "creationTimestamp": null,
                            "name": "wazuh-siem-manager-worker"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "50Gi"
                                }
                            },
                            "volumeMode": "Filesystem"
                        },
                        "status": {
                            "phase": "Pending"
                        }
                    }
                ]
            },
            "status": {
                "availableReplicas": 2,
                "collisionCount": 0,
                "currentReplicas": 2,
                "currentRevision": "wazuh-siem-manager-worker-6f477ffbb8",
                "observedGeneration": 1,
                "readyReplicas": 2,
                "replicas": 2,
                "updateRevision": "wazuh-siem-manager-worker-6f477ffbb8",
                "updatedReplicas": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "cilium",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cilium-agent",
                    "app.kubernetes.io/part-of": "cilium",
                    "k8s-app": "cilium"
                },
                "name": "cilium",
                "namespace": "kube-system",
                "resourceVersion": "602877",
                "uid": "e8d6eb83-bb75-4f28-b4f8-2c7dd2a27c87"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "cilium"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/port": "9962",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "cilium-agent",
                            "app.kubernetes.io/part-of": "cilium",
                            "k8s-app": "cilium"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchLabels": {
                                                "k8s-app": "cilium"
                                            }
                                        },
                                        "topologyKey": "kubernetes.io/hostname"
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "--config-dir=/tmp/cilium/config-map"
                                ],
                                "command": [
                                    "cilium-agent"
                                ],
                                "env": [
                                    {
                                        "name": "K8S_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CILIUM_K8S_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CILIUM_CLUSTERMESH_CONFIG",
                                        "value": "/var/lib/cilium/clustermesh/"
                                    },
                                    {
                                        "name": "GOMEMLIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "divisor": "1",
                                                "resource": "limits.memory"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBERNETES_SERVICE_HOST",
                                        "value": "localhost"
                                    },
                                    {
                                        "name": "KUBERNETES_SERVICE_PORT",
                                        "value": "7445"
                                    }
                                ],
                                "image": "quay.io/cilium/cilium:v1.17.5@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                "bash",
                                                "-c",
                                                "set -o errexit\nset -o pipefail\nset -o nounset\n\n# When running in AWS ENI mode, it's likely that 'aws-node' has\n# had a chance to install SNAT iptables rules. These can result\n# in dropped traffic, so we should attempt to remove them.\n# We do it using a 'postStart' hook since this may need to run\n# for nodes which might have already been init'ed but may still\n# have dangling rules. This is safe because there are no\n# dependencies on anything that is part of the startup script\n# itself, and can be safely run multiple times per node (e.g. in\n# case of a restart).\nif [[ \"$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')\" != \"0\" ]];\nthen\n    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'\n    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore\nfi\necho 'Done!'\n"
                                            ]
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/cni-uninstall.sh"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 10,
                                    "httpGet": {
                                        "host": "127.0.0.1",
                                        "httpHeaders": [
                                            {
                                                "name": "brief",
                                                "value": "true"
                                            },
                                            {
                                                "name": "require-k8s-connectivity",
                                                "value": "false"
                                            }
                                        ],
                                        "path": "/healthz",
                                        "port": 9879,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "cilium-agent",
                                "ports": [
                                    {
                                        "containerPort": 4244,
                                        "hostPort": 4244,
                                        "name": "peer-service",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9962,
                                        "hostPort": 9962,
                                        "name": "prometheus",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9965,
                                        "hostPort": 9965,
                                        "name": "hubble-metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "host": "127.0.0.1",
                                        "httpHeaders": [
                                            {
                                                "name": "brief",
                                                "value": "true"
                                            }
                                        ],
                                        "path": "/healthz",
                                        "port": 9879,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "CHOWN",
                                            "KILL",
                                            "NET_ADMIN",
                                            "NET_RAW",
                                            "IPC_LOCK",
                                            "SYS_ADMIN",
                                            "SYS_RESOURCE",
                                            "DAC_OVERRIDE",
                                            "FOWNER",
                                            "SETGID",
                                            "SETUID"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "seLinuxOptions": {
                                        "level": "s0",
                                        "type": "spc_t"
                                    }
                                },
                                "startupProbe": {
                                    "failureThreshold": 105,
                                    "httpGet": {
                                        "host": "127.0.0.1",
                                        "httpHeaders": [
                                            {
                                                "name": "brief",
                                                "value": "true"
                                            }
                                        ],
                                        "path": "/healthz",
                                        "port": 9879,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 2,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/cilium/envoy/sockets",
                                        "name": "envoy-sockets"
                                    },
                                    {
                                        "mountPath": "/host/proc/sys/net",
                                        "name": "host-proc-sys-net"
                                    },
                                    {
                                        "mountPath": "/host/proc/sys/kernel",
                                        "name": "host-proc-sys-kernel"
                                    },
                                    {
                                        "mountPath": "/sys/fs/bpf",
                                        "mountPropagation": "HostToContainer",
                                        "name": "bpf-maps"
                                    },
                                    {
                                        "mountPath": "/sys/fs/cgroup",
                                        "name": "cilium-cgroup"
                                    },
                                    {
                                        "mountPath": "/var/run/cilium",
                                        "name": "cilium-run"
                                    },
                                    {
                                        "mountPath": "/var/run/cilium/netns",
                                        "mountPropagation": "HostToContainer",
                                        "name": "cilium-netns"
                                    },
                                    {
                                        "mountPath": "/host/etc/cni/net.d",
                                        "name": "etc-cni-netd"
                                    },
                                    {
                                        "mountPath": "/var/lib/cilium/clustermesh",
                                        "name": "clustermesh-secrets",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/lib/modules",
                                        "name": "lib-modules",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/run/xtables.lock",
                                        "name": "xtables-lock"
                                    },
                                    {
                                        "mountPath": "/var/lib/cilium/tls/hubble",
                                        "name": "hubble-tls",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "initContainers": [
                            {
                                "command": [
                                    "cilium-dbg",
                                    "build-config"
                                ],
                                "env": [
                                    {
                                        "name": "K8S_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CILIUM_K8S_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBERNETES_SERVICE_HOST",
                                        "value": "localhost"
                                    },
                                    {
                                        "name": "KUBERNETES_SERVICE_PORT",
                                        "value": "7445"
                                    }
                                ],
                                "image": "quay.io/cilium/cilium:v1.17.5@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "config",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp"
                                    }
                                ]
                            },
                            {
                                "command": [
                                    "sh",
                                    "-ec",
                                    "cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;\nnsenter --mount=/hostproc/1/ns/mnt \"${BIN_PATH}/cilium-sysctlfix\";\nrm /hostbin/cilium-sysctlfix\n"
                                ],
                                "env": [
                                    {
                                        "name": "BIN_PATH",
                                        "value": "/opt/cni/bin"
                                    }
                                ],
                                "image": "quay.io/cilium/cilium:v1.17.5@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "apply-sysctl-overwrites",
                                "resources": {},
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "SYS_ADMIN",
                                            "SYS_CHROOT",
                                            "SYS_PTRACE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "seLinuxOptions": {
                                        "level": "s0",
                                        "type": "spc_t"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/hostproc",
                                        "name": "hostproc"
                                    },
                                    {
                                        "mountPath": "/hostbin",
                                        "name": "cni-path"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "mount | grep \"/sys/fs/bpf type bpf\" || mount -t bpf bpf /sys/fs/bpf"
                                ],
                                "command": [
                                    "/bin/bash",
                                    "-c",
                                    "--"
                                ],
                                "image": "quay.io/cilium/cilium:v1.17.5@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "mount-bpf-fs",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/sys/fs/bpf",
                                        "mountPropagation": "Bidirectional",
                                        "name": "bpf-maps"
                                    }
                                ]
                            },
                            {
                                "command": [
                                    "/init-container.sh"
                                ],
                                "env": [
                                    {
                                        "name": "CILIUM_ALL_STATE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "clean-cilium-state",
                                                "name": "cilium-config",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "CILIUM_BPF_STATE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "clean-cilium-bpf-state",
                                                "name": "cilium-config",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "WRITE_CNI_CONF_WHEN_READY",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "write-cni-conf-when-ready",
                                                "name": "cilium-config",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBERNETES_SERVICE_HOST",
                                        "value": "localhost"
                                    },
                                    {
                                        "name": "KUBERNETES_SERVICE_PORT",
                                        "value": "7445"
                                    }
                                ],
                                "image": "quay.io/cilium/cilium:v1.17.5@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "clean-cilium-state",
                                "resources": {},
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN",
                                            "SYS_ADMIN",
                                            "SYS_RESOURCE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "seLinuxOptions": {
                                        "level": "s0",
                                        "type": "spc_t"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/sys/fs/bpf",
                                        "name": "bpf-maps"
                                    },
                                    {
                                        "mountPath": "/sys/fs/cgroup",
                                        "mountPropagation": "HostToContainer",
                                        "name": "cilium-cgroup"
                                    },
                                    {
                                        "mountPath": "/var/run/cilium",
                                        "name": "cilium-run"
                                    }
                                ]
                            },
                            {
                                "command": [
                                    "/install-plugin.sh"
                                ],
                                "image": "quay.io/cilium/cilium:v1.17.5@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "install-cni-binaries",
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "10Mi"
                                    }
                                },
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "seLinuxOptions": {
                                        "level": "s0",
                                        "type": "spc_t"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/host/opt/cni/bin",
                                        "name": "cni-path"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "appArmorProfile": {
                                "type": "Unconfined"
                            }
                        },
                        "serviceAccount": "cilium",
                        "serviceAccountName": "cilium",
                        "terminationGracePeriodSeconds": 1,
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/run/cilium",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "cilium-run"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/run/netns",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "cilium-netns"
                            },
                            {
                                "hostPath": {
                                    "path": "/sys/fs/bpf",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "bpf-maps"
                            },
                            {
                                "hostPath": {
                                    "path": "/proc",
                                    "type": "Directory"
                                },
                                "name": "hostproc"
                            },
                            {
                                "hostPath": {
                                    "path": "/sys/fs/cgroup",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "cilium-cgroup"
                            },
                            {
                                "hostPath": {
                                    "path": "/opt/cni/bin",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "cni-path"
                            },
                            {
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "etc-cni-netd"
                            },
                            {
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                },
                                "name": "lib-modules"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                },
                                "name": "xtables-lock"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/run/cilium/envoy/sockets",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "envoy-sockets"
                            },
                            {
                                "name": "clustermesh-secrets",
                                "projected": {
                                    "defaultMode": 256,
                                    "sources": [
                                        {
                                            "secret": {
                                                "name": "cilium-clustermesh",
                                                "optional": true
                                            }
                                        },
                                        {
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "tls.key",
                                                        "path": "common-etcd-client.key"
                                                    },
                                                    {
                                                        "key": "tls.crt",
                                                        "path": "common-etcd-client.crt"
                                                    },
                                                    {
                                                        "key": "ca.crt",
                                                        "path": "common-etcd-client-ca.crt"
                                                    }
                                                ],
                                                "name": "clustermesh-apiserver-remote-cert",
                                                "optional": true
                                            }
                                        },
                                        {
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "tls.key",
                                                        "path": "local-etcd-client.key"
                                                    },
                                                    {
                                                        "key": "tls.crt",
                                                        "path": "local-etcd-client.crt"
                                                    },
                                                    {
                                                        "key": "ca.crt",
                                                        "path": "local-etcd-client-ca.crt"
                                                    }
                                                ],
                                                "name": "clustermesh-apiserver-local-cert",
                                                "optional": true
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "hostPath": {
                                    "path": "/proc/sys/net",
                                    "type": "Directory"
                                },
                                "name": "host-proc-sys-net"
                            },
                            {
                                "hostPath": {
                                    "path": "/proc/sys/kernel",
                                    "type": "Directory"
                                },
                                "name": "host-proc-sys-kernel"
                            },
                            {
                                "name": "hubble-tls",
                                "projected": {
                                    "defaultMode": 256,
                                    "sources": [
                                        {
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "tls.crt",
                                                        "path": "server.crt"
                                                    },
                                                    {
                                                        "key": "tls.key",
                                                        "path": "server.key"
                                                    },
                                                    {
                                                        "key": "ca.crt",
                                                        "path": "client-ca.crt"
                                                    }
                                                ],
                                                "name": "hubble-server-certs",
                                                "optional": true
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 2
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "cilium",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cilium-envoy",
                    "app.kubernetes.io/part-of": "cilium",
                    "k8s-app": "cilium-envoy",
                    "name": "cilium-envoy"
                },
                "name": "cilium-envoy",
                "namespace": "kube-system",
                "resourceVersion": "602970",
                "uid": "a885260f-0407-439f-8589-15e34c2ca5c9"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "cilium-envoy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "cilium-envoy",
                            "app.kubernetes.io/part-of": "cilium",
                            "k8s-app": "cilium-envoy",
                            "name": "cilium-envoy"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "cilium.io/no-schedule",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "true"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchLabels": {
                                                "k8s-app": "cilium"
                                            }
                                        },
                                        "topologyKey": "kubernetes.io/hostname"
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchLabels": {
                                                "k8s-app": "cilium-envoy"
                                            }
                                        },
                                        "topologyKey": "kubernetes.io/hostname"
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "--",
                                    "-c /var/run/cilium/envoy/bootstrap-config.json",
                                    "--base-id 0",
                                    "--log-level info"
                                ],
                                "command": [
                                    "/usr/bin/cilium-envoy-starter"
                                ],
                                "env": [
                                    {
                                        "name": "K8S_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CILIUM_K8S_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBERNETES_SERVICE_HOST",
                                        "value": "localhost"
                                    },
                                    {
                                        "name": "KUBERNETES_SERVICE_PORT",
                                        "value": "7445"
                                    }
                                ],
                                "image": "quay.io/cilium/cilium-envoy:v1.32.6-1749271279-0864395884b263913eac200ee2048fd985f8e626@sha256:9f69e290a7ea3d4edf9192acd81694089af048ae0d8a67fb63bd62dc1d72203e",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 10,
                                    "httpGet": {
                                        "host": "127.0.0.1",
                                        "path": "/healthz",
                                        "port": 9878,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "cilium-envoy",
                                "ports": [
                                    {
                                        "containerPort": 9964,
                                        "hostPort": 9964,
                                        "name": "envoy-metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "host": "127.0.0.1",
                                        "path": "/healthz",
                                        "port": 9878,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN",
                                            "SYS_ADMIN"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "seLinuxOptions": {
                                        "level": "s0",
                                        "type": "spc_t"
                                    }
                                },
                                "startupProbe": {
                                    "failureThreshold": 105,
                                    "httpGet": {
                                        "host": "127.0.0.1",
                                        "path": "/healthz",
                                        "port": 9878,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 2,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/cilium/envoy/sockets",
                                        "name": "envoy-sockets"
                                    },
                                    {
                                        "mountPath": "/var/run/cilium/envoy/artifacts",
                                        "name": "envoy-artifacts",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/cilium/envoy/",
                                        "name": "envoy-config",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/sys/fs/bpf",
                                        "mountPropagation": "HostToContainer",
                                        "name": "bpf-maps"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "appArmorProfile": {
                                "type": "Unconfined"
                            }
                        },
                        "serviceAccount": "cilium-envoy",
                        "serviceAccountName": "cilium-envoy",
                        "terminationGracePeriodSeconds": 1,
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/var/run/cilium/envoy/sockets",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "envoy-sockets"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/run/cilium/envoy/artifacts",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "envoy-artifacts"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 256,
                                    "items": [
                                        {
                                            "key": "bootstrap-config.json",
                                            "path": "bootstrap-config.json"
                                        }
                                    ],
                                    "name": "cilium-envoy-config"
                                },
                                "name": "envoy-config"
                            },
                            {
                                "hostPath": {
                                    "path": "/sys/fs/bpf",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "bpf-maps"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 2
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                },
                "creationTimestamp": "2025-08-01T08:46:14Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "kube-proxy",
                    "tier": "node"
                },
                "name": "kube-proxy",
                "namespace": "kube-system",
                "resourceVersion": "447",
                "uid": "c31d3d0c-7e65-4644-bee5-466ef3ec3fc1"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy",
                        "tier": "node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--cluster-cidr=10.244.0.0/16",
                                    "--conntrack-max-per-core=0",
                                    "--hostname-override=$(NODE_NAME)",
                                    "--kubeconfig=/etc/kubernetes/kubeconfig",
                                    "--proxy-mode=nftables"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    }
                                ],
                                "image": "registry.k8s.io/kube-proxy:v1.33.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kube-proxy",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/lib/modules",
                                        "name": "lib-modules",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/ssl/certs",
                                        "name": "ssl-certs-host",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/kubernetes",
                                        "name": "kubeconfig",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kube-proxy",
                        "serviceAccountName": "kube-proxy",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoExecute",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                },
                                "name": "lib-modules"
                            },
                            {
                                "hostPath": {
                                    "path": "/etc/ssl/certs",
                                    "type": ""
                                },
                                "name": "ssl-certs-host"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "kubeconfig-in-cluster"
                                },
                                "name": "kubeconfig"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "nvidia-device-plugin",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "creationTimestamp": "2025-08-03T06:39:32Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "nvidia-device-plugin",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "nvidia-device-plugin",
                    "app.kubernetes.io/version": "0.17.0",
                    "helm.sh/chart": "nvidia-device-plugin-0.17.0"
                },
                "name": "nvidia-device-plugin",
                "namespace": "kube-system",
                "resourceVersion": "733922",
                "uid": "0bf16e17-63b8-4ed8-8005-7e207f017128"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "nvidia-device-plugin",
                        "app.kubernetes.io/name": "nvidia-device-plugin"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "nvidia-device-plugin",
                            "app.kubernetes.io/name": "nvidia-device-plugin"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "feature.node.kubernetes.io/pci-10de.present",
                                                    "operator": "In",
                                                    "values": [
                                                        "true"
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "feature.node.kubernetes.io/cpu-model.vendor_id",
                                                    "operator": "In",
                                                    "values": [
                                                        "NVIDIA"
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "nvidia.com/gpu.present",
                                                    "operator": "In",
                                                    "values": [
                                                        "true"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "nvidia-device-plugin"
                                ],
                                "env": [
                                    {
                                        "name": "MPS_ROOT",
                                        "value": "/run/nvidia/mps"
                                    },
                                    {
                                        "name": "NVIDIA_VISIBLE_DEVICES",
                                        "value": "all"
                                    },
                                    {
                                        "name": "NVIDIA_DRIVER_CAPABILITIES",
                                        "value": "compute,utility"
                                    }
                                ],
                                "image": "nvcr.io/nvidia/k8s-device-plugin:v0.17.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "nvidia-device-plugin-ctr",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/kubelet/device-plugins",
                                        "name": "device-plugin"
                                    },
                                    {
                                        "mountPath": "/dev/shm",
                                        "name": "mps-shm"
                                    },
                                    {
                                        "mountPath": "/mps",
                                        "name": "mps-root"
                                    },
                                    {
                                        "mountPath": "/var/run/cdi",
                                        "name": "cdi-root"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "runtimeClassName": "nvidia",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "nvidia.com/gpu",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/var/lib/kubelet/device-plugins",
                                    "type": ""
                                },
                                "name": "device-plugin"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/nvidia/mps",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "mps-root"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/nvidia/mps/shm",
                                    "type": ""
                                },
                                "name": "mps-shm"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/run/cdi",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "cdi-root"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "nvidia-device-plugin",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "creationTimestamp": "2025-08-03T06:39:32Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "nvidia-device-plugin",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "nvidia-device-plugin",
                    "app.kubernetes.io/version": "0.17.0",
                    "helm.sh/chart": "nvidia-device-plugin-0.17.0"
                },
                "name": "nvidia-device-plugin-mps-control-daemon",
                "namespace": "kube-system",
                "resourceVersion": "215448",
                "uid": "5a6ad390-1aae-4fd4-9483-9f66ebfaa222"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "nvidia-device-plugin",
                        "app.kubernetes.io/name": "nvidia-device-plugin"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "nvidia-device-plugin",
                            "app.kubernetes.io/name": "nvidia-device-plugin"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "feature.node.kubernetes.io/pci-10de.present",
                                                    "operator": "In",
                                                    "values": [
                                                        "true"
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "feature.node.kubernetes.io/cpu-model.vendor_id",
                                                    "operator": "In",
                                                    "values": [
                                                        "NVIDIA"
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "nvidia.com/gpu.present",
                                                    "operator": "In",
                                                    "values": [
                                                        "true"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "mps-control-daemon"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NVIDIA_VISIBLE_DEVICES",
                                        "value": "all"
                                    },
                                    {
                                        "name": "NVIDIA_DRIVER_CAPABILITIES",
                                        "value": "compute,utility"
                                    }
                                ],
                                "image": "nvcr.io/nvidia/k8s-device-plugin:v0.17.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "mps-control-daemon-ctr",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/dev/shm",
                                        "name": "mps-shm"
                                    },
                                    {
                                        "mountPath": "/mps",
                                        "name": "mps-root"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "mps-control-daemon",
                                    "mount-shm"
                                ],
                                "image": "nvcr.io/nvidia/k8s-device-plugin:v0.17.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "mps-control-daemon-mounts",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/mps",
                                        "mountPropagation": "Bidirectional",
                                        "name": "mps-root"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "nvidia.com/mps.capable": "true"
                        },
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "runtimeClassName": "nvidia",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "nvidia.com/gpu",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/run/nvidia/mps",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "mps-root"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/nvidia/mps/shm",
                                    "type": ""
                                },
                                "name": "mps-shm"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 0,
                "desiredNumberScheduled": 0,
                "numberMisscheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "strimzi.io/discovery": "[ {\n  \"port\" : 9092,\n  \"tls\" : false,\n  \"protocol\" : \"kafka\",\n  \"auth\" : \"none\"\n}, {\n  \"port\" : 9093,\n  \"tls\" : true,\n  \"protocol\" : \"kafka\",\n  \"auth\" : \"none\"\n} ]"
                },
                "creationTimestamp": "2025-08-05T13:50:09Z",
                "labels": {
                    "app.kubernetes.io/instance": "ai-agent-kafka",
                    "app.kubernetes.io/managed-by": "strimzi-cluster-operator",
                    "app.kubernetes.io/name": "kafka",
                    "app.kubernetes.io/part-of": "strimzi-ai-agent-kafka",
                    "strimzi.io/cluster": "ai-agent-kafka",
                    "strimzi.io/component-type": "kafka",
                    "strimzi.io/discovery": "true",
                    "strimzi.io/kind": "Kafka",
                    "strimzi.io/name": "ai-agent-kafka-kafka"
                },
                "name": "ai-agent-kafka-kafka-bootstrap",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "kafka.strimzi.io/v1beta2",
                        "blockOwnerDeletion": false,
                        "controller": false,
                        "kind": "Kafka",
                        "name": "ai-agent-kafka",
                        "uid": "ced44e65-14cd-4eec-8046-9cb903eda53c"
                    }
                ],
                "resourceVersion": "581685",
                "uid": "6e1c7bda-7de3-44bd-a131-ddde54f14832"
            },
            "spec": {
                "clusterIP": "10.105.196.147",
                "clusterIPs": [
                    "10.105.196.147"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "tcp-replication",
                        "port": 9091,
                        "protocol": "TCP",
                        "targetPort": 9091
                    },
                    {
                        "name": "tcp-clients",
                        "port": 9092,
                        "protocol": "TCP",
                        "targetPort": 9092
                    },
                    {
                        "name": "tcp-clientstls",
                        "port": 9093,
                        "protocol": "TCP",
                        "targetPort": 9093
                    }
                ],
                "selector": {
                    "strimzi.io/broker-role": "true",
                    "strimzi.io/cluster": "ai-agent-kafka",
                    "strimzi.io/kind": "Kafka",
                    "strimzi.io/name": "ai-agent-kafka-kafka"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2025-08-05T13:50:09Z",
                "labels": {
                    "app.kubernetes.io/instance": "ai-agent-kafka",
                    "app.kubernetes.io/managed-by": "strimzi-cluster-operator",
                    "app.kubernetes.io/name": "kafka",
                    "app.kubernetes.io/part-of": "strimzi-ai-agent-kafka",
                    "strimzi.io/cluster": "ai-agent-kafka",
                    "strimzi.io/component-type": "kafka",
                    "strimzi.io/kind": "Kafka",
                    "strimzi.io/name": "ai-agent-kafka-kafka"
                },
                "name": "ai-agent-kafka-kafka-brokers",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "kafka.strimzi.io/v1beta2",
                        "blockOwnerDeletion": false,
                        "controller": false,
                        "kind": "Kafka",
                        "name": "ai-agent-kafka",
                        "uid": "ced44e65-14cd-4eec-8046-9cb903eda53c"
                    }
                ],
                "resourceVersion": "581686",
                "uid": "47d1b02e-af96-488f-a3ea-036306336b57"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "tcp-ctrlplane",
                        "port": 9090,
                        "protocol": "TCP",
                        "targetPort": 9090
                    },
                    {
                        "name": "tcp-replication",
                        "port": 9091,
                        "protocol": "TCP",
                        "targetPort": 9091
                    },
                    {
                        "name": "tcp-kafkaagent",
                        "port": 8443,
                        "protocol": "TCP",
                        "targetPort": 8443
                    },
                    {
                        "name": "tcp-clients",
                        "port": 9092,
                        "protocol": "TCP",
                        "targetPort": 9092
                    },
                    {
                        "name": "tcp-clientstls",
                        "port": 9093,
                        "protocol": "TCP",
                        "targetPort": 9093
                    }
                ],
                "publishNotReadyAddresses": true,
                "selector": {
                    "strimzi.io/cluster": "ai-agent-kafka",
                    "strimzi.io/kind": "Kafka",
                    "strimzi.io/name": "ai-agent-kafka-kafka"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"anomaly-results-processor\"},\"name\":\"anomaly-results-processor\",\"namespace\":\"ai-agent\"},\"spec\":{\"ports\":[{\"name\":\"api\",\"port\":8089,\"targetPort\":8089}],\"selector\":{\"app\":\"anomaly-results-processor\"},\"type\":\"ClusterIP\"}}\n"
                },
                "creationTimestamp": "2025-08-18T15:01:50Z",
                "labels": {
                    "app": "anomaly-results-processor"
                },
                "name": "anomaly-results-processor",
                "namespace": "ai-agent",
                "resourceVersion": "4216483",
                "uid": "0c0e01f2-bf51-4bc1-bc29-eebc53e0e554"
            },
            "spec": {
                "clusterIP": "10.107.182.215",
                "clusterIPs": [
                    "10.107.182.215"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "api",
                        "port": 8089,
                        "protocol": "TCP",
                        "targetPort": 8089
                    }
                ],
                "selector": {
                    "app": "anomaly-results-processor"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"8080\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"data-processor\"},\"name\":\"data-processor\",\"namespace\":\"ai-agent\"},\"spec\":{\"ports\":[{\"name\":\"health\",\"port\":8084,\"protocol\":\"TCP\",\"targetPort\":8084}],\"selector\":{\"app\":\"data-processor\"},\"type\":\"ClusterIP\"}}\n",
                    "prometheus.io/path": "/metrics",
                    "prometheus.io/port": "8080",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-06T04:33:31Z",
                "labels": {
                    "app": "data-processor"
                },
                "name": "data-processor",
                "namespace": "ai-agent",
                "resourceVersion": "706076",
                "uid": "39237d16-f6a2-4aca-897c-90e909f87af9"
            },
            "spec": {
                "clusterIP": "10.96.210.249",
                "clusterIPs": [
                    "10.96.210.249"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "health",
                        "port": 8084,
                        "protocol": "TCP",
                        "targetPort": 8084
                    }
                ],
                "selector": {
                    "app": "data-processor"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"delta-morpheus-connector\"},\"name\":\"delta-morpheus-connector\",\"namespace\":\"ai-agent\"},\"spec\":{\"ports\":[{\"name\":\"http-api\",\"port\":8084,\"targetPort\":8084},{\"name\":\"metrics\",\"port\":8085,\"targetPort\":8085}],\"selector\":{\"app\":\"delta-morpheus-connector\"},\"type\":\"ClusterIP\"}}\n"
                },
                "creationTimestamp": "2025-08-07T08:44:51Z",
                "labels": {
                    "app": "delta-morpheus-connector"
                },
                "name": "delta-morpheus-connector",
                "namespace": "ai-agent",
                "resourceVersion": "947777",
                "uid": "73d4766c-a50c-423a-9963-10b327194959"
            },
            "spec": {
                "clusterIP": "10.105.33.181",
                "clusterIPs": [
                    "10.105.33.181"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-api",
                        "port": 8084,
                        "protocol": "TCP",
                        "targetPort": 8084
                    },
                    {
                        "name": "metrics",
                        "port": 8085,
                        "protocol": "TCP",
                        "targetPort": 8085
                    }
                ],
                "selector": {
                    "app": "delta-morpheus-connector"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"enhanced-results-api\",\"component\":\"results-processing\"},\"name\":\"enhanced-results-api\",\"namespace\":\"ai-agent\"},\"spec\":{\"ports\":[{\"name\":\"http-api\",\"nodePort\":30488,\"port\":8088,\"protocol\":\"TCP\",\"targetPort\":8088}],\"selector\":{\"app\":\"enhanced-results-api\"},\"type\":\"NodePort\"}}\n"
                },
                "creationTimestamp": "2025-08-08T16:22:58Z",
                "labels": {
                    "app": "enhanced-results-api",
                    "component": "results-processing"
                },
                "name": "enhanced-results-api",
                "namespace": "ai-agent",
                "resourceVersion": "4418795",
                "uid": "28c9f884-7a3e-432a-9059-20b47a7027d9"
            },
            "spec": {
                "clusterIP": "10.96.125.123",
                "clusterIPs": [
                    "10.96.125.123"
                ],
                "externalTrafficPolicy": "Cluster",
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-api",
                        "nodePort": 30488,
                        "port": 8088,
                        "protocol": "TCP",
                        "targetPort": 8088
                    }
                ],
                "selector": {
                    "app": "enhanced-results-api"
                },
                "sessionAffinity": "None",
                "type": "NodePort"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"enhanced-results-api\"},\"name\":\"enhanced-results-api-nodeport\",\"namespace\":\"ai-agent\"},\"spec\":{\"ports\":[{\"name\":\"http-api\",\"nodePort\":30588,\"port\":8088,\"targetPort\":8088}],\"selector\":{\"app\":\"enhanced-results-api\"},\"type\":\"NodePort\"}}\n"
                },
                "creationTimestamp": "2025-08-08T16:22:59Z",
                "labels": {
                    "app": "enhanced-results-api"
                },
                "name": "enhanced-results-api-nodeport",
                "namespace": "ai-agent",
                "resourceVersion": "1323069",
                "uid": "5b8348bf-9a25-4cea-b085-5d39e2d598df"
            },
            "spec": {
                "clusterIP": "10.102.191.221",
                "clusterIPs": [
                    "10.102.191.221"
                ],
                "externalTrafficPolicy": "Cluster",
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-api",
                        "nodePort": 30588,
                        "port": 8088,
                        "protocol": "TCP",
                        "targetPort": 8088
                    }
                ],
                "selector": {
                    "app": "enhanced-results-api"
                },
                "sessionAffinity": "None",
                "type": "NodePort"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"8081\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"kafka-agent-bridge\"},\"name\":\"kafka-agent-bridge\",\"namespace\":\"ai-agent\"},\"spec\":{\"ports\":[{\"name\":\"health\",\"port\":8080,\"protocol\":\"TCP\",\"targetPort\":8000},{\"name\":\"metrics\",\"port\":8081,\"protocol\":\"TCP\",\"targetPort\":8001}],\"selector\":{\"app\":\"kafka-agent-bridge\"},\"type\":\"ClusterIP\"}}\n",
                    "prometheus.io/path": "/metrics",
                    "prometheus.io/port": "8081",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-06T04:33:48Z",
                "labels": {
                    "app": "kafka-agent-bridge"
                },
                "name": "kafka-agent-bridge",
                "namespace": "ai-agent",
                "resourceVersion": "706169",
                "uid": "a0cc9333-86ef-42f3-8bd4-892381593ddd"
            },
            "spec": {
                "clusterIP": "10.105.160.0",
                "clusterIPs": [
                    "10.105.160.0"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "health",
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": 8000
                    },
                    {
                        "name": "metrics",
                        "port": 8081,
                        "protocol": "TCP",
                        "targetPort": 8001
                    }
                ],
                "selector": {
                    "app": "kafka-agent-bridge"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"morpheus-connector\"},\"name\":\"morpheus-connector\",\"namespace\":\"ai-agent\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":8084,\"targetPort\":8084},{\"name\":\"metrics\",\"port\":8085,\"targetPort\":8085}],\"selector\":{\"app\":\"morpheus-connector\"}}}\n"
                },
                "creationTimestamp": "2025-08-06T04:51:04Z",
                "labels": {
                    "app": "morpheus-connector"
                },
                "name": "morpheus-connector",
                "namespace": "ai-agent",
                "resourceVersion": "708707",
                "uid": "6bf2dfc4-7f92-433c-afb6-14cd12726433"
            },
            "spec": {
                "clusterIP": "10.104.211.5",
                "clusterIPs": [
                    "10.104.211.5"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 8084,
                        "protocol": "TCP",
                        "targetPort": 8084
                    },
                    {
                        "name": "metrics",
                        "port": 8085,
                        "protocol": "TCP",
                        "targetPort": 8085
                    }
                ],
                "selector": {
                    "app": "morpheus-connector"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"morpheus-gpu-connector\"},\"name\":\"morpheus-gpu-connector\",\"namespace\":\"ai-agent\"},\"spec\":{\"ports\":[{\"name\":\"metrics\",\"port\":8080,\"targetPort\":8080},{\"name\":\"health\",\"port\":8081,\"targetPort\":8081}],\"selector\":{\"app\":\"morpheus-gpu-connector\"},\"type\":\"ClusterIP\"}}\n"
                },
                "creationTimestamp": "2025-08-06T07:40:20Z",
                "labels": {
                    "app": "morpheus-gpu-connector"
                },
                "name": "morpheus-gpu-connector",
                "namespace": "ai-agent",
                "resourceVersion": "733338",
                "uid": "5f644621-0501-4a10-81d5-131e77a77f05"
            },
            "spec": {
                "clusterIP": "10.107.132.112",
                "clusterIPs": [
                    "10.107.132.112"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "metrics",
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": 8080
                    },
                    {
                        "name": "health",
                        "port": 8081,
                        "protocol": "TCP",
                        "targetPort": 8081
                    }
                ],
                "selector": {
                    "app": "morpheus-gpu-connector"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"morpheus-triton-connector\"},\"name\":\"morpheus-triton-connector\",\"namespace\":\"ai-agent\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":8084,\"targetPort\":8084},{\"name\":\"metrics\",\"port\":8085,\"targetPort\":8085}],\"selector\":{\"app\":\"morpheus-triton-connector\"},\"type\":\"ClusterIP\"}}\n"
                },
                "creationTimestamp": "2025-08-06T08:22:59Z",
                "labels": {
                    "app": "morpheus-triton-connector"
                },
                "name": "morpheus-triton-connector",
                "namespace": "ai-agent",
                "resourceVersion": "749031",
                "uid": "4952657e-45c0-4a10-8569-359d50fb8ec2"
            },
            "spec": {
                "clusterIP": "10.99.141.96",
                "clusterIPs": [
                    "10.99.141.96"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 8084,
                        "protocol": "TCP",
                        "targetPort": 8084
                    },
                    {
                        "name": "metrics",
                        "port": 8085,
                        "protocol": "TCP",
                        "targetPort": 8085
                    }
                ],
                "selector": {
                    "app": "morpheus-triton-connector"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"8085\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"netflow-generator\"},\"name\":\"netflow-generator\",\"namespace\":\"ai-agent\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":8084,\"protocol\":\"TCP\",\"targetPort\":8084},{\"name\":\"metrics\",\"port\":8085,\"protocol\":\"TCP\",\"targetPort\":8085}],\"selector\":{\"app\":\"netflow-generator\"},\"type\":\"ClusterIP\"}}\n",
                    "prometheus.io/path": "/metrics",
                    "prometheus.io/port": "8085",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-05T13:54:55Z",
                "labels": {
                    "app": "netflow-generator"
                },
                "name": "netflow-generator",
                "namespace": "ai-agent",
                "resourceVersion": "582445",
                "uid": "a916b5fa-565d-48e9-aa02-e34b68bfd09b"
            },
            "spec": {
                "clusterIP": "10.102.220.83",
                "clusterIPs": [
                    "10.102.220.83"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 8084,
                        "protocol": "TCP",
                        "targetPort": 8084
                    },
                    {
                        "name": "metrics",
                        "port": 8085,
                        "protocol": "TCP",
                        "targetPort": 8085
                    }
                ],
                "selector": {
                    "app": "netflow-generator"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"splunk-hec-connector\"},\"name\":\"splunk-hec-connector\",\"namespace\":\"ai-agent\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":8084,\"protocol\":\"TCP\",\"targetPort\":8084},{\"name\":\"metrics\",\"port\":8085,\"protocol\":\"TCP\",\"targetPort\":8085}],\"selector\":{\"app\":\"splunk-hec-connector\"},\"type\":\"ClusterIP\"}}\n"
                },
                "creationTimestamp": "2025-08-18T07:54:06Z",
                "labels": {
                    "app": "splunk-hec-connector"
                },
                "name": "splunk-hec-connector",
                "namespace": "ai-agent",
                "resourceVersion": "4121602",
                "uid": "9eaa8062-bf5a-4681-bb0e-c6a7c4009358"
            },
            "spec": {
                "clusterIP": "10.103.242.140",
                "clusterIPs": [
                    "10.103.242.140"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 8084,
                        "protocol": "TCP",
                        "targetPort": 8084
                    },
                    {
                        "name": "metrics",
                        "port": 8085,
                        "protocol": "TCP",
                        "targetPort": 8085
                    }
                ],
                "selector": {
                    "app": "splunk-hec-connector"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "cert-manager",
                    "meta.helm.sh/release-namespace": "cert-manager"
                },
                "creationTimestamp": "2025-08-14T16:52:48Z",
                "labels": {
                    "app": "cert-manager",
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cert-manager",
                    "app.kubernetes.io/version": "v1.18.2",
                    "helm.sh/chart": "cert-manager-v1.18.2"
                },
                "name": "cert-manager",
                "namespace": "cert-manager",
                "resourceVersion": "3044458",
                "uid": "9172eea7-eff2-4567-8d6f-2cebef9a67e4"
            },
            "spec": {
                "clusterIP": "10.106.52.108",
                "clusterIPs": [
                    "10.106.52.108"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "tcp-prometheus-servicemonitor",
                        "port": 9402,
                        "protocol": "TCP",
                        "targetPort": "http-metrics"
                    }
                ],
                "selector": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "cert-manager"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "cert-manager",
                    "meta.helm.sh/release-namespace": "cert-manager"
                },
                "creationTimestamp": "2025-08-14T16:52:48Z",
                "labels": {
                    "app": "cainjector",
                    "app.kubernetes.io/component": "cainjector",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cainjector",
                    "app.kubernetes.io/version": "v1.18.2",
                    "helm.sh/chart": "cert-manager-v1.18.2"
                },
                "name": "cert-manager-cainjector",
                "namespace": "cert-manager",
                "resourceVersion": "3044453",
                "uid": "e276b430-73d0-45ae-a777-764fbf3ae6ba"
            },
            "spec": {
                "clusterIP": "10.109.224.117",
                "clusterIPs": [
                    "10.109.224.117"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-metrics",
                        "port": 9402,
                        "protocol": "TCP",
                        "targetPort": 9402
                    }
                ],
                "selector": {
                    "app.kubernetes.io/component": "cainjector",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "cainjector"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "cert-manager",
                    "meta.helm.sh/release-namespace": "cert-manager"
                },
                "creationTimestamp": "2025-08-14T16:52:48Z",
                "labels": {
                    "app": "webhook",
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "webhook",
                    "app.kubernetes.io/version": "v1.18.2",
                    "helm.sh/chart": "cert-manager-v1.18.2"
                },
                "name": "cert-manager-webhook",
                "namespace": "cert-manager",
                "resourceVersion": "3044448",
                "uid": "03f51552-ff4a-40a5-ba33-b7bacbd73705"
            },
            "spec": {
                "clusterIP": "10.111.3.75",
                "clusterIPs": [
                    "10.111.3.75"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "https",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": "https"
                    },
                    {
                        "name": "metrics",
                        "port": 9402,
                        "protocol": "TCP",
                        "targetPort": "http-metrics"
                    }
                ],
                "selector": {
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "webhook"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "namecheap-webhook",
                    "meta.helm.sh/release-namespace": "cert-manager"
                },
                "creationTimestamp": "2025-08-14T16:54:58Z",
                "labels": {
                    "app": "cert-manager-webhook-namecheap",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "cert-manager-webhook-namecheap-0.2.2",
                    "heritage": "Helm",
                    "release": "namecheap-webhook"
                },
                "name": "namecheap-webhook-cert-manager-webhook-namecheap",
                "namespace": "cert-manager",
                "resourceVersion": "3045043",
                "uid": "1e8b14ad-4a89-4413-b252-62137f918233"
            },
            "spec": {
                "clusterIP": "10.99.116.78",
                "clusterIPs": [
                    "10.99.116.78"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "https",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": "https"
                    }
                ],
                "selector": {
                    "app": "cert-manager-webhook-namecheap",
                    "release": "namecheap-webhook"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2025-08-11T08:57:49Z",
                "labels": {
                    "kind": "echo"
                },
                "name": "echo-same-node",
                "namespace": "cilium-test-1",
                "resourceVersion": "2094157",
                "uid": "8e77dc57-82a8-45e3-bfd8-5bebd70c0d4e"
            },
            "spec": {
                "clusterIP": "10.111.94.216",
                "clusterIPs": [
                    "10.111.94.216"
                ],
                "externalTrafficPolicy": "Cluster",
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "PreferDualStack",
                "ports": [
                    {
                        "name": "http",
                        "nodePort": 31348,
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "name": "echo-same-node"
                },
                "sessionAffinity": "None",
                "type": "NodePort"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2025-08-01T08:45:30Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                },
                "name": "kubernetes",
                "namespace": "default",
                "resourceVersion": "204",
                "uid": "d2db8807-d67e-4af8-8c15-5983f690f839"
            },
            "spec": {
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "https",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 6443
                    }
                ],
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "morpheus-ai-engine",
                    "meta.helm.sh/release-namespace": "gpu-operator"
                },
                "creationTimestamp": "2025-08-07T07:15:46Z",
                "labels": {
                    "app": "ai-engine",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ai-engine",
                    "version": "v1"
                },
                "name": "ai-engine",
                "namespace": "gpu-operator",
                "resourceVersion": "935129",
                "uid": "63484172-98e4-4869-b70b-7a22e7cf0edf"
            },
            "spec": {
                "clusterIP": "10.102.148.115",
                "clusterIPs": [
                    "10.102.148.115"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 8000,
                        "protocol": "TCP",
                        "targetPort": 8000
                    },
                    {
                        "name": "grpc",
                        "port": 8001,
                        "protocol": "TCP",
                        "targetPort": 8001
                    },
                    {
                        "name": "metrics",
                        "port": 8002,
                        "protocol": "TCP",
                        "targetPort": 8002
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "ai-engine"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "mlflow-barcelona",
                    "meta.helm.sh/release-namespace": "gpu-operator"
                },
                "creationTimestamp": "2025-08-05T16:37:51Z",
                "labels": {
                    "app": "mlflow",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "mlflow",
                    "version": "v1"
                },
                "name": "mlflow",
                "namespace": "gpu-operator",
                "resourceVersion": "605465",
                "uid": "d5a3d994-74f0-4ea3-b995-b4fa78f8a85d"
            },
            "spec": {
                "clusterIP": "10.100.35.98",
                "clusterIPs": [
                    "10.100.35.98"
                ],
                "externalTrafficPolicy": "Cluster",
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "default",
                        "nodePort": 30500,
                        "port": 5000,
                        "protocol": "TCP",
                        "targetPort": 5000
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "mlflow"
                },
                "sessionAffinity": "None",
                "type": "NodePort"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\":\"morpheus-connector-service\",\"namespace\":\"gpu-operator\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":8084}],\"selector\":{\"app\":\"morpheus-connector-gpu\"},\"type\":\"ClusterIP\"}}\n"
                },
                "creationTimestamp": "2025-08-06T04:05:01Z",
                "name": "morpheus-connector-service",
                "namespace": "gpu-operator",
                "resourceVersion": "701995",
                "uid": "974c5a15-df9f-496d-8697-065af86a465c"
            },
            "spec": {
                "clusterIP": "10.104.211.13",
                "clusterIPs": [
                    "10.104.211.13"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 8084,
                        "protocol": "TCP",
                        "targetPort": 8084
                    }
                ],
                "selector": {
                    "app": "morpheus-connector-gpu"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "morpheus-ai-engine",
                    "meta.helm.sh/release-namespace": "gpu-operator",
                    "region": "single-cluster",
                    "service.type": "cross-cluster-access"
                },
                "creationTimestamp": "2025-08-07T07:15:46Z",
                "labels": {
                    "app": "triton-external",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "triton-external",
                    "region": "single-cluster",
                    "version": "v1"
                },
                "name": "triton-external",
                "namespace": "gpu-operator",
                "resourceVersion": "935137",
                "uid": "1df5007e-fced-4bea-9687-ad6da3713aa2"
            },
            "spec": {
                "clusterIP": "10.110.243.211",
                "clusterIPs": [
                    "10.110.243.211"
                ],
                "externalTrafficPolicy": "Cluster",
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "nodePort": 30080,
                        "port": 8000,
                        "protocol": "TCP",
                        "targetPort": 8000
                    },
                    {
                        "name": "grpc",
                        "nodePort": 30081,
                        "port": 8001,
                        "protocol": "TCP",
                        "targetPort": 8001
                    },
                    {
                        "name": "metrics",
                        "nodePort": 30082,
                        "port": 8002,
                        "protocol": "TCP",
                        "targetPort": 8002
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "ai-engine"
                },
                "sessionAffinity": "None",
                "type": "NodePort"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "cilium",
                    "meta.helm.sh/release-namespace": "kube-system",
                    "prometheus.io/port": "9964",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cilium-envoy",
                    "app.kubernetes.io/part-of": "cilium",
                    "io.cilium/app": "proxy",
                    "k8s-app": "cilium-envoy"
                },
                "name": "cilium-envoy",
                "namespace": "kube-system",
                "resourceVersion": "210459",
                "uid": "2865467a-335c-4c24-9f44-2d3328b7c4b3"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "envoy-metrics",
                        "port": 9964,
                        "protocol": "TCP",
                        "targetPort": "envoy-metrics"
                    }
                ],
                "selector": {
                    "k8s-app": "cilium-envoy"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "cilium",
                    "meta.helm.sh/release-namespace": "kube-system",
                    "prometheus.io/port": "9965",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "hubble",
                    "app.kubernetes.io/part-of": "cilium",
                    "k8s-app": "hubble"
                },
                "name": "hubble-metrics",
                "namespace": "kube-system",
                "resourceVersion": "210460",
                "uid": "51288340-fff9-439c-ba28-283d254799a7"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "hubble-metrics",
                        "port": 9965,
                        "protocol": "TCP",
                        "targetPort": "hubble-metrics"
                    }
                ],
                "selector": {
                    "k8s-app": "cilium"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "cilium",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "hubble-peer",
                    "app.kubernetes.io/part-of": "cilium",
                    "k8s-app": "cilium"
                },
                "name": "hubble-peer",
                "namespace": "kube-system",
                "resourceVersion": "210468",
                "uid": "eae54949-315c-46a4-a292-57e84d2bf901"
            },
            "spec": {
                "clusterIP": "10.96.75.237",
                "clusterIPs": [
                    "10.96.75.237"
                ],
                "internalTrafficPolicy": "Local",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "peer-service",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 4244
                    }
                ],
                "selector": {
                    "k8s-app": "cilium"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "cilium",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "hubble-relay",
                    "app.kubernetes.io/part-of": "cilium",
                    "k8s-app": "hubble-relay"
                },
                "name": "hubble-relay",
                "namespace": "kube-system",
                "resourceVersion": "210478",
                "uid": "cad750bd-414e-43fd-b36b-fc296560b3b1"
            },
            "spec": {
                "clusterIP": "10.101.150.14",
                "clusterIPs": [
                    "10.101.150.14"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 80,
                        "protocol": "TCP",
                        "targetPort": "grpc"
                    }
                ],
                "selector": {
                    "k8s-app": "hubble-relay"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "cilium",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "hubble-ui",
                    "app.kubernetes.io/part-of": "cilium",
                    "k8s-app": "hubble-ui"
                },
                "name": "hubble-ui",
                "namespace": "kube-system",
                "resourceVersion": "210473",
                "uid": "f8d57b8c-6353-46be-8ed5-de6d67bedcce"
            },
            "spec": {
                "clusterIP": "10.106.175.91",
                "clusterIPs": [
                    "10.106.175.91"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 80,
                        "protocol": "TCP",
                        "targetPort": 8081
                    }
                ],
                "selector": {
                    "k8s-app": "hubble-ui"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-01T08:46:17Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "name": "kube-dns",
                "namespace": "kube-system",
                "resourceVersion": "309",
                "uid": "cc39e0bb-bfc9-417d-8bce-ed12023fe4a4"
            },
            "spec": {
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "dns",
                        "port": 53,
                        "protocol": "UDP",
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "port": 53,
                        "protocol": "TCP",
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "port": 9153,
                        "protocol": "TCP",
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "minio",
                    "meta.helm.sh/release-namespace": "minio"
                },
                "creationTimestamp": "2025-08-05T14:08:37Z",
                "labels": {
                    "app": "minio",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "minio-5.4.0",
                    "heritage": "Helm",
                    "monitoring": "true",
                    "release": "minio"
                },
                "name": "minio",
                "namespace": "minio",
                "resourceVersion": "584580",
                "uid": "312f9a3d-af6b-4cc5-a495-b8b52dce234e"
            },
            "spec": {
                "clusterIP": "10.102.208.205",
                "clusterIPs": [
                    "10.102.208.205"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 9000,
                        "protocol": "TCP",
                        "targetPort": 9000
                    }
                ],
                "selector": {
                    "app": "minio",
                    "release": "minio"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "minio",
                    "meta.helm.sh/release-namespace": "minio"
                },
                "creationTimestamp": "2025-08-05T14:08:37Z",
                "labels": {
                    "app": "minio",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "minio-5.4.0",
                    "heritage": "Helm",
                    "release": "minio"
                },
                "name": "minio-console",
                "namespace": "minio",
                "resourceVersion": "584585",
                "uid": "9396f172-5b05-4d2f-83cf-8edb7b595df0"
            },
            "spec": {
                "clusterIP": "10.98.89.147",
                "clusterIPs": [
                    "10.98.89.147"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 9001,
                        "protocol": "TCP",
                        "targetPort": 9001
                    }
                ],
                "selector": {
                    "app": "minio",
                    "release": "minio"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "spark-operator",
                    "meta.helm.sh/release-namespace": "spark-operator"
                },
                "creationTimestamp": "2025-08-05T16:40:42Z",
                "labels": {
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "spark-operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "spark-operator",
                    "app.kubernetes.io/version": "2.3.0",
                    "helm.sh/chart": "spark-operator-2.3.0"
                },
                "name": "spark-operator-webhook-svc",
                "namespace": "spark-operator",
                "resourceVersion": "605923",
                "uid": "74770bea-4a39-4b97-bc15-43d66a7a8c35"
            },
            "spec": {
                "clusterIP": "10.96.41.11",
                "clusterIPs": [
                    "10.96.41.11"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "webhook",
                        "port": 9443,
                        "protocol": "TCP",
                        "targetPort": "webhook"
                    }
                ],
                "selector": {
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "spark-operator",
                    "app.kubernetes.io/name": "spark-operator"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "wazuh-siem",
                    "meta.helm.sh/release-namespace": "wazuh"
                },
                "creationTimestamp": "2025-08-17T07:17:24Z",
                "labels": {
                    "app": "wazuh-siem-dashboard",
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "name": "dashboard",
                "namespace": "wazuh",
                "resourceVersion": "3816560",
                "uid": "59af8431-a41e-44ff-aa16-d517a076a9fb"
            },
            "spec": {
                "clusterIP": "10.108.136.84",
                "clusterIPs": [
                    "10.108.136.84"
                ],
                "externalTrafficPolicy": "Cluster",
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "dashboard",
                        "nodePort": 32388,
                        "port": 5601,
                        "protocol": "TCP",
                        "targetPort": 5601
                    }
                ],
                "selector": {
                    "app": "wazuh-siem-dashboard"
                },
                "sessionAffinity": "None",
                "type": "NodePort"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "wazuh-siem",
                    "meta.helm.sh/release-namespace": "wazuh"
                },
                "creationTimestamp": "2025-08-17T07:17:24Z",
                "labels": {
                    "app": "wazuh-siem-indexer",
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "name": "indexer",
                "namespace": "wazuh",
                "resourceVersion": "3816569",
                "uid": "6e080598-22a6-44bd-b986-a3df68c66a64"
            },
            "spec": {
                "clusterIP": "10.106.29.135",
                "clusterIPs": [
                    "10.106.29.135"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "indexer-rest",
                        "port": 9200,
                        "protocol": "TCP",
                        "targetPort": 9200
                    }
                ],
                "selector": {
                    "app": "wazuh-siem-indexer"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "wazuh-siem",
                    "meta.helm.sh/release-namespace": "wazuh"
                },
                "creationTimestamp": "2025-08-17T07:17:24Z",
                "labels": {
                    "app": "wazuh-siem-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "node-type": "master"
                },
                "name": "wazuh",
                "namespace": "wazuh",
                "resourceVersion": "3816563",
                "uid": "924dc806-1ff7-42d0-932c-64a9097339ca"
            },
            "spec": {
                "clusterIP": "10.102.23.131",
                "clusterIPs": [
                    "10.102.23.131"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "registration",
                        "port": 1515,
                        "protocol": "TCP",
                        "targetPort": 1515
                    },
                    {
                        "name": "api",
                        "port": 55000,
                        "protocol": "TCP",
                        "targetPort": 55000
                    }
                ],
                "selector": {
                    "app": "wazuh-siem-manager",
                    "node-type": "master"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "wazuh-siem",
                    "meta.helm.sh/release-namespace": "wazuh"
                },
                "creationTimestamp": "2025-08-17T07:17:24Z",
                "labels": {
                    "app": "wazuh-siem-indexer",
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "name": "wazuh-siem-indexer-nodes",
                "namespace": "wazuh",
                "resourceVersion": "3816544",
                "uid": "0f1bf7f8-3998-4317-80e1-859ff9153642"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "indexer-nodes",
                        "port": 9300,
                        "protocol": "TCP",
                        "targetPort": 9300
                    }
                ],
                "selector": {
                    "app": "wazuh-siem-indexer"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "wazuh-siem",
                    "meta.helm.sh/release-namespace": "wazuh"
                },
                "creationTimestamp": "2025-08-17T07:17:24Z",
                "labels": {
                    "app": "wazuh-siem-manager",
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "name": "wazuh-siem-manager-cluster",
                "namespace": "wazuh",
                "resourceVersion": "3816545",
                "uid": "d554aecb-100a-4ea1-937c-a160df1165a7"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "cluster",
                        "port": 1516,
                        "protocol": "TCP",
                        "targetPort": 1516
                    }
                ],
                "selector": {
                    "app": "wazuh-siem-manager"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "wazuh-siem",
                    "meta.helm.sh/release-namespace": "wazuh"
                },
                "creationTimestamp": "2025-08-17T07:17:24Z",
                "labels": {
                    "app": "wazuh-siem-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "node-type": "worker"
                },
                "name": "wazuh-siem-manager-worker",
                "namespace": "wazuh",
                "resourceVersion": "3816552",
                "uid": "3c258453-0ce9-4b81-ac11-c6c46ce854c0"
            },
            "spec": {
                "clusterIP": "10.101.117.105",
                "clusterIPs": [
                    "10.101.117.105"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "agents-events",
                        "port": 1514,
                        "protocol": "TCP",
                        "targetPort": 1514
                    }
                ],
                "selector": {
                    "app": "wazuh-siem-manager",
                    "node-type": "worker"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "networking.k8s.io/v1",
            "kind": "Ingress",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"Ingress\",\"metadata\":{\"annotations\":{\"nginx.ingress.kubernetes.io/rewrite-target\":\"/\"},\"name\":\"anomaly-results-viewer\",\"namespace\":\"ai-agent\"},\"spec\":{\"rules\":[{\"host\":\"anomaly-results.local\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"anomaly-results-processor\",\"port\":{\"number\":8089}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}}]}}\n",
                    "nginx.ingress.kubernetes.io/rewrite-target": "/"
                },
                "creationTimestamp": "2025-08-18T15:01:50Z",
                "generation": 1,
                "name": "anomaly-results-viewer",
                "namespace": "ai-agent",
                "resourceVersion": "4216488",
                "uid": "e76360c9-0648-41b3-9dbf-21bc0bf2c098"
            },
            "spec": {
                "rules": [
                    {
                        "host": "anomaly-results.local",
                        "http": {
                            "paths": [
                                {
                                    "backend": {
                                        "service": {
                                            "name": "anomaly-results-processor",
                                            "port": {
                                                "number": 8089
                                            }
                                        }
                                    },
                                    "path": "/",
                                    "pathType": "Prefix"
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-05T13:50:09Z",
                "labels": {
                    "app.kubernetes.io/instance": "ai-agent-kafka",
                    "app.kubernetes.io/managed-by": "strimzi-cluster-operator",
                    "app.kubernetes.io/name": "kafka",
                    "app.kubernetes.io/part-of": "strimzi-ai-agent-kafka",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "strimzi.io/cluster": "ai-agent-kafka",
                    "strimzi.io/component-type": "kafka",
                    "strimzi.io/discovery": "true",
                    "strimzi.io/kind": "Kafka",
                    "strimzi.io/name": "ai-agent-kafka-kafka"
                },
                "name": "ai-agent-kafka-kafka-bootstrap",
                "namespace": "ai-agent",
                "resourceVersion": "602838",
                "uid": "43fddb08-0986-4cec-800f-b4ae98b2f19c"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.145",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "ai-agent-kafka-single-role-0",
                                "namespace": "ai-agent",
                                "uid": "bf7e5337-d8ca-437d-bd98-15fbe46930a8"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "tcp-clientstls",
                            "port": 9093,
                            "protocol": "TCP"
                        },
                        {
                            "name": "tcp-clients",
                            "port": 9092,
                            "protocol": "TCP"
                        },
                        {
                            "name": "tcp-replication",
                            "port": 9091,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-05T13:50:15Z"
                },
                "creationTimestamp": "2025-08-05T13:50:09Z",
                "labels": {
                    "app.kubernetes.io/instance": "ai-agent-kafka",
                    "app.kubernetes.io/managed-by": "strimzi-cluster-operator",
                    "app.kubernetes.io/name": "kafka",
                    "app.kubernetes.io/part-of": "strimzi-ai-agent-kafka",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "service.kubernetes.io/headless": "",
                    "strimzi.io/cluster": "ai-agent-kafka",
                    "strimzi.io/component-type": "kafka",
                    "strimzi.io/kind": "Kafka",
                    "strimzi.io/name": "ai-agent-kafka-kafka"
                },
                "name": "ai-agent-kafka-kafka-brokers",
                "namespace": "ai-agent",
                "resourceVersion": "581802",
                "uid": "4c3f548a-d465-4c53-a1c9-99fa03a162ce"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "hostname": "ai-agent-kafka-single-role-0",
                            "ip": "10.244.0.145",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "ai-agent-kafka-single-role-0",
                                "namespace": "ai-agent",
                                "uid": "bf7e5337-d8ca-437d-bd98-15fbe46930a8"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "tcp-kafkaagent",
                            "port": 8443,
                            "protocol": "TCP"
                        },
                        {
                            "name": "tcp-clientstls",
                            "port": 9093,
                            "protocol": "TCP"
                        },
                        {
                            "name": "tcp-clients",
                            "port": 9092,
                            "protocol": "TCP"
                        },
                        {
                            "name": "tcp-ctrlplane",
                            "port": 9090,
                            "protocol": "TCP"
                        },
                        {
                            "name": "tcp-replication",
                            "port": 9091,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-18T15:01:50Z"
                },
                "creationTimestamp": "2025-08-18T15:01:50Z",
                "labels": {
                    "app": "anomaly-results-processor",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "anomaly-results-processor",
                "namespace": "ai-agent",
                "resourceVersion": "4216548",
                "uid": "ceaf80e9-5f90-43e5-8817-5a5f2a8a2a9c"
            },
            "subsets": [
                {
                    "notReadyAddresses": [
                        {
                            "ip": "10.244.0.194",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "anomaly-results-processor-584b847c98-flg68",
                                "namespace": "ai-agent",
                                "uid": "0ed8f9cc-b0e9-431e-a61d-7031df2d63f7"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "api",
                            "port": 8089,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-18T13:24:16Z"
                },
                "creationTimestamp": "2025-08-06T04:33:31Z",
                "labels": {
                    "app": "data-processor",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "data-processor",
                "namespace": "ai-agent",
                "resourceVersion": "4194981",
                "uid": "0eb76bb2-0d7d-4d2e-82a0-a340ed3db788"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.47",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "data-processor-5dcc6f8f86-4zdfr",
                                "namespace": "ai-agent",
                                "uid": "3d0861b0-f13c-4adb-bd0c-9a4a53424c5e"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "health",
                            "port": 8084,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-07T08:44:52Z",
                "labels": {
                    "app": "delta-morpheus-connector",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "delta-morpheus-connector",
                "namespace": "ai-agent",
                "resourceVersion": "4386744",
                "uid": "7ddc4529-b32b-45e6-be03-b1aec00cd0ad"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.170",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "delta-morpheus-connector-5f67b4d569-mxffd",
                                "namespace": "ai-agent",
                                "uid": "4008b2b1-fa6e-4fbf-80ef-b13319993bda"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "http-api",
                            "port": 8084,
                            "protocol": "TCP"
                        },
                        {
                            "name": "metrics",
                            "port": 8085,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-08T16:22:58Z",
                "labels": {
                    "app": "enhanced-results-api",
                    "component": "results-processing",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "enhanced-results-api",
                "namespace": "ai-agent",
                "resourceVersion": "4418943",
                "uid": "3dacd191-2dd8-4df9-984f-f85b0e6e9016"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.87",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "enhanced-results-api-fb475cb7b-x844k",
                                "namespace": "ai-agent",
                                "uid": "9582c176-5af6-4ac6-8372-ccd41353049c"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "http-api",
                            "port": 8088,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-08T16:22:59Z",
                "labels": {
                    "app": "enhanced-results-api",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "enhanced-results-api-nodeport",
                "namespace": "ai-agent",
                "resourceVersion": "4418945",
                "uid": "d03089c1-f6fe-4b42-8c2d-630b26947dcd"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.87",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "enhanced-results-api-fb475cb7b-x844k",
                                "namespace": "ai-agent",
                                "uid": "9582c176-5af6-4ac6-8372-ccd41353049c"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "http-api",
                            "port": 8088,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-06T04:33:48Z",
                "labels": {
                    "app": "kafka-agent-bridge",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "kafka-agent-bridge",
                "namespace": "ai-agent",
                "resourceVersion": "4127004",
                "uid": "1b066fab-18da-49f2-a0f4-0a5f8d390958"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.146",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "kafka-agent-bridge-696499bdd5-m2thk",
                                "namespace": "ai-agent",
                                "uid": "50518839-094f-46ee-b93d-22d8dda5f203"
                            }
                        },
                        {
                            "ip": "10.244.0.20",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "kafka-agent-bridge-696499bdd5-sz7wx",
                                "namespace": "ai-agent",
                                "uid": "bcd6915d-465f-4bbf-834a-71e9f36bc1a7"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "health",
                            "port": 8000,
                            "protocol": "TCP"
                        },
                        {
                            "name": "metrics",
                            "port": 8001,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-06T04:51:04Z",
                "labels": {
                    "app": "morpheus-connector",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "morpheus-connector",
                "namespace": "ai-agent",
                "resourceVersion": "1193655",
                "uid": "761aba21-8fe0-46a5-9be0-9f7839d05a58"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-06T07:40:20Z",
                "labels": {
                    "app": "morpheus-gpu-connector",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "morpheus-gpu-connector",
                "namespace": "ai-agent",
                "resourceVersion": "736805",
                "uid": "297797ad-5ace-4282-ad2d-587803b7375f"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-06T08:22:59Z",
                "labels": {
                    "app": "morpheus-triton-connector",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "morpheus-triton-connector",
                "namespace": "ai-agent",
                "resourceVersion": "4119525",
                "uid": "3825a732-e3c6-4a34-bceb-7e4abdc83cc4"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.37",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "morpheus-triton-connector-6c7dc945db-vr5dd",
                                "namespace": "ai-agent",
                                "uid": "fd7787f8-3c7a-4e40-9c2c-0a0a7cb9b0f6"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "metrics",
                            "port": 8085,
                            "protocol": "TCP"
                        },
                        {
                            "name": "http",
                            "port": 8084,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-05T13:54:55Z",
                "labels": {
                    "app": "netflow-generator",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "netflow-generator",
                "namespace": "ai-agent",
                "resourceVersion": "4126687",
                "uid": "b2501ac1-da75-4e53-8058-e8fdee211ddd"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.183",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "netflow-generator-7c5ddd78bd-wzxdz",
                                "namespace": "ai-agent",
                                "uid": "b5935404-2eb6-4f75-a753-a312f8788fff"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "metrics",
                            "port": 8085,
                            "protocol": "TCP"
                        },
                        {
                            "name": "http",
                            "port": 8084,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-18T07:54:06Z",
                "labels": {
                    "app": "splunk-hec-connector",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "splunk-hec-connector",
                "namespace": "ai-agent",
                "resourceVersion": "4197726",
                "uid": "9d57e8e5-ea15-4616-89a1-7234bdf53f4e"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-14T16:52:53Z"
                },
                "creationTimestamp": "2025-08-14T16:52:48Z",
                "labels": {
                    "app": "cert-manager",
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cert-manager",
                    "app.kubernetes.io/version": "v1.18.2",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "helm.sh/chart": "cert-manager-v1.18.2"
                },
                "name": "cert-manager",
                "namespace": "cert-manager",
                "resourceVersion": "3044566",
                "uid": "916762bf-282a-439f-9cc6-10d8fb581431"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.225",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "cert-manager-58dd99f969-zlggs",
                                "namespace": "cert-manager",
                                "uid": "39b93c5b-34c2-45f2-a8be-0cd3c7a1c3db"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "tcp-prometheus-servicemonitor",
                            "port": 9402,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-14T16:52:53Z"
                },
                "creationTimestamp": "2025-08-14T16:52:48Z",
                "labels": {
                    "app": "cainjector",
                    "app.kubernetes.io/component": "cainjector",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cainjector",
                    "app.kubernetes.io/version": "v1.18.2",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "helm.sh/chart": "cert-manager-v1.18.2"
                },
                "name": "cert-manager-cainjector",
                "namespace": "cert-manager",
                "resourceVersion": "3044563",
                "uid": "03ad4eb6-4f6e-4781-a627-3dc7d3cfa6fb"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.52",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "cert-manager-cainjector-55cd9f77b5-r94rf",
                                "namespace": "cert-manager",
                                "uid": "bd4b4b07-20bf-45bb-ba0a-995dff76af81"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "http-metrics",
                            "port": 9402,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-14T16:52:59Z"
                },
                "creationTimestamp": "2025-08-14T16:52:48Z",
                "labels": {
                    "app": "webhook",
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "webhook",
                    "app.kubernetes.io/version": "v1.18.2",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "helm.sh/chart": "cert-manager-v1.18.2"
                },
                "name": "cert-manager-webhook",
                "namespace": "cert-manager",
                "resourceVersion": "3044601",
                "uid": "ea3d1c6e-ad7c-444a-8b0d-c60a55930600"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.91",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "cert-manager-webhook-7987476d56-75d4w",
                                "namespace": "cert-manager",
                                "uid": "c58e88c9-62e6-4eb4-b142-ac17607eaf17"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "https",
                            "port": 10250,
                            "protocol": "TCP"
                        },
                        {
                            "name": "metrics",
                            "port": 9402,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-14T16:55:04Z"
                },
                "creationTimestamp": "2025-08-14T16:54:58Z",
                "labels": {
                    "app": "cert-manager-webhook-namecheap",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "cert-manager-webhook-namecheap-0.2.2",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "heritage": "Helm",
                    "release": "namecheap-webhook"
                },
                "name": "namecheap-webhook-cert-manager-webhook-namecheap",
                "namespace": "cert-manager",
                "resourceVersion": "3045158",
                "uid": "36977098-e0b2-4e40-ab7e-bd40a2a44b74"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.181",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "namecheap-webhook-cert-manager-webhook-namecheap-65ff5fc9crktlr",
                                "namespace": "cert-manager",
                                "uid": "f2a3817b-d3bc-40a1-bb16-05a455cdb50e"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "https",
                            "port": 443,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-11T08:57:49Z"
                },
                "creationTimestamp": "2025-08-11T08:57:49Z",
                "labels": {
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "kind": "echo"
                },
                "name": "echo-same-node",
                "namespace": "cilium-test-1",
                "resourceVersion": "2094159",
                "uid": "e646d1e2-81e1-4c76-bad6-9ea6420c4d23"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-01T08:45:30Z",
                "labels": {
                    "endpointslice.kubernetes.io/skip-mirror": "true"
                },
                "name": "kubernetes",
                "namespace": "default",
                "resourceVersion": "733797",
                "uid": "4e789f91-ff34-4bd9-86a1-ca0eda3cf5cb"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.0.0.8"
                        }
                    ],
                    "ports": [
                        {
                            "name": "https",
                            "port": 6443,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-07T08:15:46Z"
                },
                "creationTimestamp": "2025-08-07T07:15:46Z",
                "labels": {
                    "app": "ai-engine",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ai-engine",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "version": "v1"
                },
                "name": "ai-engine",
                "namespace": "gpu-operator",
                "resourceVersion": "943714",
                "uid": "c2d6aad0-8f67-49e7-9ffc-e3c2962c8a48"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.9",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "ai-engine-c974b49c4-8k7mb",
                                "namespace": "gpu-operator",
                                "uid": "f68f8359-9a6b-4380-88bd-c61b2a44cfe9"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "grpc",
                            "port": 8001,
                            "protocol": "TCP"
                        },
                        {
                            "name": "http",
                            "port": 8000,
                            "protocol": "TCP"
                        },
                        {
                            "name": "metrics",
                            "port": 8002,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-05T16:38:39Z"
                },
                "creationTimestamp": "2025-08-05T16:37:51Z",
                "labels": {
                    "app": "mlflow",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "mlflow",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "version": "v1"
                },
                "name": "mlflow",
                "namespace": "gpu-operator",
                "resourceVersion": "605601",
                "uid": "db1a7766-2ac4-4db7-a00c-2115a0e64b70"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.247",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "mlflow-c95b7bb4c-pgdt2",
                                "namespace": "gpu-operator",
                                "uid": "c3131a7a-a2b3-4970-8702-de1410ddd8af"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "default",
                            "port": 5000,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-06T04:05:01Z",
                "labels": {
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "morpheus-connector-service",
                "namespace": "gpu-operator",
                "resourceVersion": "704302",
                "uid": "45d2269c-6ad1-4ec2-a1c7-d59d227eaf11"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-07T08:15:46Z"
                },
                "creationTimestamp": "2025-08-07T07:15:46Z",
                "labels": {
                    "app": "triton-external",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "triton-external",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "region": "single-cluster",
                    "version": "v1"
                },
                "name": "triton-external",
                "namespace": "gpu-operator",
                "resourceVersion": "943713",
                "uid": "78c9525c-f72a-4b7a-a150-3b6066c7e66c"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.9",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "ai-engine-c974b49c4-8k7mb",
                                "namespace": "gpu-operator",
                                "uid": "f68f8359-9a6b-4380-88bd-c61b2a44cfe9"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "grpc",
                            "port": 8001,
                            "protocol": "TCP"
                        },
                        {
                            "name": "http",
                            "port": 8000,
                            "protocol": "TCP"
                        },
                        {
                            "name": "metrics",
                            "port": 8002,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-05T16:19:55Z"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cilium-envoy",
                    "app.kubernetes.io/part-of": "cilium",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "io.cilium/app": "proxy",
                    "k8s-app": "cilium-envoy",
                    "service.kubernetes.io/headless": ""
                },
                "name": "cilium-envoy",
                "namespace": "kube-system",
                "resourceVersion": "602969",
                "uid": "381ef4ae-cec5-44ad-a9be-1407303eb6d3"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.0.0.8",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "cilium-envoy-cfpmg",
                                "namespace": "kube-system",
                                "uid": "72561d68-135e-4866-9597-893157d5982d"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "envoy-metrics",
                            "port": 9964,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-05T16:19:39Z"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "hubble",
                    "app.kubernetes.io/part-of": "cilium",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "k8s-app": "hubble",
                    "service.kubernetes.io/headless": ""
                },
                "name": "hubble-metrics",
                "namespace": "kube-system",
                "resourceVersion": "602874",
                "uid": "2c851b2c-7e25-4830-a2c4-b7fe49043d5f"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.0.0.8",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "cilium-2zfdk",
                                "namespace": "kube-system",
                                "uid": "e7090c50-dca2-4fae-9985-7b17d42bb074"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "hubble-metrics",
                            "port": 9965,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-05T16:19:39Z"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "hubble-peer",
                    "app.kubernetes.io/part-of": "cilium",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "k8s-app": "cilium"
                },
                "name": "hubble-peer",
                "namespace": "kube-system",
                "resourceVersion": "602872",
                "uid": "70258a35-b612-4112-b8af-49ba79795add"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.0.0.8",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "cilium-2zfdk",
                                "namespace": "kube-system",
                                "uid": "e7090c50-dca2-4fae-9985-7b17d42bb074"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "peer-service",
                            "port": 4244,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-05T16:20:27Z"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "hubble-relay",
                    "app.kubernetes.io/part-of": "cilium",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "k8s-app": "hubble-relay"
                },
                "name": "hubble-relay",
                "namespace": "kube-system",
                "resourceVersion": "603055",
                "uid": "7a14db0c-c4d3-44fb-a2c9-f7070bee5f4c"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.86",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "hubble-relay-697879c474-47dwg",
                                "namespace": "kube-system",
                                "uid": "9bde7ed4-bfee-445f-941c-bf02fb347130"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "port": 4245,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "hubble-ui",
                    "app.kubernetes.io/part-of": "cilium",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "k8s-app": "hubble-ui"
                },
                "name": "hubble-ui",
                "namespace": "kube-system",
                "resourceVersion": "602922",
                "uid": "5823f5ea-e8b8-49e8-990a-f004a629ed83"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.254",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "hubble-ui-76d4965bb6-bqdhk",
                                "namespace": "kube-system",
                                "uid": "bd9cdada-fed5-4496-b1c3-6bcca53c5ab6"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "http",
                            "port": 8081,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-01T08:46:17Z",
                "labels": {
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "name": "kube-dns",
                "namespace": "kube-system",
                "resourceVersion": "602905",
                "uid": "72f7a76b-af3e-45d7-8a70-3a49b7f46d65"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.252",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "coredns-578d4f8ffc-nw4nk",
                                "namespace": "kube-system",
                                "uid": "9c4d589b-be93-4b87-a242-6cb1b495ae40"
                            }
                        },
                        {
                            "ip": "10.244.0.54",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "coredns-578d4f8ffc-sgk8h",
                                "namespace": "kube-system",
                                "uid": "9fbac88a-ca2a-4efa-a125-68d4d73aec88"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "dns-tcp",
                            "port": 53,
                            "protocol": "TCP"
                        },
                        {
                            "name": "dns",
                            "port": 53,
                            "protocol": "UDP"
                        },
                        {
                            "name": "metrics",
                            "port": 9153,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-05T14:08:48Z"
                },
                "creationTimestamp": "2025-08-05T14:08:37Z",
                "labels": {
                    "app": "minio",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "minio-5.4.0",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "heritage": "Helm",
                    "monitoring": "true",
                    "release": "minio"
                },
                "name": "minio",
                "namespace": "minio",
                "resourceVersion": "584654",
                "uid": "c2f8aec9-5462-4aef-b449-31a8b4a0543d"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.235",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "minio-68f476c967-wd2qb",
                                "namespace": "minio",
                                "uid": "aff39c0c-1a8e-4e56-968b-2320510e497e"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "http",
                            "port": 9000,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-05T14:08:48Z"
                },
                "creationTimestamp": "2025-08-05T14:08:37Z",
                "labels": {
                    "app": "minio",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "minio-5.4.0",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "heritage": "Helm",
                    "release": "minio"
                },
                "name": "minio-console",
                "namespace": "minio",
                "resourceVersion": "584657",
                "uid": "5a5d52b7-10c9-4add-b32d-f5ef16608f11"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.235",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "minio-68f476c967-wd2qb",
                                "namespace": "minio",
                                "uid": "aff39c0c-1a8e-4e56-968b-2320510e497e"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "http",
                            "port": 9001,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-05T16:40:42Z",
                "labels": {
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "spark-operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "spark-operator",
                    "app.kubernetes.io/version": "2.3.0",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "helm.sh/chart": "spark-operator-2.3.0"
                },
                "name": "spark-operator-webhook-svc",
                "namespace": "spark-operator",
                "resourceVersion": "950447",
                "uid": "b9ba0d47-6486-45de-b4aa-19dc7938706e"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.144",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "spark-operator-webhook-7d76df45bf-z7db7",
                                "namespace": "spark-operator",
                                "uid": "e1b67320-8b82-4605-b9b2-d46ddbe5b0b6"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "webhook",
                            "port": 9443,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2025-08-17T07:17:24Z",
                "labels": {
                    "app": "wazuh-siem-dashboard",
                    "app.kubernetes.io/managed-by": "Helm",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "dashboard",
                "namespace": "wazuh",
                "resourceVersion": "3828191",
                "uid": "e0bd42ea-3494-44db-91fe-e3cf31c71b27"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.234",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "wazuh-siem-dashboard-7744b94f58-wmlft",
                                "namespace": "wazuh",
                                "uid": "472eb963-8bfa-4110-897d-c04fbe496508"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "dashboard",
                            "port": 5601,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-17T07:17:36Z"
                },
                "creationTimestamp": "2025-08-17T07:17:24Z",
                "labels": {
                    "app": "wazuh-siem-indexer",
                    "app.kubernetes.io/managed-by": "Helm",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller"
                },
                "name": "indexer",
                "namespace": "wazuh",
                "resourceVersion": "3816834",
                "uid": "79487b13-43f7-476a-8995-dcf00288023d"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.122",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "wazuh-siem-indexer-0",
                                "namespace": "wazuh",
                                "uid": "da7d93e2-d355-420b-a054-5f6fe5f975c2"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "indexer-rest",
                            "port": 9200,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-17T07:17:36Z"
                },
                "creationTimestamp": "2025-08-17T07:17:24Z",
                "labels": {
                    "app": "wazuh-siem-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "node-type": "master"
                },
                "name": "wazuh",
                "namespace": "wazuh",
                "resourceVersion": "3816842",
                "uid": "e3aa2fd2-c502-4917-a0f6-6d164e485447"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.31",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "wazuh-siem-manager-master-0",
                                "namespace": "wazuh",
                                "uid": "83e1cf50-0233-46c5-8ef0-02f36ca9600c"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "api",
                            "port": 55000,
                            "protocol": "TCP"
                        },
                        {
                            "name": "registration",
                            "port": 1515,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-17T07:17:36Z"
                },
                "creationTimestamp": "2025-08-17T07:17:24Z",
                "labels": {
                    "app": "wazuh-siem-indexer",
                    "app.kubernetes.io/managed-by": "Helm",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "service.kubernetes.io/headless": ""
                },
                "name": "wazuh-siem-indexer-nodes",
                "namespace": "wazuh",
                "resourceVersion": "3816835",
                "uid": "3fbe9e60-4678-41ed-abca-52010bbc7d50"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "hostname": "wazuh-siem-indexer-0",
                            "ip": "10.244.0.122",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "wazuh-siem-indexer-0",
                                "namespace": "wazuh",
                                "uid": "da7d93e2-d355-420b-a054-5f6fe5f975c2"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "indexer-nodes",
                            "port": 9300,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-17T07:17:36Z"
                },
                "creationTimestamp": "2025-08-17T07:17:24Z",
                "labels": {
                    "app": "wazuh-siem-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "service.kubernetes.io/headless": ""
                },
                "name": "wazuh-siem-manager-cluster",
                "namespace": "wazuh",
                "resourceVersion": "3816846",
                "uid": "743a9e57-5c96-4ec8-a774-dffe77f94fcc"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "hostname": "wazuh-siem-manager-worker-0",
                            "ip": "10.244.0.25",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "wazuh-siem-manager-worker-0",
                                "namespace": "wazuh",
                                "uid": "22658eb9-2d2b-4ccb-8888-1b97c540ea4c"
                            }
                        },
                        {
                            "hostname": "wazuh-siem-manager-master-0",
                            "ip": "10.244.0.31",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "wazuh-siem-manager-master-0",
                                "namespace": "wazuh",
                                "uid": "83e1cf50-0233-46c5-8ef0-02f36ca9600c"
                            }
                        },
                        {
                            "hostname": "wazuh-siem-manager-worker-1",
                            "ip": "10.244.0.44",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "wazuh-siem-manager-worker-1",
                                "namespace": "wazuh",
                                "uid": "895a006a-9770-46b0-bfba-a6652d83a35d"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "cluster",
                            "port": 1516,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-08-17T07:17:36Z"
                },
                "creationTimestamp": "2025-08-17T07:17:24Z",
                "labels": {
                    "app": "wazuh-siem-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "endpoints.kubernetes.io/managed-by": "endpoint-controller",
                    "node-type": "worker"
                },
                "name": "wazuh-siem-manager-worker",
                "namespace": "wazuh",
                "resourceVersion": "3816847",
                "uid": "df08fda2-fe08-49f8-bd88-df24ab484b85"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "10.244.0.25",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "wazuh-siem-manager-worker-0",
                                "namespace": "wazuh",
                                "uid": "22658eb9-2d2b-4ccb-8888-1b97c540ea4c"
                            }
                        },
                        {
                            "ip": "10.244.0.44",
                            "nodeName": "talos-13b-zf7",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "wazuh-siem-manager-worker-1",
                                "namespace": "wazuh",
                                "uid": "895a006a-9770-46b0-bfba-a6652d83a35d"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "agents-events",
                            "port": 1514,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "strimzi.io/connect-build-revision": "4c26ea73e0b19972"
                },
                "creationTimestamp": "2025-08-19T12:42:54Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "ai-agent-kafka-connect",
                    "app.kubernetes.io/managed-by": "strimzi-cluster-operator",
                    "app.kubernetes.io/name": "kafka-connect-build",
                    "app.kubernetes.io/part-of": "strimzi-ai-agent-kafka-connect",
                    "strimzi.io/cluster": "ai-agent-kafka-connect",
                    "strimzi.io/component-type": "kafka-connect-build",
                    "strimzi.io/kind": "KafkaConnect",
                    "strimzi.io/name": "ai-agent-kafka-connect-connect-build"
                },
                "name": "ai-agent-kafka-connect-connect-build",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "kafka.strimzi.io/v1beta2",
                        "blockOwnerDeletion": false,
                        "controller": false,
                        "kind": "KafkaConnect",
                        "name": "ai-agent-kafka-connect",
                        "uid": "43c9f239-06cf-461c-9371-f7ae03499e36"
                    }
                ],
                "resourceVersion": "4497283",
                "uid": "017d568f-9a33-4a1a-b1c6-58c81bfb7d6e"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--dockerfile=/dockerfile/Dockerfile",
                            "--image-name-with-digest-file=/dev/termination-log",
                            "--destination=ai-agent-kafka-connect:latest"
                        ],
                        "image": "quay.io/strimzi/kaniko-executor:0.46.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ai-agent-kafka-connect-connect-build",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/dockerfile",
                                "name": "dockerfile"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6qjr7",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Never",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ai-agent-kafka-connect-connect-build",
                "serviceAccountName": "ai-agent-kafka-connect-connect-build",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "Dockerfile",
                                    "path": "Dockerfile"
                                }
                            ],
                            "name": "ai-agent-kafka-connect-connect-dockerfile"
                        },
                        "name": "dockerfile"
                    },
                    {
                        "name": "kube-api-access-6qjr7",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T12:43:00Z",
                        "status": "False",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T12:42:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T12:42:58Z",
                        "reason": "PodFailed",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T12:42:58Z",
                        "reason": "PodFailed",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T12:42:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://ce33094a0b4a4eb3169b220ab4b552f77bd288c575edafcbf30af758f928f17e",
                        "image": "quay.io/strimzi/kaniko-executor:0.46.1",
                        "imageID": "quay.io/strimzi/kaniko-executor@sha256:ef1a39c363e145041d80103c3c12da9429ce06cf21dff6fb1fb75d0c0ed9c35b",
                        "lastState": {},
                        "name": "ai-agent-kafka-connect-connect-build",
                        "ready": false,
                        "resources": {},
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://ce33094a0b4a4eb3169b220ab4b552f77bd288c575edafcbf30af758f928f17e",
                                "exitCode": 1,
                                "finishedAt": "2025-08-19T12:42:57Z",
                                "reason": "Error",
                                "startedAt": "2025-08-19T12:42:56Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/dockerfile",
                                "name": "dockerfile"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6qjr7",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Failed",
                "podIP": "10.244.0.55",
                "podIPs": [
                    {
                        "ip": "10.244.0.55"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-19T12:42:54Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "strimzi.io/cluster-ca-cert-generation": "0",
                    "strimzi.io/cluster-ca-key-generation": "0",
                    "strimzi.io/server-cert-hash": "23c64466a33c3057"
                },
                "creationTimestamp": "2025-08-18T07:46:56Z",
                "generateName": "ai-agent-kafka-entity-operator-59c6468945-",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "ai-agent-kafka",
                    "app.kubernetes.io/managed-by": "strimzi-cluster-operator",
                    "app.kubernetes.io/name": "entity-operator",
                    "app.kubernetes.io/part-of": "strimzi-ai-agent-kafka",
                    "pod-template-hash": "59c6468945",
                    "strimzi.io/cluster": "ai-agent-kafka",
                    "strimzi.io/component-type": "entity-operator",
                    "strimzi.io/kind": "Kafka",
                    "strimzi.io/name": "ai-agent-kafka-entity-operator"
                },
                "name": "ai-agent-kafka-entity-operator-59c6468945-g6z9c",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ai-agent-kafka-entity-operator-59c6468945",
                        "uid": "a6b3ae71-8c82-46c2-8fa8-cb3de6e8c721"
                    }
                ],
                "resourceVersion": "4119940",
                "uid": "3251790b-b2bf-4836-8379-e1f9761f7266"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "/opt/strimzi/bin/topic_operator_run.sh"
                        ],
                        "env": [
                            {
                                "name": "STRIMZI_RESOURCE_LABELS",
                                "value": "strimzi.io/cluster=ai-agent-kafka"
                            },
                            {
                                "name": "STRIMZI_KAFKA_BOOTSTRAP_SERVERS",
                                "value": "ai-agent-kafka-kafka-bootstrap:9091"
                            },
                            {
                                "name": "STRIMZI_NAMESPACE",
                                "value": "ai-agent"
                            },
                            {
                                "name": "STRIMZI_SECURITY_PROTOCOL",
                                "value": "SSL"
                            },
                            {
                                "name": "STRIMZI_TLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "STRIMZI_GC_LOG_ENABLED",
                                "value": "false"
                            }
                        ],
                        "image": "quay.io/strimzi/operator:0.46.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthy",
                                "port": "healthcheck",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "topic-operator",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "healthcheck",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": "healthcheck",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {},
                        "startupProbe": {
                            "failureThreshold": 12,
                            "httpGet": {
                                "path": "/healthy",
                                "port": "healthcheck",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "strimzi-to-tmp"
                            },
                            {
                                "mountPath": "/opt/topic-operator/custom-config/",
                                "name": "entity-topic-operator-metrics-and-logging"
                            },
                            {
                                "mountPath": "/etc/eto-certs/",
                                "name": "eto-certs"
                            },
                            {
                                "mountPath": "/etc/tls-sidecar/cluster-ca-certs/",
                                "name": "cluster-ca-certs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-dqs5q",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "/opt/strimzi/bin/user_operator_run.sh"
                        ],
                        "env": [
                            {
                                "name": "STRIMZI_KAFKA_BOOTSTRAP_SERVERS",
                                "value": "ai-agent-kafka-kafka-bootstrap:9091"
                            },
                            {
                                "name": "STRIMZI_NAMESPACE",
                                "value": "ai-agent"
                            },
                            {
                                "name": "STRIMZI_LABELS",
                                "value": "strimzi.io/cluster=ai-agent-kafka"
                            },
                            {
                                "name": "STRIMZI_CA_KEY_NAME",
                                "value": "ai-agent-kafka-clients-ca"
                            },
                            {
                                "name": "STRIMZI_CA_CERT_NAME",
                                "value": "ai-agent-kafka-clients-ca-cert"
                            },
                            {
                                "name": "STRIMZI_CA_NAMESPACE",
                                "value": "ai-agent"
                            },
                            {
                                "name": "STRIMZI_CA_VALIDITY",
                                "value": "365"
                            },
                            {
                                "name": "STRIMZI_CA_RENEWAL",
                                "value": "30"
                            },
                            {
                                "name": "STRIMZI_CLUSTER_CA_CERT_SECRET_NAME",
                                "value": "ai-agent-kafka-cluster-ca-cert"
                            },
                            {
                                "name": "STRIMZI_EO_KEY_SECRET_NAME",
                                "value": "ai-agent-kafka-entity-user-operator-certs"
                            },
                            {
                                "name": "STRIMZI_GC_LOG_ENABLED",
                                "value": "false"
                            },
                            {
                                "name": "STRIMZI_SECRET_PREFIX"
                            },
                            {
                                "name": "STRIMZI_ACLS_ADMIN_API_SUPPORTED",
                                "value": "false"
                            }
                        ],
                        "image": "quay.io/strimzi/operator:0.46.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthy",
                                "port": "healthcheck",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "user-operator",
                        "ports": [
                            {
                                "containerPort": 8081,
                                "name": "healthcheck",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": "healthcheck",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "strimzi-uo-tmp"
                            },
                            {
                                "mountPath": "/opt/user-operator/custom-config/",
                                "name": "entity-user-operator-metrics-and-logging"
                            },
                            {
                                "mountPath": "/etc/euo-certs/",
                                "name": "euo-certs"
                            },
                            {
                                "mountPath": "/etc/tls-sidecar/cluster-ca-certs/",
                                "name": "cluster-ca-certs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-dqs5q",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ai-agent-kafka-entity-operator",
                "serviceAccountName": "ai-agent-kafka-entity-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "ai-agent-kafka-entity-topic-operator-config"
                        },
                        "name": "entity-topic-operator-metrics-and-logging"
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory",
                            "sizeLimit": "5Mi"
                        },
                        "name": "strimzi-to-tmp"
                    },
                    {
                        "name": "eto-certs",
                        "secret": {
                            "defaultMode": 292,
                            "secretName": "ai-agent-kafka-entity-topic-operator-certs"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "ai-agent-kafka-entity-user-operator-config"
                        },
                        "name": "entity-user-operator-metrics-and-logging"
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory",
                            "sizeLimit": "5Mi"
                        },
                        "name": "strimzi-uo-tmp"
                    },
                    {
                        "name": "euo-certs",
                        "secret": {
                            "defaultMode": 292,
                            "secretName": "ai-agent-kafka-entity-user-operator-certs"
                        }
                    },
                    {
                        "name": "cluster-ca-certs",
                        "secret": {
                            "defaultMode": 292,
                            "secretName": "ai-agent-kafka-cluster-ca-cert"
                        }
                    },
                    {
                        "name": "kube-api-access-dqs5q",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T07:46:58Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T07:46:56Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T07:47:16Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T07:47:16Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T07:46:56Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://99db699a6622e771a28e5020ada10a1243e6f829d2b33ddc1dcae4472a33fb28",
                        "image": "quay.io/strimzi/operator:0.46.1",
                        "imageID": "quay.io/strimzi/operator@sha256:6a22e4968e9d409405423d12c04a0e3fecaea2ee2794bd27de7cf21f59453265",
                        "lastState": {},
                        "name": "topic-operator",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-18T07:46:57Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 1001
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "strimzi-to-tmp"
                            },
                            {
                                "mountPath": "/opt/topic-operator/custom-config/",
                                "name": "entity-topic-operator-metrics-and-logging"
                            },
                            {
                                "mountPath": "/etc/eto-certs/",
                                "name": "eto-certs"
                            },
                            {
                                "mountPath": "/etc/tls-sidecar/cluster-ca-certs/",
                                "name": "cluster-ca-certs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-dqs5q",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    },
                    {
                        "containerID": "containerd://45127ccfceeda7bbec8ed388db6c7fc22d7f560c58ad41b4f33cf0c5334ec4af",
                        "image": "quay.io/strimzi/operator:0.46.1",
                        "imageID": "quay.io/strimzi/operator@sha256:6a22e4968e9d409405423d12c04a0e3fecaea2ee2794bd27de7cf21f59453265",
                        "lastState": {},
                        "name": "user-operator",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-18T07:46:57Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 1001
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "strimzi-uo-tmp"
                            },
                            {
                                "mountPath": "/opt/user-operator/custom-config/",
                                "name": "entity-user-operator-metrics-and-logging"
                            },
                            {
                                "mountPath": "/etc/euo-certs/",
                                "name": "euo-certs"
                            },
                            {
                                "mountPath": "/etc/tls-sidecar/cluster-ca-certs/",
                                "name": "cluster-ca-certs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-dqs5q",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.148",
                "podIPs": [
                    {
                        "ip": "10.244.0.148"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-18T07:46:56Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "strimzi.io/clients-ca-cert-generation": "0",
                    "strimzi.io/cluster-ca-cert-generation": "0",
                    "strimzi.io/cluster-ca-key-generation": "0",
                    "strimzi.io/configuration-hash": "650532fc",
                    "strimzi.io/kafka-version": "4.0.0",
                    "strimzi.io/revision": "222ce84e",
                    "strimzi.io/server-cert-hash": "28441884fa3a275dd44405ac295686c5d41bdc10"
                },
                "creationTimestamp": "2025-08-05T13:50:10Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "ai-agent-kafka",
                    "app.kubernetes.io/managed-by": "strimzi-cluster-operator",
                    "app.kubernetes.io/name": "kafka",
                    "app.kubernetes.io/part-of": "strimzi-ai-agent-kafka",
                    "strimzi.io/broker-role": "true",
                    "strimzi.io/cluster": "ai-agent-kafka",
                    "strimzi.io/component-type": "kafka",
                    "strimzi.io/controller": "strimzipodset",
                    "strimzi.io/controller-name": "ai-agent-kafka-single-role",
                    "strimzi.io/controller-role": "true",
                    "strimzi.io/kind": "Kafka",
                    "strimzi.io/name": "ai-agent-kafka-kafka",
                    "strimzi.io/pod-name": "ai-agent-kafka-single-role-0",
                    "strimzi.io/pool-name": "single-role"
                },
                "name": "ai-agent-kafka-single-role-0",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "core.strimzi.io/v1beta2",
                        "blockOwnerDeletion": false,
                        "controller": true,
                        "kind": "StrimziPodSet",
                        "name": "ai-agent-kafka-single-role",
                        "uid": "70696b47-1a72-4bad-94a3-e0c095c9ee60"
                    }
                ],
                "resourceVersion": "602836",
                "uid": "bf7e5337-d8ca-437d-bd98-15fbe46930a8"
            },
            "spec": {
                "affinity": {},
                "containers": [
                    {
                        "args": [
                            "/opt/kafka/kafka_run.sh"
                        ],
                        "env": [
                            {
                                "name": "KAFKA_METRICS_ENABLED",
                                "value": "false"
                            },
                            {
                                "name": "STRIMZI_KAFKA_GC_LOG_ENABLED",
                                "value": "false"
                            },
                            {
                                "name": "KAFKA_HEAP_OPTS",
                                "value": "-Xms128M"
                            }
                        ],
                        "image": "quay.io/strimzi/kafka:0.46.1-kafka-4.0.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/opt/kafka/kafka_liveness.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "kafka",
                        "ports": [
                            {
                                "containerPort": 8443,
                                "name": "tcp-kafkaagent",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9090,
                                "name": "tcp-ctrlplane",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9091,
                                "name": "tcp-replication",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9092,
                                "name": "tcp-clients",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9093,
                                "name": "tcp-clientstls",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/opt/kafka/kafka_readiness.sh"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/kafka/data-0",
                                "name": "data-0"
                            },
                            {
                                "mountPath": "/tmp",
                                "name": "strimzi-tmp"
                            },
                            {
                                "mountPath": "/opt/kafka/cluster-ca-certs",
                                "name": "cluster-ca"
                            },
                            {
                                "mountPath": "/opt/kafka/broker-certs",
                                "name": "broker-certs"
                            },
                            {
                                "mountPath": "/opt/kafka/client-ca-certs",
                                "name": "client-ca-cert"
                            },
                            {
                                "mountPath": "/opt/kafka/custom-config/",
                                "name": "kafka-metrics-and-logging"
                            },
                            {
                                "mountPath": "/var/opt/kafka",
                                "name": "ready-files"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-f4b88",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "ai-agent-kafka-single-role-0",
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 0
                },
                "serviceAccount": "ai-agent-kafka-kafka",
                "serviceAccountName": "ai-agent-kafka-kafka",
                "subdomain": "ai-agent-kafka-kafka-brokers",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "data-0",
                        "persistentVolumeClaim": {
                            "claimName": "data-0-ai-agent-kafka-single-role-0"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory",
                            "sizeLimit": "5Mi"
                        },
                        "name": "strimzi-tmp"
                    },
                    {
                        "name": "cluster-ca",
                        "secret": {
                            "defaultMode": 292,
                            "secretName": "ai-agent-kafka-cluster-ca-cert"
                        }
                    },
                    {
                        "name": "broker-certs",
                        "secret": {
                            "defaultMode": 292,
                            "secretName": "ai-agent-kafka-single-role-0"
                        }
                    },
                    {
                        "name": "client-ca-cert",
                        "secret": {
                            "defaultMode": 292,
                            "secretName": "ai-agent-kafka-clients-ca-cert"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "ai-agent-kafka-single-role-0"
                        },
                        "name": "kafka-metrics-and-logging"
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory",
                            "sizeLimit": "1Ki"
                        },
                        "name": "ready-files"
                    },
                    {
                        "name": "kube-api-access-f4b88",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T13:50:37Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T13:50:15Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:37Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:37Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T13:50:15Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://d0f9da86726b5127ebd7af65f32a5bcf8a0067cabef3d759632528e528c83c94",
                        "image": "quay.io/strimzi/kafka:0.46.1-kafka-4.0.0",
                        "imageID": "quay.io/strimzi/kafka@sha256:82273d873ce21a73f8f3118bf61627cb15734b43ea7ca92d43b290340b44e485",
                        "lastState": {},
                        "name": "kafka",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-05T13:50:37Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 1001
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/kafka/data-0",
                                "name": "data-0"
                            },
                            {
                                "mountPath": "/tmp",
                                "name": "strimzi-tmp"
                            },
                            {
                                "mountPath": "/opt/kafka/cluster-ca-certs",
                                "name": "cluster-ca"
                            },
                            {
                                "mountPath": "/opt/kafka/broker-certs",
                                "name": "broker-certs"
                            },
                            {
                                "mountPath": "/opt/kafka/client-ca-certs",
                                "name": "client-ca-cert"
                            },
                            {
                                "mountPath": "/opt/kafka/custom-config/",
                                "name": "kafka-metrics-and-logging"
                            },
                            {
                                "mountPath": "/var/opt/kafka",
                                "name": "ready-files"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-f4b88",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.145",
                "podIPs": [
                    {
                        "ip": "10.244.0.145"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-05T13:50:15Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-18T15:01:50Z",
                "generateName": "anomaly-results-processor-584b847c98-",
                "generation": 1,
                "labels": {
                    "app": "anomaly-results-processor",
                    "component": "ai-pipeline",
                    "pod-template-hash": "584b847c98"
                },
                "name": "anomaly-results-processor-584b847c98-flg68",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "anomaly-results-processor-584b847c98",
                        "uid": "2133f342-5983-4403-94cb-c9cc04e85754"
                    }
                ],
                "resourceVersion": "4496464",
                "uid": "0ed8f9cc-b0e9-431e-a61d-7031df2d63f7"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "KAFKA_BOOTSTRAP_SERVERS",
                                "value": "ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local:9092"
                            },
                            {
                                "name": "KAFKA_INPUT_TOPIC",
                                "value": "morpheus-input"
                            },
                            {
                                "name": "KAFKA_RESULTS_TOPIC",
                                "value": "anomaly-results"
                            },
                            {
                                "name": "KAFKA_CONSUMER_GROUP",
                                "value": "anomaly-results-processor"
                            },
                            {
                                "name": "S3_ENDPOINT",
                                "value": "http://minio.minio.svc.cluster.local:9000"
                            },
                            {
                                "name": "S3_ACCESS_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "rootUser",
                                        "name": "minio"
                                    }
                                }
                            },
                            {
                                "name": "S3_SECRET_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "rootPassword",
                                        "name": "minio"
                                    }
                                }
                            },
                            {
                                "name": "S3_BUCKET",
                                "value": "data"
                            },
                            {
                                "name": "S3_RESULTS_PREFIX",
                                "value": "anomaly-results"
                            },
                            {
                                "name": "BATCH_SIZE",
                                "value": "50"
                            },
                            {
                                "name": "ANOMALY_THRESHOLD",
                                "value": "0.7"
                            }
                        ],
                        "image": "ghcr.io/granthbr/ai-agent-chart/anomaly-results-processor:latest",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/health",
                                "port": 8089,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "processor",
                        "ports": [
                            {
                                "containerPort": 8089,
                                "name": "api",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/health",
                                "port": 8089,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "2Gi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "1Gi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-l4vg4",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "ghcr-secret"
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-l4vg4",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T15:02:03Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T15:01:50Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T15:01:50Z",
                        "message": "containers with unready status: [processor]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T15:01:50Z",
                        "message": "containers with unready status: [processor]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T15:01:50Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "image": "ghcr.io/granthbr/ai-agent-chart/anomaly-results-processor:latest",
                        "imageID": "",
                        "lastState": {},
                        "name": "processor",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "waiting": {
                                "message": "Back-off pulling image \"ghcr.io/granthbr/ai-agent-chart/anomaly-results-processor:latest\": ErrImagePull: rpc error: code = NotFound desc = failed to pull and unpack image \"ghcr.io/granthbr/ai-agent-chart/anomaly-results-processor:latest\": failed to resolve reference \"ghcr.io/granthbr/ai-agent-chart/anomaly-results-processor:latest\": ghcr.io/granthbr/ai-agent-chart/anomaly-results-processor:latest: not found",
                                "reason": "ImagePullBackOff"
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-l4vg4",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Pending",
                "podIP": "10.244.0.194",
                "podIPs": [
                    {
                        "ip": "10.244.0.194"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-18T15:01:50Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/restartedAt": "2025-08-18T13:46:53+02:00",
                    "prometheus.io/path": "/metrics",
                    "prometheus.io/port": "8080",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-18T13:23:39Z",
                "generateName": "data-processor-5dcc6f8f86-",
                "generation": 1,
                "labels": {
                    "app": "data-processor",
                    "component": "data-processing",
                    "pod-template-hash": "5dcc6f8f86"
                },
                "name": "data-processor-5dcc6f8f86-4zdfr",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "data-processor-5dcc6f8f86",
                        "uid": "898bedd9-8fbe-4ec7-8276-e780f5d374a5"
                    }
                ],
                "resourceVersion": "4194979",
                "uid": "3d0861b0-f13c-4adb-bd0c-9a4a53424c5e"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "CHECKPOINT_LOCATION",
                                "value": "s3a://data/checkpoints-v2/$(POD_NAME)"
                            },
                            {
                                "name": "SPARK_APP_NAME",
                                "value": "data-processor-$(POD_NAME)"
                            },
                            {
                                "name": "FORCE_FRESH_START",
                                "value": "true"
                            },
                            {
                                "name": "DELTA_TABLE_PATH",
                                "value": "s3a://data/tables/$(POD_NAME)"
                            },
                            {
                                "name": "KAFKA_CONSUMER_GROUP",
                                "value": "data-processor-$(POD_NAME)"
                            },
                            {
                                "name": "ENABLE_GRACEFUL_SHUTDOWN",
                                "value": "true"
                            },
                            {
                                "name": "S3_ACCESS_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "rootUser",
                                        "name": "minio"
                                    }
                                }
                            },
                            {
                                "name": "S3_SECRET_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "rootPassword",
                                        "name": "minio"
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "data-processor-config"
                                }
                            }
                        ],
                        "image": "ghcr.io/granthbr/ai-agent-chart/data-processor:main-16792e3",
                        "imagePullPolicy": "Always",
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/bin/sh",
                                        "-c",
                                        "sleep 10"
                                    ]
                                }
                            }
                        },
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/health",
                                "port": 8084,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 10
                        },
                        "name": "data-processor",
                        "ports": [
                            {
                                "containerPort": 8084,
                                "name": "health",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8085,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "python",
                                    "-c",
                                    "import socket; sock = socket.socket(); sock.connect(('ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local', 9092)); sock.close()"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "limits": {
                                "cpu": "4",
                                "memory": "12Gi"
                            },
                            "requests": {
                                "cpu": "2",
                                "memory": "6Gi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsNonRoot": true,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nnn8d",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "ghcr-secret"
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ai-agent-sa",
                "serviceAccountName": "ai-agent-sa",
                "terminationGracePeriodSeconds": 60,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-nnn8d",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T13:24:05Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T13:23:39Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T13:24:16Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T13:24:16Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T13:23:39Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "2",
                            "memory": "6Gi"
                        },
                        "containerID": "containerd://d5b0e3c1d800e01bb8b47a0df96902ab85bb28604ac2e7158d8127505660ad44",
                        "image": "ghcr.io/granthbr/ai-agent-chart/data-processor:main-16792e3",
                        "imageID": "ghcr.io/granthbr/ai-agent-chart/data-processor@sha256:38e98dee95cfea529f012061eb41c691e727b9e714d55b06c2e440d5ff767cc5",
                        "lastState": {},
                        "name": "data-processor",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "cpu": "4",
                                "memory": "12Gi"
                            },
                            "requests": {
                                "cpu": "2",
                                "memory": "6Gi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-18T13:24:04Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 1000,
                                "supplementalGroups": [
                                    1000
                                ],
                                "uid": 1000
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nnn8d",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.47",
                "podIPs": [
                    {
                        "ip": "10.244.0.47"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-18T13:23:39Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/restartedAt": "2025-08-18T16:46:28+02:00"
                },
                "creationTimestamp": "2025-08-19T04:09:43Z",
                "generateName": "delta-morpheus-connector-5f67b4d569-",
                "generation": 1,
                "labels": {
                    "app": "delta-morpheus-connector",
                    "component": "morpheus-pipeline",
                    "pod-template-hash": "5f67b4d569"
                },
                "name": "delta-morpheus-connector-5f67b4d569-mxffd",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "delta-morpheus-connector-5f67b4d569",
                        "uid": "157c3a6c-8340-4b17-8ad3-ef9a42d34fc3"
                    }
                ],
                "resourceVersion": "4386735",
                "uid": "4008b2b1-fa6e-4fbf-80ef-b13319993bda"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TRITON_ENDPOINT",
                                "value": "http://ai-engine.gpu-operator.svc.cluster.local:8000"
                            },
                            {
                                "name": "TRITON_MODEL_NAME",
                                "value": "netflow-anomaly-detector"
                            },
                            {
                                "name": "TRITON_MODEL_VERSION",
                                "value": "1"
                            },
                            {
                                "name": "TRITON_TIMEOUT",
                                "value": "30"
                            },
                            {
                                "name": "S3_ENDPOINT",
                                "value": "http://minio.minio.svc.cluster.local:9000"
                            },
                            {
                                "name": "S3_ACCESS_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "rootUser",
                                        "name": "minio"
                                    }
                                }
                            },
                            {
                                "name": "S3_SECRET_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "rootPassword",
                                        "name": "minio"
                                    }
                                }
                            },
                            {
                                "name": "S3_BUCKET",
                                "value": "data"
                            },
                            {
                                "name": "DELTA_INPUT_TABLE",
                                "value": "s3a://data/aggregated-netflow"
                            },
                            {
                                "name": "DELTA_RESULTS_TABLE",
                                "value": "s3a://data/morpheus-results"
                            },
                            {
                                "name": "BATCH_SIZE",
                                "value": "50"
                            },
                            {
                                "name": "POLL_INTERVAL",
                                "value": "30"
                            },
                            {
                                "name": "ANOMALY_THRESHOLD",
                                "value": "0.5"
                            },
                            {
                                "name": "LOG_LEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "STRUCTURED_LOGGING",
                                "value": "true"
                            },
                            {
                                "name": "LOG_FORMAT",
                                "value": "json"
                            },
                            {
                                "name": "METRICS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "OPERATIONAL_LOGGING",
                                "value": "true"
                            }
                        ],
                        "image": "ghcr.io/granthbr/ai-agent-chart/morpheus-connector:main-40791e0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/health",
                                "port": 8084,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "connector",
                        "ports": [
                            {
                                "containerPort": 8084,
                                "name": "http-api",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8085,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": 8084,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 3
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "4Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "2Gi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-bp9wl",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "ghcr-secret"
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-bp9wl",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T04:10:21Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T04:09:43Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T04:10:37Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T04:10:37Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T04:09:43Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "1",
                            "memory": "2Gi"
                        },
                        "containerID": "containerd://8e58b450c8a3807f361a63cf3fc9298e375abcc0e36ba16fe77dec49f271eca7",
                        "image": "ghcr.io/granthbr/ai-agent-chart/morpheus-connector:main-40791e0",
                        "imageID": "ghcr.io/granthbr/ai-agent-chart/morpheus-connector@sha256:98d905fea2d8469c5d91cad343cc64f189833d63081821c03e867e31d6ab3322",
                        "lastState": {},
                        "name": "connector",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "4Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "2Gi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-19T04:10:21Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 1000,
                                "supplementalGroups": [
                                    1000
                                ],
                                "uid": 1000
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-bp9wl",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.170",
                "podIPs": [
                    {
                        "ip": "10.244.0.170"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-19T04:09:43Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-19T06:36:52Z",
                "generateName": "enhanced-results-api-fb475cb7b-",
                "generation": 1,
                "labels": {
                    "app": "enhanced-results-api",
                    "component": "results-processing",
                    "pod-template-hash": "fb475cb7b"
                },
                "name": "enhanced-results-api-fb475cb7b-x844k",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "enhanced-results-api-fb475cb7b",
                        "uid": "2dfccc2a-e444-4df2-94e0-89112624a612"
                    }
                ],
                "resourceVersion": "4418933",
                "uid": "9582c176-5af6-4ac6-8372-ccd41353049c"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DELTA_RESULTS_TABLE",
                                "value": "s3a://data/morpheus-results"
                            },
                            {
                                "name": "DELTA_NETFLOW_TABLE",
                                "value": "s3a://data/aggregated-netflow"
                            },
                            {
                                "name": "DELTA_ANALYTICS_TABLE",
                                "value": "s3a://data/analytics-results"
                            },
                            {
                                "name": "S3_BUCKET",
                                "value": "data"
                            },
                            {
                                "name": "S3_ENDPOINT",
                                "value": "http://minio.minio.svc.cluster.local:9000"
                            },
                            {
                                "name": "S3_ACCESS_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "rootUser",
                                        "name": "minio"
                                    }
                                }
                            },
                            {
                                "name": "S3_SECRET_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "rootPassword",
                                        "name": "minio"
                                    }
                                }
                            },
                            {
                                "name": "SPARK_APP_NAME",
                                "value": "EnhancedResultsAPI"
                            },
                            {
                                "name": "SPARK_MASTER",
                                "value": "local[*]"
                            },
                            {
                                "name": "API_HOST",
                                "value": "0.0.0.0"
                            },
                            {
                                "name": "API_PORT",
                                "value": "8088"
                            },
                            {
                                "name": "LOG_LEVEL",
                                "value": "INFO"
                            },
                            {
                                "name": "S3_COMPLIANCE_PREFIX",
                                "value": "compliance"
                            },
                            {
                                "name": "S3_REPORTS_PREFIX",
                                "value": "reports"
                            },
                            {
                                "name": "ANOMALY_THRESHOLD",
                                "value": "0.5"
                            },
                            {
                                "name": "MAX_RECORDS_PER_BATCH",
                                "value": "50000"
                            },
                            {
                                "name": "REPORT_RETENTION_HOURS",
                                "value": "168"
                            },
                            {
                                "name": "ENABLE_ADVANCED_ANALYTICS",
                                "value": "true"
                            }
                        ],
                        "image": "ghcr.io/granthbr/ai-agent-chart/enhanced-results-api:main-2dbbd4f",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/health",
                                "port": 8088,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "results-api",
                        "ports": [
                            {
                                "containerPort": 8088,
                                "name": "http-api",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": 8088,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 3
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "4Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "2Gi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-lx92t",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "ghcr-secret"
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-lx92t",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T06:37:38Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T06:36:52Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T06:37:54Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T06:37:54Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T06:36:52Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "1",
                            "memory": "2Gi"
                        },
                        "containerID": "containerd://dd97a22c3b435422d69f09f9ae068e861545a4a21a2de8fdc0937b68eaea0634",
                        "image": "ghcr.io/granthbr/ai-agent-chart/enhanced-results-api:main-2dbbd4f",
                        "imageID": "ghcr.io/granthbr/ai-agent-chart/enhanced-results-api@sha256:9bb9d9e4ecd3d250ef33e85f94598fe73345b062f6efffa0fa93998947254654",
                        "lastState": {},
                        "name": "results-api",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "4Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "2Gi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-19T06:37:38Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 999,
                                "supplementalGroups": [
                                    999
                                ],
                                "uid": 999
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-lx92t",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.87",
                "podIPs": [
                    {
                        "ip": "10.244.0.87"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-19T06:36:52Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/restartedAt": "2025-08-18T10:14:18+02:00",
                    "prometheus.io/path": "/metrics",
                    "prometheus.io/port": "8001",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-18T08:14:18Z",
                "generateName": "kafka-agent-bridge-696499bdd5-",
                "generation": 1,
                "labels": {
                    "app": "kafka-agent-bridge",
                    "component": "data-processing",
                    "pod-template-hash": "696499bdd5"
                },
                "name": "kafka-agent-bridge-696499bdd5-m2thk",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kafka-agent-bridge-696499bdd5",
                        "uid": "ebd2c6d3-40ac-476d-b3ab-7f38c0a8aba2"
                    }
                ],
                "resourceVersion": "4126891",
                "uid": "50518839-094f-46ee-b93d-22d8dda5f203"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "kafka-agent-bridge-config"
                                }
                            }
                        ],
                        "image": "ghcr.io/granthbr/ai-agent-chart/kafka-agent-bridge:main-314a348",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/health",
                                "port": 8000,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 10
                        },
                        "name": "kafka-agent-bridge",
                        "ports": [
                            {
                                "containerPort": 8000,
                                "name": "health",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8001,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "python",
                                    "-c",
                                    "import socket; sock = socket.socket(); sock.connect(('ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local', 9092)); sock.close()"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "512Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsNonRoot": true,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-f2c8f",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "ghcr-secret"
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ai-agent-sa",
                "serviceAccountName": "ai-agent-sa",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-f2c8f",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:14:21Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:14:19Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:14:33Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:14:33Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:14:18Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "200m",
                            "memory": "256Mi"
                        },
                        "containerID": "containerd://b5786da5bf7bed1ffbad0203f1c63347321e8190c3898e02a2395ae0a4ea3886",
                        "image": "ghcr.io/granthbr/ai-agent-chart/kafka-agent-bridge:main-314a348",
                        "imageID": "ghcr.io/granthbr/ai-agent-chart/kafka-agent-bridge@sha256:a7213c0ad06ad9b28de8bb4bf1a5f873d2554cfe4a49a3ef6bd71eeff1142e14",
                        "lastState": {},
                        "name": "kafka-agent-bridge",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "512Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-18T08:14:21Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 1000
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-f2c8f",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.146",
                "podIPs": [
                    {
                        "ip": "10.244.0.146"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-18T08:14:19Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/restartedAt": "2025-08-18T10:14:18+02:00",
                    "prometheus.io/path": "/metrics",
                    "prometheus.io/port": "8001",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-18T08:14:33Z",
                "generateName": "kafka-agent-bridge-696499bdd5-",
                "generation": 1,
                "labels": {
                    "app": "kafka-agent-bridge",
                    "component": "data-processing",
                    "pod-template-hash": "696499bdd5"
                },
                "name": "kafka-agent-bridge-696499bdd5-sz7wx",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kafka-agent-bridge-696499bdd5",
                        "uid": "ebd2c6d3-40ac-476d-b3ab-7f38c0a8aba2"
                    }
                ],
                "resourceVersion": "4126995",
                "uid": "bcd6915d-465f-4bbf-834a-71e9f36bc1a7"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "kafka-agent-bridge-config"
                                }
                            }
                        ],
                        "image": "ghcr.io/granthbr/ai-agent-chart/kafka-agent-bridge:main-314a348",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/health",
                                "port": 8000,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 10
                        },
                        "name": "kafka-agent-bridge",
                        "ports": [
                            {
                                "containerPort": 8000,
                                "name": "health",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8001,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "python",
                                    "-c",
                                    "import socket; sock = socket.socket(); sock.connect(('ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local', 9092)); sock.close()"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "512Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsNonRoot": true,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-jjc4p",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "ghcr-secret"
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ai-agent-sa",
                "serviceAccountName": "ai-agent-sa",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-jjc4p",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:14:36Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:14:33Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:14:47Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:14:47Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:14:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "200m",
                            "memory": "256Mi"
                        },
                        "containerID": "containerd://acb7009041c93ac8ee1e52d70287ac71d3e85cbb637c50bdc51a85cf6a0d468e",
                        "image": "ghcr.io/granthbr/ai-agent-chart/kafka-agent-bridge:main-314a348",
                        "imageID": "ghcr.io/granthbr/ai-agent-chart/kafka-agent-bridge@sha256:a7213c0ad06ad9b28de8bb4bf1a5f873d2554cfe4a49a3ef6bd71eeff1142e14",
                        "lastState": {},
                        "name": "kafka-agent-bridge",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "512Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-18T08:14:35Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 1000
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-jjc4p",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.20",
                "podIPs": [
                    {
                        "ip": "10.244.0.20"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-18T08:14:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/restartedAt": "2025-08-18T09:46:09+02:00",
                    "prometheus.io/path": "/metrics",
                    "prometheus.io/port": "8085",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-18T07:46:09Z",
                "generateName": "morpheus-triton-connector-6c7dc945db-",
                "generation": 1,
                "labels": {
                    "app": "morpheus-triton-connector",
                    "component": "inference-pipeline",
                    "pod-template-hash": "6c7dc945db"
                },
                "name": "morpheus-triton-connector-6c7dc945db-vr5dd",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "morpheus-triton-connector-6c7dc945db",
                        "uid": "dc82bb78-aab4-46ad-b311-6a15f6d04876"
                    }
                ],
                "resourceVersion": "4119516",
                "uid": "fd7787f8-3c7a-4e40-9c2c-0a0a7cb9b0f6"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "/app/morpheus_triton_connector.py"
                        ],
                        "command": [
                            "python3"
                        ],
                        "env": [
                            {
                                "name": "KAFKA_BOOTSTRAP_SERVERS",
                                "value": "ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local:9092"
                            },
                            {
                                "name": "KAFKA_INPUT_TOPIC",
                                "value": "morpheus-input"
                            },
                            {
                                "name": "KAFKA_OUTPUT_TOPIC",
                                "value": "morpheus-results"
                            },
                            {
                                "name": "KAFKA_GROUP_ID",
                                "value": "morpheus-connector"
                            },
                            {
                                "name": "TRITON_ENDPOINT",
                                "value": "http://ai-engine.gpu-operator.svc.cluster.local:8000"
                            },
                            {
                                "name": "TRITON_MODEL_NAME",
                                "value": "netflow-anomaly-detector"
                            },
                            {
                                "name": "TRITON_MODEL_VERSION",
                                "value": "1"
                            },
                            {
                                "name": "S3_ENDPOINT",
                                "value": "http://minio.minio.svc.cluster.local:9000"
                            },
                            {
                                "name": "S3_BUCKET",
                                "value": "data"
                            },
                            {
                                "name": "DELTA_BASE_PATH",
                                "value": "s3a://data"
                            },
                            {
                                "name": "BATCH_SIZE",
                                "value": "100"
                            },
                            {
                                "name": "ANOMALY_THRESHOLD",
                                "value": "0.7"
                            }
                        ],
                        "image": "ghcr.io/granthbr/ai-agent-chart/morpheus-connector:main-f8f297c",
                        "imagePullPolicy": "Always",
                        "name": "morpheus-triton-connector",
                        "ports": [
                            {
                                "containerPort": 8084,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8085,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "2Gi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "1Gi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsNonRoot": true,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/app/logs",
                                "name": "logs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-cpn6t",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "ghcr-secret"
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 1000,
                    "runAsNonRoot": true,
                    "runAsUser": 1000,
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "logs"
                    },
                    {
                        "name": "kube-api-access-cpn6t",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T07:46:14Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T07:46:09Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T07:46:14Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T07:46:14Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T07:46:09Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "500m",
                            "memory": "1Gi"
                        },
                        "containerID": "containerd://97b3a28696609dfe20b72a63b9e289f15dace2dd5a0be1d30aeb38aef3ffb7d5",
                        "image": "ghcr.io/granthbr/ai-agent-chart/morpheus-connector:main-f8f297c",
                        "imageID": "ghcr.io/granthbr/ai-agent-chart/morpheus-connector@sha256:e6c742fe7369e26c176d62239bc03252d65ce0f2f227a7ab996ca92540704598",
                        "lastState": {},
                        "name": "morpheus-triton-connector",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "2Gi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "1Gi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-18T07:46:14Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 1000,
                                "supplementalGroups": [
                                    1000
                                ],
                                "uid": 1000
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/app/logs",
                                "name": "logs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-cpn6t",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.37",
                "podIPs": [
                    {
                        "ip": "10.244.0.37"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-18T07:46:09Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/restartedAt": "2025-08-18T09:46:09+02:00",
                    "prometheus.io/path": "/metrics",
                    "prometheus.io/port": "8085",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-18T08:13:45Z",
                "generateName": "netflow-generator-7c5ddd78bd-",
                "generation": 1,
                "labels": {
                    "app": "netflow-generator",
                    "component": "data-ingestion",
                    "pod-template-hash": "7c5ddd78bd"
                },
                "name": "netflow-generator-7c5ddd78bd-wzxdz",
                "namespace": "ai-agent",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "netflow-generator-7c5ddd78bd",
                        "uid": "7bbc6264-0dfb-4893-913a-f97cb3216f8f"
                    }
                ],
                "resourceVersion": "4126678",
                "uid": "b5935404-2eb6-4f75-a753-a312f8788fff"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "KAFKA_BOOTSTRAP_SERVERS",
                                "value": "ai-agent-kafka-kafka-bootstrap.ai-agent.svc.cluster.local:9092"
                            },
                            {
                                "name": "KAFKA_OUTPUT_TOPIC",
                                "value": "raw-netflow"
                            },
                            {
                                "name": "GENERATION_RATE",
                                "value": "50"
                            },
                            {
                                "name": "BATCH_SIZE",
                                "value": "25"
                            },
                            {
                                "name": "ANOMALY_PERCENTAGE",
                                "value": "8.0"
                            },
                            {
                                "name": "AUTO_START",
                                "value": "true"
                            },
                            {
                                "name": "LOG_LEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "STRUCTURED_LOGGING",
                                "value": "true"
                            },
                            {
                                "name": "LOG_FORMAT",
                                "value": "json"
                            },
                            {
                                "name": "METRICS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "OPERATIONAL_LOGGING",
                                "value": "true"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "ghcr.io/granthbr/ai-agent-chart/netflow-generator:main-415d876",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/health",
                                "port": 8084,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 10
                        },
                        "name": "netflow-generator",
                        "ports": [
                            {
                                "containerPort": 8084,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8085,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/health",
                                "port": 8084,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsNonRoot": true,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/app/config",
                                "name": "config"
                            },
                            {
                                "mountPath": "/app/logs",
                                "name": "logs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-h72j2",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "ghcr-secret"
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ai-agent-sa",
                "serviceAccountName": "ai-agent-sa",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "netflow-generator-config"
                        },
                        "name": "config"
                    },
                    {
                        "emptyDir": {},
                        "name": "logs"
                    },
                    {
                        "name": "kube-api-access-h72j2",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:13:47Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:13:45Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:13:58Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:13:58Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T08:13:45Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "100m",
                            "memory": "128Mi"
                        },
                        "containerID": "containerd://c831c301e930b85751d700fdf297b97c860e38392be107b0f2b02b84516b56c7",
                        "image": "ghcr.io/granthbr/ai-agent-chart/netflow-generator:main-415d876",
                        "imageID": "ghcr.io/granthbr/ai-agent-chart/netflow-generator@sha256:2d7d961c53b65743161f5080677f7b99d19ca5239377f0c35173917021fb02ba",
                        "lastState": {},
                        "name": "netflow-generator",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-18T08:13:47Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 999,
                                "supplementalGroups": [
                                    999
                                ],
                                "uid": 1000
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/app/config",
                                "name": "config"
                            },
                            {
                                "mountPath": "/app/logs",
                                "name": "logs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-h72j2",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.183",
                "podIPs": [
                    {
                        "ip": "10.244.0.183"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-18T08:13:45Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-18T09:08:42Z",
                "generation": 1,
                "labels": {
                    "run": "netshoot"
                },
                "name": "netshoot",
                "namespace": "ai-agent",
                "resourceVersion": "4139851",
                "uid": "0791ea31-4580-4db4-ba5b-77db6676da50"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "/bin/bash"
                        ],
                        "image": "nicolaka/netshoot",
                        "imagePullPolicy": "Always",
                        "name": "netshoot",
                        "resources": {},
                        "stdin": true,
                        "stdinOnce": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-kcfg8",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-kcfg8",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T09:08:44Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T09:08:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T09:08:44Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T09:08:44Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-18T09:08:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://9f64380863bc5b72611f648a5bf61eea761c6e0f27aadec11e90e88ff41877f4",
                        "image": "docker.io/nicolaka/netshoot:latest",
                        "imageID": "docker.io/nicolaka/netshoot@sha256:7f08c4aff13ff61a35d30e30c5c1ea8396eac6ab4ce19fd02d5a4b3b5d0d09a2",
                        "lastState": {},
                        "name": "netshoot",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-18T09:08:44Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    6,
                                    10,
                                    11,
                                    20,
                                    26,
                                    27
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-kcfg8",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.33",
                "podIPs": [
                    {
                        "ip": "10.244.0.33"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-18T09:08:42Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "prometheus.io/path": "/metrics",
                    "prometheus.io/port": "9402",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-14T16:52:48Z",
                "generateName": "cert-manager-58dd99f969-",
                "generation": 1,
                "labels": {
                    "app": "cert-manager",
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cert-manager",
                    "app.kubernetes.io/version": "v1.18.2",
                    "helm.sh/chart": "cert-manager-v1.18.2",
                    "pod-template-hash": "58dd99f969"
                },
                "name": "cert-manager-58dd99f969-zlggs",
                "namespace": "cert-manager",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "cert-manager-58dd99f969",
                        "uid": "4cb09076-90f6-437f-91b4-b17e16c3cf7c"
                    }
                ],
                "resourceVersion": "3044565",
                "uid": "39b93c5b-34c2-45f2-a8be-0cd3c7a1c3db"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--v=2",
                            "--cluster-resource-namespace=$(POD_NAMESPACE)",
                            "--leader-election-namespace=kube-system",
                            "--acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.18.2",
                            "--max-concurrent-challenges=60"
                        ],
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jetstack/cert-manager-controller:v1.18.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 8,
                            "httpGet": {
                                "path": "/livez",
                                "port": "http-healthz",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "name": "cert-manager-controller",
                        "ports": [
                            {
                                "containerPort": 9402,
                                "name": "http-metrics",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9403,
                                "name": "http-healthz",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nr76z",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": false,
                "nodeName": "talos-13b-zf7",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsNonRoot": true,
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "serviceAccount": "cert-manager",
                "serviceAccountName": "cert-manager",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-nr76z",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:53Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:48Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:53Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:53Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:48Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://f13ba9434ebc14090f84776e065a8408e6cb83a00fdd7e6f590ece60882590f2",
                        "image": "quay.io/jetstack/cert-manager-controller:v1.18.2",
                        "imageID": "quay.io/jetstack/cert-manager-controller@sha256:81316365dc0b713eddddfbf9b8907b2939676e6c0e12beec0f9625f202a36d16",
                        "lastState": {},
                        "name": "cert-manager-controller",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-14T16:52:53Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 1000
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nr76z",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.225",
                "podIPs": [
                    {
                        "ip": "10.244.0.225"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-14T16:52:48Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "prometheus.io/path": "/metrics",
                    "prometheus.io/port": "9402",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-14T16:52:48Z",
                "generateName": "cert-manager-cainjector-55cd9f77b5-",
                "generation": 1,
                "labels": {
                    "app": "cainjector",
                    "app.kubernetes.io/component": "cainjector",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cainjector",
                    "app.kubernetes.io/version": "v1.18.2",
                    "helm.sh/chart": "cert-manager-v1.18.2",
                    "pod-template-hash": "55cd9f77b5"
                },
                "name": "cert-manager-cainjector-55cd9f77b5-r94rf",
                "namespace": "cert-manager",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "cert-manager-cainjector-55cd9f77b5",
                        "uid": "663f6ecb-78f5-41ce-a26c-540bbf4dbf36"
                    }
                ],
                "resourceVersion": "3044561",
                "uid": "bd4b4b07-20bf-45bb-ba0a-995dff76af81"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--v=2",
                            "--leader-election-namespace=kube-system"
                        ],
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jetstack/cert-manager-cainjector:v1.18.2",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "cert-manager-cainjector",
                        "ports": [
                            {
                                "containerPort": 9402,
                                "name": "http-metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7tdqd",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": false,
                "nodeName": "talos-13b-zf7",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsNonRoot": true,
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "serviceAccount": "cert-manager-cainjector",
                "serviceAccountName": "cert-manager-cainjector",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-7tdqd",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:53Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:48Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:53Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:53Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:48Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://dcedadfa779af017822fc7f661a7cf557cfe6d3e22cb0603b2832f4e290c60ec",
                        "image": "quay.io/jetstack/cert-manager-cainjector:v1.18.2",
                        "imageID": "quay.io/jetstack/cert-manager-cainjector@sha256:af59e01ad9756a1034fbf948330e75702e5d79b3577f323f6a9947707ba262fc",
                        "lastState": {},
                        "name": "cert-manager-cainjector",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-14T16:52:52Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 1000
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7tdqd",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.52",
                "podIPs": [
                    {
                        "ip": "10.244.0.52"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-14T16:52:48Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "prometheus.io/path": "/metrics",
                    "prometheus.io/port": "9402",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-14T16:52:48Z",
                "generateName": "cert-manager-webhook-7987476d56-",
                "generation": 1,
                "labels": {
                    "app": "webhook",
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "webhook",
                    "app.kubernetes.io/version": "v1.18.2",
                    "helm.sh/chart": "cert-manager-v1.18.2",
                    "pod-template-hash": "7987476d56"
                },
                "name": "cert-manager-webhook-7987476d56-75d4w",
                "namespace": "cert-manager",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "cert-manager-webhook-7987476d56",
                        "uid": "f63d0f5e-7e79-4eda-843c-3b3c950e1bc1"
                    }
                ],
                "resourceVersion": "3044599",
                "uid": "c58e88c9-62e6-4eb4-b142-ac17607eaf17"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--v=2",
                            "--secure-port=10250",
                            "--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)",
                            "--dynamic-serving-ca-secret-name=cert-manager-webhook-ca",
                            "--dynamic-serving-dns-names=cert-manager-webhook",
                            "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)",
                            "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc"
                        ],
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jetstack/cert-manager-webhook:v1.18.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/livez",
                                "port": "healthcheck",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "cert-manager-webhook",
                        "ports": [
                            {
                                "containerPort": 10250,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 6080,
                                "name": "healthcheck",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9402,
                                "name": "http-metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": "healthcheck",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-b86vd",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": false,
                "nodeName": "talos-13b-zf7",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsNonRoot": true,
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "serviceAccount": "cert-manager-webhook",
                "serviceAccountName": "cert-manager-webhook",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-b86vd",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:53Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:48Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:59Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:59Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:52:48Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://907280310da3e889b77988d005dcc493d726eacdb0f744cb4ae16acf6d6e229f",
                        "image": "quay.io/jetstack/cert-manager-webhook:v1.18.2",
                        "imageID": "quay.io/jetstack/cert-manager-webhook@sha256:9431f0d8b5103b06cc6138564f471ac02c6b2638c2fa399d81e28a01d817ae73",
                        "lastState": {},
                        "name": "cert-manager-webhook",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-14T16:52:52Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 1000
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-b86vd",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.91",
                "podIPs": [
                    {
                        "ip": "10.244.0.91"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-14T16:52:48Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-14T16:54:58Z",
                "generateName": "namecheap-webhook-cert-manager-webhook-namecheap-65ff5fc9c5-",
                "generation": 1,
                "labels": {
                    "app": "cert-manager-webhook-namecheap",
                    "pod-template-hash": "65ff5fc9c5",
                    "release": "namecheap-webhook"
                },
                "name": "namecheap-webhook-cert-manager-webhook-namecheap-65ff5fc9crktlr",
                "namespace": "cert-manager",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "namecheap-webhook-cert-manager-webhook-namecheap-65ff5fc9c5",
                        "uid": "1bd7c4d2-132c-47a3-b6ea-647f5174448e"
                    }
                ],
                "resourceVersion": "3045157",
                "uid": "f2a3817b-d3bc-40a1-bb16-05a455cdb50e"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--tls-cert-file=/tls/tls.crt",
                            "--tls-private-key-file=/tls/tls.key"
                        ],
                        "env": [
                            {
                                "name": "GROUP_NAME",
                                "value": "acme.namecheap.com"
                            }
                        ],
                        "image": "ghcr.io/extrality/cert-manager-webhook-namecheap:v0.3.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": "https",
                                "scheme": "HTTPS"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "cert-manager-webhook-namecheap",
                        "ports": [
                            {
                                "containerPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": "https",
                                "scheme": "HTTPS"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tls",
                                "name": "certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-xhfqz",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "namecheap-webhook-cert-manager-webhook-namecheap",
                "serviceAccountName": "namecheap-webhook-cert-manager-webhook-namecheap",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "namecheap-webhook-cert-manager-webhook-namecheap-webhook-tls"
                        }
                    },
                    {
                        "name": "kube-api-access-xhfqz",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:55:03Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:54:58Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:55:04Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:55:04Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-14T16:54:58Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://547a951a5c49a7a80027ebaf7d50c041093d0ec807b5ee84acb420b9f44930eb",
                        "image": "ghcr.io/extrality/cert-manager-webhook-namecheap:v0.3.1",
                        "imageID": "ghcr.io/extrality/cert-manager-webhook-namecheap@sha256:e3552fa0c68a98262303d3c14070b7300075e7b420d6705429646685510a334b",
                        "lastState": {},
                        "name": "cert-manager-webhook-namecheap",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-14T16:55:03Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    6,
                                    10,
                                    11,
                                    20,
                                    26,
                                    27
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/tls",
                                "name": "certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-xhfqz",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.181",
                "podIPs": [
                    {
                        "ip": "10.244.0.181"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-14T16:54:58Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-07T08:15:06Z",
                "generateName": "ai-engine-c974b49c4-",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "ai-engine",
                    "pod-template-hash": "c974b49c4"
                },
                "name": "ai-engine-c974b49c4-8k7mb",
                "namespace": "gpu-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ai-engine-c974b49c4",
                        "uid": "b1dd4a3d-ac41-48b0-baaf-b566aa2b3207"
                    }
                ],
                "resourceVersion": "943709",
                "uid": "f68f8359-9a6b-4380-88bd-c61b2a44cfe9"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "tritonserver",
                            "--model-repository",
                            "/mnt/common/triton-model-repo",
                            "--model-control-mode",
                            "explicit",
                            "--backend-directory",
                            "/opt/tritonserver/backends",
                            "--allow-http",
                            "true",
                            "--allow-grpc",
                            "true",
                            "--allow-metrics",
                            "true",
                            "--log-info",
                            "true"
                        ],
                        "image": "nvcr.io/nvidia/tritonserver:24.03-py3",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "morpheus-ai-engine",
                        "ports": [
                            {
                                "containerPort": 8000,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8001,
                                "name": "grpc",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8002,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "4",
                                "memory": "8Gi",
                                "nvidia.com/gpu": "1"
                            },
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi",
                                "nvidia.com/gpu": "1"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/mnt/common/triton-model-repo",
                                "name": "triton-model-path"
                            },
                            {
                                "mountPath": "/mnt/common/models",
                                "name": "model-path"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-gr5xv",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "nvidia-registrykey-secret"
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "nodeSelector": {
                    "nvidia.com/gpu.present": "true"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "model-path",
                        "persistentVolumeClaim": {
                            "claimName": "morpheus-ai-engine-model-pvc-single-cluster"
                        }
                    },
                    {
                        "name": "triton-model-path",
                        "persistentVolumeClaim": {
                            "claimName": "morpheus-ai-engine-triton-model-pvc-single-cluster"
                        }
                    },
                    {
                        "name": "kube-api-access-gr5xv",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T08:15:46Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T08:15:44Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T08:15:46Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T08:15:46Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T08:15:37Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "2",
                            "memory": "4Gi",
                            "nvidia.com/gpu": "1"
                        },
                        "containerID": "containerd://9c36ddefadfb4267b2111512a2ac75e78c493011fadb91852030acc6d6194f0c",
                        "image": "nvcr.io/nvidia/tritonserver:24.03-py3",
                        "imageID": "nvcr.io/nvidia/tritonserver@sha256:c490e2817f26f8acfb0cd9cd8f13568f56058fec5fbabef1aef805f97edbf75b",
                        "lastState": {},
                        "name": "morpheus-ai-engine",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "cpu": "4",
                                "memory": "8Gi",
                                "nvidia.com/gpu": "1"
                            },
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi",
                                "nvidia.com/gpu": "1"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-07T08:15:46Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/mnt/common/triton-model-repo",
                                "name": "triton-model-path"
                            },
                            {
                                "mountPath": "/mnt/common/models",
                                "name": "model-path"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-gr5xv",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.9",
                "podIPs": [
                    {
                        "ip": "10.244.0.9"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-07T08:15:44Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-05T16:37:51Z",
                "generateName": "mlflow-c95b7bb4c-",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "mlflow",
                    "pod-template-hash": "c95b7bb4c"
                },
                "name": "mlflow-c95b7bb4c-pgdt2",
                "namespace": "gpu-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "mlflow-c95b7bb4c",
                        "uid": "54edac2b-8cdf-43c8-b493-56623ce4e00d"
                    }
                ],
                "resourceVersion": "605600",
                "uid": "c3131a7a-a2b3-4970-8702-de1410ddd8af"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "mlflow",
                            "server",
                            "-h",
                            "0.0.0.0",
                            "-p",
                            "5000",
                            "--backend-store-uri",
                            "sqlite:////mlflow/db/mlflow-db.sqlite",
                            "--serve-artifacts",
                            "--artifacts-destination",
                            "s3://mlflow-artifacts-barcelona/",
                            "--default-artifact-root",
                            "s3://mlflow-artifacts-barcelona/"
                        ],
                        "env": [
                            {
                                "name": "MLFLOW_TRACKING_URI",
                                "value": "sqlite:////mlflow/db/mlflow-db.sqlite"
                            },
                            {
                                "name": "TRITON_MODEL_REPO",
                                "value": "/common/triton-model-repo"
                            },
                            {
                                "name": "TRITON_URL",
                                "value": "ai-engine.gpu-operator.svc.cluster.local:8000"
                            },
                            {
                                "name": "MLFLOW_S3_ENDPOINT_URL",
                                "value": "http://minio.minio.svc.cluster.local:9000"
                            },
                            {
                                "name": "AWS_ACCESS_KEY_ID",
                                "value": "20u0U8Fn49lXbYrmhdEu"
                            },
                            {
                                "name": "AWS_SECRET_ACCESS_KEY",
                                "value": "nz48G2HB3lWp0f8NZRySgICnp82NDG8SS3XssDH6"
                            }
                        ],
                        "image": "nvcr.io/nvidia/morpheus/mlflow-triton-plugin:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "morpheus-mlflow",
                        "ports": [
                            {
                                "containerPort": 5000,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/common/models",
                                "name": "model-path"
                            },
                            {
                                "mountPath": "/mlflow/db",
                                "name": "mlflow-db"
                            },
                            {
                                "mountPath": "/common/triton-model-repo",
                                "name": "triton-model-path"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7st8n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "nvidia-registrykey-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "/bin/bash",
                            "-c",
                            "db_file=$( echo sqlite:////mlflow/db/mlflow-db.sqlite | sed 's|sqlite:///||' )\nif [[ -f $db_file ]]; then\n   /opt/conda/envs/mlflow/bin/mlflow db upgrade sqlite:////mlflow/db/mlflow-db.sqlite\nfi\n"
                        ],
                        "image": "nvcr.io/nvidia/morpheus/mlflow-triton-plugin:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "db-migrate",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/mlflow/db",
                                "name": "mlflow-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7st8n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "mlflow-barcelona",
                "serviceAccountName": "mlflow-barcelona",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/opt/morpheus/common/models",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "model-path"
                    },
                    {
                        "hostPath": {
                            "path": "/opt/morpheus/common/mlflow/db",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "mlflow-db"
                    },
                    {
                        "hostPath": {
                            "path": "/opt/morpheus/common/triton-model-repo",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "triton-model-path"
                    },
                    {
                        "name": "kube-api-access-7st8n",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:38:33Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:38:38Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:38:39Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:38:39Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:37:51Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://143263c7d35d0ccd9f9ebcfbee6f440ab60dad7d82f3204b8099b1d858f57245",
                        "image": "nvcr.io/nvidia/morpheus/mlflow-triton-plugin:latest",
                        "imageID": "nvcr.io/nvidia/morpheus/mlflow-triton-plugin@sha256:b580b4401b95858157db1f87343499eb31008f8873e55643508ef585bac30d21",
                        "lastState": {},
                        "name": "morpheus-mlflow",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-05T16:38:38Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/common/models",
                                "name": "model-path"
                            },
                            {
                                "mountPath": "/mlflow/db",
                                "name": "mlflow-db"
                            },
                            {
                                "mountPath": "/common/triton-model-repo",
                                "name": "triton-model-path"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7st8n",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://235d8a512d10368e50444a679630e076caba870b669092013a6288827ec95c86",
                        "image": "nvcr.io/nvidia/morpheus/mlflow-triton-plugin:latest",
                        "imageID": "nvcr.io/nvidia/morpheus/mlflow-triton-plugin@sha256:b580b4401b95858157db1f87343499eb31008f8873e55643508ef585bac30d21",
                        "lastState": {},
                        "name": "db-migrate",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://235d8a512d10368e50444a679630e076caba870b669092013a6288827ec95c86",
                                "exitCode": 0,
                                "finishedAt": "2025-08-05T16:38:32Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-05T16:38:32Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/mlflow/db",
                                "name": "mlflow-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7st8n",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.247",
                "podIPs": [
                    {
                        "ip": "10.244.0.247"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-05T16:37:51Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "morpheus-sdk-client",
                    "meta.helm.sh/release-namespace": "gpu-operator"
                },
                "creationTimestamp": "2025-08-07T07:16:56Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "morpheus-sdk-client",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "morpheus-sdk-client",
                    "app.kubernetes.io/version": "24.03",
                    "helm.sh/chart": "morpheus-sdk-client-24.03"
                },
                "name": "sdk-cli-morpheus-sdk-client",
                "namespace": "gpu-operator",
                "resourceVersion": "935390",
                "uid": "59e78ad5-aa5a-4d32-9540-1f6436493ff8"
            },
            "spec": {
                "affinity": {
                    "podAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "app.kubernetes.io/name",
                                            "operator": "In",
                                            "values": [
                                                "ai-engine"
                                            ]
                                        }
                                    ]
                                },
                                "topologyKey": "kubernetes.io/hostname"
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "args": [
                            "/bin/sleep",
                            "infinity"
                        ],
                        "image": "nvcr.io/nvidia/morpheus/morpheus:24.03-runtime",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "morpheus-sdk-client",
                        "ports": [
                            {
                                "containerPort": 8888,
                                "name": "jupyter",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 5001,
                                "name": "report-api",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "privileged": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/common/models",
                                "name": "shared-storage",
                                "subPath": "models"
                            },
                            {
                                "mountPath": "/common/data",
                                "name": "shared-storage",
                                "subPath": "data"
                            },
                            {
                                "mountPath": "/mnt/common/triton-model-repo",
                                "name": "shared-storage",
                                "subPath": "triton-model-repo"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-jrl8t",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "nvidia-registrykey-secret"
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Never",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "shared-storage",
                        "persistentVolumeClaim": {
                            "claimName": "morpheus-ai-engine-triton-model-pvc-single-cluster"
                        }
                    },
                    {
                        "name": "kube-api-access-jrl8t",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T07:16:58Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T07:16:56Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T07:16:58Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T07:16:58Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T07:16:56Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://b7ca2dec8ae1222b1b32bfb7e9a6080f0cca8d060a2396bb78b87635cfe352e9",
                        "image": "nvcr.io/nvidia/morpheus/morpheus:24.03-runtime",
                        "imageID": "nvcr.io/nvidia/morpheus/morpheus@sha256:ca0c1292be247a450dd4e00ff0a3e754f0a601eba0be027569c46f1d97206a88",
                        "lastState": {},
                        "name": "morpheus-sdk-client",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-07T07:16:57Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/common/models",
                                "name": "shared-storage"
                            },
                            {
                                "mountPath": "/common/data",
                                "name": "shared-storage"
                            },
                            {
                                "mountPath": "/mnt/common/triton-model-repo",
                                "name": "shared-storage"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-jrl8t",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.167",
                "podIPs": [
                    {
                        "ip": "10.244.0.167"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-07T07:16:56Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites": "unconfined",
                    "container.apparmor.security.beta.kubernetes.io/cilium-agent": "unconfined",
                    "container.apparmor.security.beta.kubernetes.io/clean-cilium-state": "unconfined",
                    "container.apparmor.security.beta.kubernetes.io/config": "unconfined",
                    "container.apparmor.security.beta.kubernetes.io/install-cni-binaries": "unconfined",
                    "container.apparmor.security.beta.kubernetes.io/mount-bpf-fs": "unconfined",
                    "prometheus.io/port": "9962",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "generateName": "cilium-",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "cilium-agent",
                    "app.kubernetes.io/part-of": "cilium",
                    "controller-revision-hash": "5f8bf7f4d8",
                    "k8s-app": "cilium",
                    "pod-template-generation": "1"
                },
                "name": "cilium-2zfdk",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "cilium",
                        "uid": "e8d6eb83-bb75-4f28-b4f8-2c7dd2a27c87"
                    }
                ],
                "resourceVersion": "602871",
                "uid": "e7090c50-dca2-4fae-9985-7b17d42bb074"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "talos-13b-zf7"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAntiAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchLabels": {
                                        "k8s-app": "cilium"
                                    }
                                },
                                "topologyKey": "kubernetes.io/hostname"
                            }
                        ]
                    }
                },
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "--config-dir=/tmp/cilium/config-map"
                        ],
                        "command": [
                            "cilium-agent"
                        ],
                        "env": [
                            {
                                "name": "K8S_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "CILIUM_K8S_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "CILIUM_CLUSTERMESH_CONFIG",
                                "value": "/var/lib/cilium/clustermesh/"
                            },
                            {
                                "name": "GOMEMLIMIT",
                                "valueFrom": {
                                    "resourceFieldRef": {
                                        "divisor": "1",
                                        "resource": "limits.memory"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "localhost"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_PORT",
                                "value": "7445"
                            }
                        ],
                        "image": "quay.io/cilium/cilium:v1.17.5@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                        "imagePullPolicy": "IfNotPresent",
                        "lifecycle": {
                            "postStart": {
                                "exec": {
                                    "command": [
                                        "bash",
                                        "-c",
                                        "set -o errexit\nset -o pipefail\nset -o nounset\n\n# When running in AWS ENI mode, it's likely that 'aws-node' has\n# had a chance to install SNAT iptables rules. These can result\n# in dropped traffic, so we should attempt to remove them.\n# We do it using a 'postStart' hook since this may need to run\n# for nodes which might have already been init'ed but may still\n# have dangling rules. This is safe because there are no\n# dependencies on anything that is part of the startup script\n# itself, and can be safely run multiple times per node (e.g. in\n# case of a restart).\nif [[ \"$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')\" != \"0\" ]];\nthen\n    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'\n    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore\nfi\necho 'Done!'\n"
                                    ]
                                }
                            },
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/cni-uninstall.sh"
                                    ]
                                }
                            }
                        },
                        "livenessProbe": {
                            "failureThreshold": 10,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "httpHeaders": [
                                    {
                                        "name": "brief",
                                        "value": "true"
                                    },
                                    {
                                        "name": "require-k8s-connectivity",
                                        "value": "false"
                                    }
                                ],
                                "path": "/healthz",
                                "port": 9879,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "cilium-agent",
                        "ports": [
                            {
                                "containerPort": 4244,
                                "hostPort": 4244,
                                "name": "peer-service",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9962,
                                "hostPort": 9962,
                                "name": "prometheus",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9965,
                                "hostPort": 9965,
                                "name": "hubble-metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "httpHeaders": [
                                    {
                                        "name": "brief",
                                        "value": "true"
                                    }
                                ],
                                "path": "/healthz",
                                "port": 9879,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {},
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "CHOWN",
                                    "KILL",
                                    "NET_ADMIN",
                                    "NET_RAW",
                                    "IPC_LOCK",
                                    "SYS_ADMIN",
                                    "SYS_RESOURCE",
                                    "DAC_OVERRIDE",
                                    "FOWNER",
                                    "SETGID",
                                    "SETUID"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "seLinuxOptions": {
                                "level": "s0",
                                "type": "spc_t"
                            }
                        },
                        "startupProbe": {
                            "failureThreshold": 105,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "httpHeaders": [
                                    {
                                        "name": "brief",
                                        "value": "true"
                                    }
                                ],
                                "path": "/healthz",
                                "port": 9879,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 2,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/cilium/envoy/sockets",
                                "name": "envoy-sockets"
                            },
                            {
                                "mountPath": "/host/proc/sys/net",
                                "name": "host-proc-sys-net"
                            },
                            {
                                "mountPath": "/host/proc/sys/kernel",
                                "name": "host-proc-sys-kernel"
                            },
                            {
                                "mountPath": "/sys/fs/bpf",
                                "mountPropagation": "HostToContainer",
                                "name": "bpf-maps"
                            },
                            {
                                "mountPath": "/sys/fs/cgroup",
                                "name": "cilium-cgroup"
                            },
                            {
                                "mountPath": "/var/run/cilium",
                                "name": "cilium-run"
                            },
                            {
                                "mountPath": "/var/run/cilium/netns",
                                "mountPropagation": "HostToContainer",
                                "name": "cilium-netns"
                            },
                            {
                                "mountPath": "/host/etc/cni/net.d",
                                "name": "etc-cni-netd"
                            },
                            {
                                "mountPath": "/var/lib/cilium/clustermesh",
                                "name": "clustermesh-secrets",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/lib/modules",
                                "name": "lib-modules",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/run/xtables.lock",
                                "name": "xtables-lock"
                            },
                            {
                                "mountPath": "/var/lib/cilium/tls/hubble",
                                "name": "hubble-tls",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/tmp",
                                "name": "tmp"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-brvk7",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "initContainers": [
                    {
                        "command": [
                            "cilium-dbg",
                            "build-config"
                        ],
                        "env": [
                            {
                                "name": "K8S_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "CILIUM_K8S_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "localhost"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_PORT",
                                "value": "7445"
                            }
                        ],
                        "image": "quay.io/cilium/cilium:v1.17.5@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "config",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "tmp"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-brvk7",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "command": [
                            "sh",
                            "-ec",
                            "cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;\nnsenter --mount=/hostproc/1/ns/mnt \"${BIN_PATH}/cilium-sysctlfix\";\nrm /hostbin/cilium-sysctlfix\n"
                        ],
                        "env": [
                            {
                                "name": "BIN_PATH",
                                "value": "/opt/cni/bin"
                            }
                        ],
                        "image": "quay.io/cilium/cilium:v1.17.5@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "apply-sysctl-overwrites",
                        "resources": {},
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "SYS_ADMIN",
                                    "SYS_CHROOT",
                                    "SYS_PTRACE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "seLinuxOptions": {
                                "level": "s0",
                                "type": "spc_t"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/hostproc",
                                "name": "hostproc"
                            },
                            {
                                "mountPath": "/hostbin",
                                "name": "cni-path"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-brvk7",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "mount | grep \"/sys/fs/bpf type bpf\" || mount -t bpf bpf /sys/fs/bpf"
                        ],
                        "command": [
                            "/bin/bash",
                            "-c",
                            "--"
                        ],
                        "image": "quay.io/cilium/cilium:v1.17.5@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "mount-bpf-fs",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/sys/fs/bpf",
                                "mountPropagation": "Bidirectional",
                                "name": "bpf-maps"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-brvk7",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "command": [
                            "/init-container.sh"
                        ],
                        "env": [
                            {
                                "name": "CILIUM_ALL_STATE",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "clean-cilium-state",
                                        "name": "cilium-config",
                                        "optional": true
                                    }
                                }
                            },
                            {
                                "name": "CILIUM_BPF_STATE",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "clean-cilium-bpf-state",
                                        "name": "cilium-config",
                                        "optional": true
                                    }
                                }
                            },
                            {
                                "name": "WRITE_CNI_CONF_WHEN_READY",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "write-cni-conf-when-ready",
                                        "name": "cilium-config",
                                        "optional": true
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "localhost"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_PORT",
                                "value": "7445"
                            }
                        ],
                        "image": "quay.io/cilium/cilium:v1.17.5@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "clean-cilium-state",
                        "resources": {},
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN",
                                    "SYS_ADMIN",
                                    "SYS_RESOURCE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "seLinuxOptions": {
                                "level": "s0",
                                "type": "spc_t"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/sys/fs/bpf",
                                "name": "bpf-maps"
                            },
                            {
                                "mountPath": "/sys/fs/cgroup",
                                "mountPropagation": "HostToContainer",
                                "name": "cilium-cgroup"
                            },
                            {
                                "mountPath": "/var/run/cilium",
                                "name": "cilium-run"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-brvk7",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "command": [
                            "/install-plugin.sh"
                        ],
                        "image": "quay.io/cilium/cilium:v1.17.5@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "install-cni-binaries",
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "10Mi"
                            }
                        },
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "seLinuxOptions": {
                                "level": "s0",
                                "type": "spc_t"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/host/opt/cni/bin",
                                "name": "cni-path"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-brvk7",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "appArmorProfile": {
                        "type": "Unconfined"
                    }
                },
                "serviceAccount": "cilium",
                "serviceAccountName": "cilium",
                "terminationGracePeriodSeconds": 1,
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "tmp"
                    },
                    {
                        "hostPath": {
                            "path": "/var/run/cilium",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "cilium-run"
                    },
                    {
                        "hostPath": {
                            "path": "/var/run/netns",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "cilium-netns"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/bpf",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "bpf-maps"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": "Directory"
                        },
                        "name": "hostproc"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/cgroup",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "cilium-cgroup"
                    },
                    {
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "cni-path"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "etc-cni-netd"
                    },
                    {
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        },
                        "name": "lib-modules"
                    },
                    {
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        },
                        "name": "xtables-lock"
                    },
                    {
                        "hostPath": {
                            "path": "/var/run/cilium/envoy/sockets",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "envoy-sockets"
                    },
                    {
                        "name": "clustermesh-secrets",
                        "projected": {
                            "defaultMode": 256,
                            "sources": [
                                {
                                    "secret": {
                                        "name": "cilium-clustermesh",
                                        "optional": true
                                    }
                                },
                                {
                                    "secret": {
                                        "items": [
                                            {
                                                "key": "tls.key",
                                                "path": "common-etcd-client.key"
                                            },
                                            {
                                                "key": "tls.crt",
                                                "path": "common-etcd-client.crt"
                                            },
                                            {
                                                "key": "ca.crt",
                                                "path": "common-etcd-client-ca.crt"
                                            }
                                        ],
                                        "name": "clustermesh-apiserver-remote-cert",
                                        "optional": true
                                    }
                                },
                                {
                                    "secret": {
                                        "items": [
                                            {
                                                "key": "tls.key",
                                                "path": "local-etcd-client.key"
                                            },
                                            {
                                                "key": "tls.crt",
                                                "path": "local-etcd-client.crt"
                                            },
                                            {
                                                "key": "ca.crt",
                                                "path": "local-etcd-client-ca.crt"
                                            }
                                        ],
                                        "name": "clustermesh-apiserver-local-cert",
                                        "optional": true
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "hostPath": {
                            "path": "/proc/sys/net",
                            "type": "Directory"
                        },
                        "name": "host-proc-sys-net"
                    },
                    {
                        "hostPath": {
                            "path": "/proc/sys/kernel",
                            "type": "Directory"
                        },
                        "name": "host-proc-sys-kernel"
                    },
                    {
                        "name": "hubble-tls",
                        "projected": {
                            "defaultMode": 256,
                            "sources": [
                                {
                                    "secret": {
                                        "items": [
                                            {
                                                "key": "tls.crt",
                                                "path": "server.crt"
                                            },
                                            {
                                                "key": "tls.key",
                                                "path": "server.key"
                                            },
                                            {
                                                "key": "ca.crt",
                                                "path": "client-ca.crt"
                                            }
                                        ],
                                        "name": "hubble-server-certs",
                                        "optional": true
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kube-api-access-brvk7",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:13Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T05:58:10Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:39Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:39Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T05:57:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://0747122c02c86ad5fd9756eba00ebf8643144a66d2e3f9430d29788f87a69227",
                        "image": "sha256:3e67bef8bfc81721a62a0673d8ef98741213db02834568066f26a108c5392bad",
                        "imageID": "quay.io/cilium/cilium@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://0ae19af43055575973f14336a209bb7430452e43b803563d70292a288a57ace7",
                                "exitCode": 137,
                                "finishedAt": "2025-08-03T06:19:51Z",
                                "message": "desiredPolicyRevision=1 endpointID=619 identity=41259 ipv4=10.244.0.4 ipv6= k8sPodName=kube-system/hubble-relay-697879c474-9b6xz subsys=endpoint\ntime=2025-08-03T06:19:49Z level=info msg=\"Signal received\" signal=terminated\ntime=2025-08-03T06:19:49Z level=info msg=\"Stopping hive\"\ntime=2025-08-03T06:19:49Z level=error msg=\"one-shot job errored\" module=agent.infra.shell name=listener func=cmd.shell.listener error=\"accept failed: accept unix /var/run/cilium/shell.sock: use of closed network connection\"\ntime=2025-08-03T06:19:49Z level=info msg=\"Stopped serving cilium API at unix:///var/run/cilium/cilium.sock\" module=agent.infra.cilium-api-server\ntime=2025-08-03T06:19:49Z level=error msg=\"failed to delete reporter status tree\" module=health error=\"reporting for \\\"agent.controlplane.bgp-control-plane.job-diffstore-events\\\" has been stopped\"\ntime=\"2025-08-03T06:19:49.264652732Z\" level=info msg=\"Waiting for all endpoints' goroutines to be stopped.\" subsys=daemon\ntime=\"2025-08-03T06:19:49.264748885Z\" level=info msg=\"All endpoints' goroutines stopped.\" subsys=daemon\ntime=\"2025-08-03T06:19:49.264764488Z\" level=info msg=\"Cleaning up Cilium health endpoint\" subsys=daemon\ntime=\"2025-08-03T06:19:49.329811673Z\" level=info msg=\"Removed endpoint\" ciliumEndpointName=/ containerID= containerInterface= datapathPolicyRevision=1 desiredPolicyRevision=1 endpointID=1301 identity=4 ipv4=10.244.0.18 ipv6= k8sPodName=/ subsys=endpoint\ntime=2025-08-03T06:19:49Z level=info msg=\"Stop hook executed\" function=\"cmd.newDaemonPromise.func2 (cmd/daemon_main.go:1706) (agent.controlplane.daemon)\" duration=186.639922ms\ntime=\"2025-08-03T06:19:49.451379301Z\" level=info msg=\"Stopping fswatcher\" config=tls-server subsys=hubble\ntime=\"2025-08-03T06:19:49.451982269Z\" level=info msg=\"Datapath signal listener exiting\" subsys=signal\ntime=\"2025-08-03T06:19:49.452017942Z\" level=info msg=\"Datapath signal listener done\" subsys=signal\ntime=\"2025-08-03T06:19:49.452038642Z\" level=info msg=\"Signal handler closed. Stopping conntrack garbage collector\" subsys=ct-nat-map-gc\n",
                                "reason": "Error",
                                "startedAt": "2025-08-03T06:07:55Z"
                            }
                        },
                        "name": "cilium-agent",
                        "ready": true,
                        "resources": {},
                        "restartCount": 2,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-03T06:22:17Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/cilium/envoy/sockets",
                                "name": "envoy-sockets"
                            },
                            {
                                "mountPath": "/host/proc/sys/net",
                                "name": "host-proc-sys-net"
                            },
                            {
                                "mountPath": "/host/proc/sys/kernel",
                                "name": "host-proc-sys-kernel"
                            },
                            {
                                "mountPath": "/sys/fs/bpf",
                                "name": "bpf-maps"
                            },
                            {
                                "mountPath": "/sys/fs/cgroup",
                                "name": "cilium-cgroup"
                            },
                            {
                                "mountPath": "/var/run/cilium",
                                "name": "cilium-run"
                            },
                            {
                                "mountPath": "/var/run/cilium/netns",
                                "name": "cilium-netns"
                            },
                            {
                                "mountPath": "/host/etc/cni/net.d",
                                "name": "etc-cni-netd"
                            },
                            {
                                "mountPath": "/var/lib/cilium/clustermesh",
                                "name": "clustermesh-secrets",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/lib/modules",
                                "name": "lib-modules",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/run/xtables.lock",
                                "name": "xtables-lock"
                            },
                            {
                                "mountPath": "/var/lib/cilium/tls/hubble",
                                "name": "hubble-tls",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/tmp",
                                "name": "tmp"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-brvk7",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://a5c0c24630e1ac1aa6ccef6a740ac6dde2ad66891748cba59b9e3c8aeb438b8a",
                        "image": "sha256:3e67bef8bfc81721a62a0673d8ef98741213db02834568066f26a108c5392bad",
                        "imageID": "quay.io/cilium/cilium@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                        "lastState": {},
                        "name": "config",
                        "ready": true,
                        "resources": {},
                        "restartCount": 2,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://a5c0c24630e1ac1aa6ccef6a740ac6dde2ad66891748cba59b9e3c8aeb438b8a",
                                "exitCode": 0,
                                "finishedAt": "2025-08-03T06:22:13Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-03T06:22:13Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "tmp"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-brvk7",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    },
                    {
                        "containerID": "containerd://f64c9d2042ef6f800c45e5c637b452c36ab0814c5b09374dec45ac37cff7fb87",
                        "image": "sha256:3e67bef8bfc81721a62a0673d8ef98741213db02834568066f26a108c5392bad",
                        "imageID": "quay.io/cilium/cilium@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                        "lastState": {},
                        "name": "apply-sysctl-overwrites",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://f64c9d2042ef6f800c45e5c637b452c36ab0814c5b09374dec45ac37cff7fb87",
                                "exitCode": 0,
                                "finishedAt": "2025-08-03T06:22:13Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-03T06:22:13Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/hostproc",
                                "name": "hostproc"
                            },
                            {
                                "mountPath": "/hostbin",
                                "name": "cni-path"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-brvk7",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    },
                    {
                        "containerID": "containerd://eb40bc8455e2256f90058fea615131628a6eec41afbcf41a11696f7da2af1596",
                        "image": "sha256:3e67bef8bfc81721a62a0673d8ef98741213db02834568066f26a108c5392bad",
                        "imageID": "quay.io/cilium/cilium@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                        "lastState": {},
                        "name": "mount-bpf-fs",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://eb40bc8455e2256f90058fea615131628a6eec41afbcf41a11696f7da2af1596",
                                "exitCode": 0,
                                "finishedAt": "2025-08-03T06:22:14Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-03T06:22:14Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/sys/fs/bpf",
                                "name": "bpf-maps"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-brvk7",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    },
                    {
                        "containerID": "containerd://3d166fa761d380b52e8cd20d2e6db4dab496aafb97242931a59792d30f74c5ec",
                        "image": "sha256:3e67bef8bfc81721a62a0673d8ef98741213db02834568066f26a108c5392bad",
                        "imageID": "quay.io/cilium/cilium@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                        "lastState": {},
                        "name": "clean-cilium-state",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://3d166fa761d380b52e8cd20d2e6db4dab496aafb97242931a59792d30f74c5ec",
                                "exitCode": 0,
                                "finishedAt": "2025-08-03T06:22:15Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-03T06:22:15Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/sys/fs/bpf",
                                "name": "bpf-maps"
                            },
                            {
                                "mountPath": "/sys/fs/cgroup",
                                "name": "cilium-cgroup"
                            },
                            {
                                "mountPath": "/var/run/cilium",
                                "name": "cilium-run"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-brvk7",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    },
                    {
                        "allocatedResources": {
                            "cpu": "100m",
                            "memory": "10Mi"
                        },
                        "containerID": "containerd://c9204f61d0f78a518a730acdb3232d186667182b275bf2689fd409e4eeb81f28",
                        "image": "sha256:3e67bef8bfc81721a62a0673d8ef98741213db02834568066f26a108c5392bad",
                        "imageID": "quay.io/cilium/cilium@sha256:baf8541723ee0b72d6c489c741c81a6fdc5228940d66cb76ef5ea2ce3c639ea6",
                        "lastState": {},
                        "name": "install-cni-binaries",
                        "ready": true,
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "10Mi"
                            }
                        },
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://c9204f61d0f78a518a730acdb3232d186667182b275bf2689fd409e4eeb81f28",
                                "exitCode": 0,
                                "finishedAt": "2025-08-03T06:22:16Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-03T06:22:16Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/host/opt/cni/bin",
                                "name": "cni-path"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-brvk7",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "phase": "Running",
                "podIP": "10.0.0.8",
                "podIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-03T05:57:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "container.apparmor.security.beta.kubernetes.io/cilium-envoy": "unconfined"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "generateName": "cilium-envoy-",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "cilium-envoy",
                    "app.kubernetes.io/part-of": "cilium",
                    "controller-revision-hash": "57b4bc9dcd",
                    "k8s-app": "cilium-envoy",
                    "name": "cilium-envoy",
                    "pod-template-generation": "1"
                },
                "name": "cilium-envoy-cfpmg",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "cilium-envoy",
                        "uid": "a885260f-0407-439f-8589-15e34c2ca5c9"
                    }
                ],
                "resourceVersion": "602967",
                "uid": "72561d68-135e-4866-9597-893157d5982d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "talos-13b-zf7"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchLabels": {
                                        "k8s-app": "cilium"
                                    }
                                },
                                "topologyKey": "kubernetes.io/hostname"
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchLabels": {
                                        "k8s-app": "cilium-envoy"
                                    }
                                },
                                "topologyKey": "kubernetes.io/hostname"
                            }
                        ]
                    }
                },
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "--",
                            "-c /var/run/cilium/envoy/bootstrap-config.json",
                            "--base-id 0",
                            "--log-level info"
                        ],
                        "command": [
                            "/usr/bin/cilium-envoy-starter"
                        ],
                        "env": [
                            {
                                "name": "K8S_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "CILIUM_K8S_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "localhost"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_PORT",
                                "value": "7445"
                            }
                        ],
                        "image": "quay.io/cilium/cilium-envoy:v1.32.6-1749271279-0864395884b263913eac200ee2048fd985f8e626@sha256:9f69e290a7ea3d4edf9192acd81694089af048ae0d8a67fb63bd62dc1d72203e",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 10,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/healthz",
                                "port": 9878,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "cilium-envoy",
                        "ports": [
                            {
                                "containerPort": 9964,
                                "hostPort": 9964,
                                "name": "envoy-metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/healthz",
                                "port": 9878,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {},
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN",
                                    "SYS_ADMIN"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "seLinuxOptions": {
                                "level": "s0",
                                "type": "spc_t"
                            }
                        },
                        "startupProbe": {
                            "failureThreshold": 105,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/healthz",
                                "port": 9878,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 2,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/cilium/envoy/sockets",
                                "name": "envoy-sockets"
                            },
                            {
                                "mountPath": "/var/run/cilium/envoy/artifacts",
                                "name": "envoy-artifacts",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/cilium/envoy/",
                                "name": "envoy-config",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/sys/fs/bpf",
                                "mountPropagation": "HostToContainer",
                                "name": "bpf-maps"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-87vtn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "talos-13b-zf7",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "appArmorProfile": {
                        "type": "Unconfined"
                    }
                },
                "serviceAccount": "cilium-envoy",
                "serviceAccountName": "cilium-envoy",
                "terminationGracePeriodSeconds": 1,
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/run/cilium/envoy/sockets",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "envoy-sockets"
                    },
                    {
                        "hostPath": {
                            "path": "/var/run/cilium/envoy/artifacts",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "envoy-artifacts"
                    },
                    {
                        "configMap": {
                            "defaultMode": 256,
                            "items": [
                                {
                                    "key": "bootstrap-config.json",
                                    "path": "bootstrap-config.json"
                                }
                            ],
                            "name": "cilium-envoy-config"
                        },
                        "name": "envoy-config"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/bpf",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "bpf-maps"
                    },
                    {
                        "name": "kube-api-access-87vtn",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:13Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T05:57:33Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:55Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:55Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T05:57:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://68d79aff1050d4fb79dc5b53049da4325edb4cd51a27d86b973d6074b0c2a596",
                        "image": "sha256:bd9c4f56921449ed00ec228fa3f4a0835c6109dd3f28d9620e9a581fa56e7cb5",
                        "imageID": "quay.io/cilium/cilium-envoy@sha256:9f69e290a7ea3d4edf9192acd81694089af048ae0d8a67fb63bd62dc1d72203e",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://84a09226ca46615bb26b261f9aefd49c5de21a63a45a33cafd9679ec52aa1de0",
                                "exitCode": 137,
                                "finishedAt": "2025-08-03T06:19:51Z",
                                "message": "uration\n[2025-08-03 06:07:51.128][7][info][config] [external/envoy/source/server/configuration_impl.cc:124] loading 0 static secret(s)\n[2025-08-03 06:07:51.128][7][info][config] [external/envoy/source/server/configuration_impl.cc:130] loading 6 cluster(s)\n[2025-08-03 06:07:51.138][7][info][config] [external/envoy/source/server/configuration_impl.cc:138] loading 2 listener(s)\n[2025-08-03 06:07:51.141][7][info][config] [external/envoy/source/server/configuration_impl.cc:154] loading stats configuration\n[2025-08-03 06:07:51.142][7][info][runtime] [external/envoy/source/common/runtime/runtime_impl.cc:631] RTDS has finished initialization\n[2025-08-03 06:07:51.142][7][info][upstream] [external/envoy/source/common/upstream/cluster_manager_impl.cc:245] cm init: initializing cds\n[2025-08-03 06:07:51.143][7][info][main] [external/envoy/source/server/server.cc:990] starting main dispatch loop\n[2025-08-03 06:07:58.584][7][info][upstream] [external/envoy/source/common/upstream/cds_api_helper.cc:32] cds: add 0 cluster(s), remove 6 cluster(s)\n[2025-08-03 06:07:58.584][7][info][upstream] [external/envoy/source/common/upstream/cds_api_helper.cc:71] cds: added/updated 0 cluster(s), skipped 0 unmodified cluster(s)\n[2025-08-03 06:07:58.584][7][info][upstream] [external/envoy/source/common/upstream/cluster_manager_impl.cc:249] cm init: all clusters initialized\n[2025-08-03 06:07:58.584][7][info][main] [external/envoy/source/server/server.cc:970] all clusters initialized. initializing init manager\n[2025-08-03 06:07:58.585][7][info][config] [external/envoy/source/common/listener_manager/listener_manager_impl.cc:944] all dependencies initialized. starting workers\n[2025-08-03 06:19:49.453][7][warning][config] [external/envoy/source/extensions/config_subscription/grpc/grpc_stream.h:188] StreamListeners gRPC config stream to xds-grpc-cilium closed: 13, \n[2025-08-03 06:19:49.453][7][warning][config] [external/envoy/source/extensions/config_subscription/grpc/grpc_stream.h:188] StreamClusters gRPC config stream to xds-grpc-cilium closed: 13, \n",
                                "reason": "Error",
                                "startedAt": "2025-08-03T06:07:50Z"
                            }
                        },
                        "name": "cilium-envoy",
                        "ready": true,
                        "resources": {},
                        "restartCount": 2,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-03T06:22:13Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/cilium/envoy/sockets",
                                "name": "envoy-sockets"
                            },
                            {
                                "mountPath": "/var/run/cilium/envoy/artifacts",
                                "name": "envoy-artifacts",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/run/cilium/envoy/",
                                "name": "envoy-config",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/sys/fs/bpf",
                                "name": "bpf-maps"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-87vtn",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.0.0.8",
                "podIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-03T05:57:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "prometheus.io/port": "9963",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-03T05:57:33Z",
                "generateName": "cilium-operator-665557897b-",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "cilium-operator",
                    "app.kubernetes.io/part-of": "cilium",
                    "io.cilium/app": "operator",
                    "name": "cilium-operator",
                    "pod-template-hash": "665557897b"
                },
                "name": "cilium-operator-665557897b-srm7g",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "cilium-operator-665557897b",
                        "uid": "595db792-7af4-4bc4-97fb-e8524363eb5f"
                    }
                ],
                "resourceVersion": "1728014",
                "uid": "941f21c3-e469-45e4-8819-8308ae5940ed"
            },
            "spec": {
                "affinity": {
                    "podAntiAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchLabels": {
                                        "io.cilium/app": "operator"
                                    }
                                },
                                "topologyKey": "kubernetes.io/hostname"
                            }
                        ]
                    }
                },
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "--config-dir=/tmp/cilium/config-map",
                            "--debug=$(CILIUM_DEBUG)"
                        ],
                        "command": [
                            "cilium-operator-generic"
                        ],
                        "env": [
                            {
                                "name": "K8S_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "CILIUM_K8S_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "CILIUM_DEBUG",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "debug",
                                        "name": "cilium-config",
                                        "optional": true
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "localhost"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_PORT",
                                "value": "7445"
                            }
                        ],
                        "image": "quay.io/cilium/operator-generic:v1.17.5@sha256:f954c97eeb1b47ed67d08cc8fb4108fb829f869373cbb3e698a7f8ef1085b09e",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/healthz",
                                "port": 9234,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 3
                        },
                        "name": "cilium-operator",
                        "ports": [
                            {
                                "containerPort": 9963,
                                "hostPort": 9963,
                                "name": "prometheus",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/healthz",
                                "port": 9234,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 3
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp/cilium/config-map",
                                "name": "cilium-config-path",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-86rpz",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "talos-13b-zf7",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "cilium-operator",
                "serviceAccountName": "cilium-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "cilium-config"
                        },
                        "name": "cilium-config-path"
                    },
                    {
                        "name": "kube-api-access-86rpz",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:13Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T05:57:33Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-10T02:17:44Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-10T02:17:44Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T05:57:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://a25752da6862ba5628e2efdcbc3a23ec25e698d6b6ea329ba8b043866e9194a0",
                        "image": "sha256:629ada1caf10490dbd1d678026db9f0c10652ce80c884e150724f1bb81a08b40",
                        "imageID": "quay.io/cilium/operator-generic@sha256:f954c97eeb1b47ed67d08cc8fb4108fb829f869373cbb3e698a7f8ef1085b09e",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://bf76b0ed755d12706dbc3b8d3f3a7aa715f8958e3541bbd102a85945970b076b",
                                "exitCode": 0,
                                "finishedAt": "2025-08-10T02:17:43Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-06T07:43:42Z"
                            }
                        },
                        "name": "cilium-operator",
                        "ready": true,
                        "resources": {},
                        "restartCount": 4,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-10T02:17:44Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp/cilium/config-map",
                                "name": "cilium-config-path",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-86rpz",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.0.0.8",
                "podIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-03T05:57:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-03T05:57:45Z",
                "generateName": "coredns-578d4f8ffc-",
                "generation": 1,
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "578d4f8ffc"
                },
                "name": "coredns-578d4f8ffc-nw4nk",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "coredns-578d4f8ffc",
                        "uid": "9edfdb5b-1f2a-45bc-b2d7-8d508199fa24"
                    }
                ],
                "resourceVersion": "602903",
                "uid": "9c4d589b-be93-4b87-a242-6cb1b495ae40"
            },
            "spec": {
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                },
                                "weight": 100
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "env": [
                            {
                                "name": "GOMEMLIMIT",
                                "value": "161MiB"
                            }
                        ],
                        "image": "registry.k8s.io/coredns/coredns:v1.12.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "coredns",
                        "ports": [
                            {
                                "containerPort": 53,
                                "name": "dns",
                                "protocol": "UDP"
                            },
                            {
                                "containerPort": 53,
                                "name": "dns-tcp",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9153,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/coredns",
                                "name": "config-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hkjhs",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "Default",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "coredns",
                "serviceAccountName": "coredns",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/control-plane",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.cloudprovider.kubernetes.io/uninitialized",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "name": "coredns"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "kube-api-access-hkjhs",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:23Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T05:58:15Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:44Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:44Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T05:58:15Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "100m",
                            "memory": "70Mi"
                        },
                        "containerID": "containerd://4e9267edcf40f20737ce32fc3f4f4aaab490cf38712c229bfa135bd0b1036809",
                        "image": "registry.k8s.io/coredns/coredns:v1.12.0",
                        "imageID": "registry.k8s.io/coredns/coredns@sha256:40384aa1f5ea6bfdc77997d243aec73da05f27aed0c5e9d65bfa98933c519d97",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://30fc5679f37e7b23900daef99510f65eb7213c4cf950c598a55b59a2b899d525",
                                "exitCode": 0,
                                "finishedAt": "2025-08-03T06:19:54Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-03T06:08:00Z"
                            }
                        },
                        "name": "coredns",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "restartCount": 2,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-03T06:22:22Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 65532,
                                "supplementalGroups": [
                                    65532
                                ],
                                "uid": 65532
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/coredns",
                                "name": "config-volume",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hkjhs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.252",
                "podIPs": [
                    {
                        "ip": "10.244.0.252"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-03T05:58:15Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-03T05:58:00Z",
                "generateName": "coredns-578d4f8ffc-",
                "generation": 1,
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "578d4f8ffc"
                },
                "name": "coredns-578d4f8ffc-sgk8h",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "coredns-578d4f8ffc",
                        "uid": "9edfdb5b-1f2a-45bc-b2d7-8d508199fa24"
                    }
                ],
                "resourceVersion": "602884",
                "uid": "9fbac88a-ca2a-4efa-a125-68d4d73aec88"
            },
            "spec": {
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                },
                                "weight": 100
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "env": [
                            {
                                "name": "GOMEMLIMIT",
                                "value": "161MiB"
                            }
                        ],
                        "image": "registry.k8s.io/coredns/coredns:v1.12.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "coredns",
                        "ports": [
                            {
                                "containerPort": 53,
                                "name": "dns",
                                "protocol": "UDP"
                            },
                            {
                                "containerPort": 53,
                                "name": "dns-tcp",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9153,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/coredns",
                                "name": "config-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-bk5hp",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "Default",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "coredns",
                "serviceAccountName": "coredns",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/control-plane",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.cloudprovider.kubernetes.io/uninitialized",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "name": "coredns"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "kube-api-access-bk5hp",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:23Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T05:58:15Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:40Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:40Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T05:58:15Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "100m",
                            "memory": "70Mi"
                        },
                        "containerID": "containerd://cf6e7441a33a81a735e3dc0f593729453fa8673e1faefbbeab1cf3f6529ab89e",
                        "image": "registry.k8s.io/coredns/coredns:v1.12.0",
                        "imageID": "registry.k8s.io/coredns/coredns@sha256:40384aa1f5ea6bfdc77997d243aec73da05f27aed0c5e9d65bfa98933c519d97",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://85704be7ef1bc707b42709b76e0ecdc22ed6e57b6020ad51a10ca175c6c90479",
                                "exitCode": 0,
                                "finishedAt": "2025-08-03T06:19:54Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-03T06:08:00Z"
                            }
                        },
                        "name": "coredns",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "restartCount": 2,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-03T06:22:22Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 65532,
                                "supplementalGroups": [
                                    65532
                                ],
                                "uid": 65532
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/coredns",
                                "name": "config-volume",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-bk5hp",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.54",
                "podIPs": [
                    {
                        "ip": "10.244.0.54"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-03T05:58:15Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-03T06:19:48Z",
                "generateName": "hubble-relay-697879c474-",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "hubble-relay",
                    "app.kubernetes.io/part-of": "cilium",
                    "k8s-app": "hubble-relay",
                    "pod-template-hash": "697879c474"
                },
                "name": "hubble-relay-697879c474-47dwg",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "hubble-relay-697879c474",
                        "uid": "1d92148c-4c9e-4960-83b9-743339a1c265"
                    }
                ],
                "resourceVersion": "603054",
                "uid": "9bde7ed4-bfee-445f-941c-bf02fb347130"
            },
            "spec": {
                "affinity": {
                    "podAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchLabels": {
                                        "k8s-app": "cilium"
                                    }
                                },
                                "topologyKey": "kubernetes.io/hostname"
                            }
                        ]
                    }
                },
                "automountServiceAccountToken": false,
                "containers": [
                    {
                        "args": [
                            "serve"
                        ],
                        "command": [
                            "hubble-relay"
                        ],
                        "image": "quay.io/cilium/hubble-relay:v1.17.5@sha256:fbb8a6afa8718200fca9381ad274ed695792dbadd2417b0e99c36210ae4964ff",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 12,
                            "grpc": {
                                "port": 4222,
                                "service": ""
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 10
                        },
                        "name": "hubble-relay",
                        "ports": [
                            {
                                "containerPort": 4245,
                                "name": "grpc",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "grpc": {
                                "port": 4222,
                                "service": ""
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 3
                        },
                        "resources": {},
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsGroup": 65532,
                            "runAsNonRoot": true,
                            "runAsUser": 65532
                        },
                        "startupProbe": {
                            "failureThreshold": 20,
                            "grpc": {
                                "port": 4222,
                                "service": ""
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 3,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hubble-relay",
                                "name": "config",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/lib/hubble-relay/tls",
                                "name": "tls",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 65532
                },
                "serviceAccount": "hubble-relay",
                "serviceAccountName": "hubble-relay",
                "terminationGracePeriodSeconds": 1,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "config.yaml",
                                    "path": "config.yaml"
                                }
                            ],
                            "name": "hubble-relay-config"
                        },
                        "name": "config"
                    },
                    {
                        "name": "tls",
                        "projected": {
                            "defaultMode": 256,
                            "sources": [
                                {
                                    "secret": {
                                        "items": [
                                            {
                                                "key": "tls.crt",
                                                "path": "client.crt"
                                            },
                                            {
                                                "key": "tls.key",
                                                "path": "client.key"
                                            },
                                            {
                                                "key": "ca.crt",
                                                "path": "hubble-server-ca.crt"
                                            }
                                        ],
                                        "name": "hubble-relay-client-certs"
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:58Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:57Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:20:27Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:20:27Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:57Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://703962527bdbf829b71e982eb29f6ec2195d32cd8775f45d2fd35fb09a88a98b",
                        "image": "sha256:6f1c94057eecfdc488dc0d5aefd743ecf67106a9acf700d702978d4637fce87f",
                        "imageID": "quay.io/cilium/hubble-relay@sha256:fbb8a6afa8718200fca9381ad274ed695792dbadd2417b0e99c36210ae4964ff",
                        "lastState": {},
                        "name": "hubble-relay",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-03T06:22:58Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 65532,
                                "supplementalGroups": [
                                    65532
                                ],
                                "uid": 65532
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hubble-relay",
                                "name": "config",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/lib/hubble-relay/tls",
                                "name": "tls",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.86",
                "podIPs": [
                    {
                        "ip": "10.244.0.86"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-03T06:22:57Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-03T06:19:46Z",
                "generateName": "hubble-ui-76d4965bb6-",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "hubble-ui",
                    "app.kubernetes.io/part-of": "cilium",
                    "k8s-app": "hubble-ui",
                    "pod-template-hash": "76d4965bb6"
                },
                "name": "hubble-ui-76d4965bb6-bqdhk",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "hubble-ui-76d4965bb6",
                        "uid": "560b53c4-1c35-4d65-abab-98d6adc1622c"
                    }
                ],
                "resourceVersion": "602920",
                "uid": "bd9cdada-fed5-4496-b1c3-6bcca53c5ab6"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "image": "quay.io/cilium/hubble-ui:v0.13.2@sha256:9e37c1296b802830834cc87342a9182ccbb71ffebb711971e849221bd9d59392",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "frontend",
                        "ports": [
                            {
                                "containerPort": 8081,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/nginx/conf.d/default.conf",
                                "name": "hubble-ui-nginx-conf",
                                "subPath": "nginx.conf"
                            },
                            {
                                "mountPath": "/tmp",
                                "name": "tmp-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-ddjtl",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "env": [
                            {
                                "name": "EVENTS_SERVER_PORT",
                                "value": "8090"
                            },
                            {
                                "name": "FLOWS_API_ADDR",
                                "value": "hubble-relay:80"
                            }
                        ],
                        "image": "quay.io/cilium/hubble-ui-backend:v0.13.2@sha256:a034b7e98e6ea796ed26df8f4e71f83fc16465a19d166eff67a03b822c0bfa15",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "backend",
                        "ports": [
                            {
                                "containerPort": 8090,
                                "name": "grpc",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-ddjtl",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 1001,
                    "runAsGroup": 1001,
                    "runAsUser": 1001
                },
                "serviceAccount": "hubble-ui",
                "serviceAccountName": "hubble-ui",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "hubble-ui-nginx"
                        },
                        "name": "hubble-ui-nginx-conf"
                    },
                    {
                        "emptyDir": {},
                        "name": "tmp-dir"
                    },
                    {
                        "name": "kube-api-access-ddjtl",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:58Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:57Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:45Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:45Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:57Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://7be5a52bfd5a9519fa0144ca99af2dc6d3cc5e4b05713166536ebad89e03d262",
                        "image": "sha256:ea0d31b07382091e2ee1fd2ebb8b0d29ffc0d814765a9a172326bb4acc4981fa",
                        "imageID": "quay.io/cilium/hubble-ui-backend@sha256:a034b7e98e6ea796ed26df8f4e71f83fc16465a19d166eff67a03b822c0bfa15",
                        "lastState": {},
                        "name": "backend",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-03T06:22:58Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 1001,
                                "supplementalGroups": [
                                    1001
                                ],
                                "uid": 1001
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-ddjtl",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    },
                    {
                        "containerID": "containerd://168e3ce81b75cadab0626c8ca5750a69773282f5930bb7a26b78cfc839509b35",
                        "image": "sha256:875daebd108d05fe3859c14244e873337f985156fd702a128d20169d71b7e9b4",
                        "imageID": "quay.io/cilium/hubble-ui@sha256:9e37c1296b802830834cc87342a9182ccbb71ffebb711971e849221bd9d59392",
                        "lastState": {},
                        "name": "frontend",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-03T06:22:58Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 1001,
                                "supplementalGroups": [
                                    1001
                                ],
                                "uid": 1001
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/nginx/conf.d/default.conf",
                                "name": "hubble-ui-nginx-conf"
                            },
                            {
                                "mountPath": "/tmp",
                                "name": "tmp-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-ddjtl",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.254",
                "podIPs": [
                    {
                        "ip": "10.244.0.254"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-03T06:22:57Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-03T06:05:17Z",
                "generateName": "hubble-ui-76d4965bb6-",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "hubble-ui",
                    "app.kubernetes.io/part-of": "cilium",
                    "k8s-app": "hubble-ui",
                    "pod-template-hash": "76d4965bb6"
                },
                "name": "hubble-ui-76d4965bb6-fmsg8",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "hubble-ui-76d4965bb6",
                        "uid": "560b53c4-1c35-4d65-abab-98d6adc1622c"
                    }
                ],
                "resourceVersion": "602803",
                "uid": "7ec7285a-a06f-40ce-b0ee-931b58af79da"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "image": "quay.io/cilium/hubble-ui:v0.13.2@sha256:9e37c1296b802830834cc87342a9182ccbb71ffebb711971e849221bd9d59392",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "frontend",
                        "ports": [
                            {
                                "containerPort": 8081,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/nginx/conf.d/default.conf",
                                "name": "hubble-ui-nginx-conf",
                                "subPath": "nginx.conf"
                            },
                            {
                                "mountPath": "/tmp",
                                "name": "tmp-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-kkwrd",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "env": [
                            {
                                "name": "EVENTS_SERVER_PORT",
                                "value": "8090"
                            },
                            {
                                "name": "FLOWS_API_ADDR",
                                "value": "hubble-relay:80"
                            }
                        ],
                        "image": "quay.io/cilium/hubble-ui-backend:v0.13.2@sha256:a034b7e98e6ea796ed26df8f4e71f83fc16465a19d166eff67a03b822c0bfa15",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "backend",
                        "ports": [
                            {
                                "containerPort": 8090,
                                "name": "grpc",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-kkwrd",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 1001,
                    "runAsGroup": 1001,
                    "runAsUser": 1001
                },
                "serviceAccount": "hubble-ui",
                "serviceAccountName": "hubble-ui",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "hubble-ui-nginx"
                        },
                        "name": "hubble-ui-nginx-conf"
                    },
                    {
                        "emptyDir": {},
                        "name": "tmp-dir"
                    },
                    {
                        "name": "kube-api-access-kkwrd",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:19:46Z",
                        "message": "Pod was terminated in response to imminent node shutdown.",
                        "reason": "TerminationByKubelet",
                        "status": "True",
                        "type": "DisruptionTarget"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:19:46Z",
                        "status": "False",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:08:35Z",
                        "reason": "PodCompleted",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:19:46Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:19:46Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:08:35Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://e0e27f705bddc95c30f87a3a4c43443e574d73e8bd4e71b207887a99fb2b302a",
                        "image": "sha256:ea0d31b07382091e2ee1fd2ebb8b0d29ffc0d814765a9a172326bb4acc4981fa",
                        "imageID": "quay.io/cilium/hubble-ui-backend@sha256:a034b7e98e6ea796ed26df8f4e71f83fc16465a19d166eff67a03b822c0bfa15",
                        "lastState": {},
                        "name": "backend",
                        "ready": false,
                        "resources": {},
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://e0e27f705bddc95c30f87a3a4c43443e574d73e8bd4e71b207887a99fb2b302a",
                                "exitCode": 0,
                                "finishedAt": "2025-08-03T06:19:46Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-03T06:08:37Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 1001,
                                "supplementalGroups": [
                                    1001
                                ],
                                "uid": 1001
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-kkwrd",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    },
                    {
                        "containerID": "containerd://ea90dd8ad7b16a9bb9d92a03be49466cf7f608467c3fafa8c90b14eb786d5760",
                        "image": "sha256:875daebd108d05fe3859c14244e873337f985156fd702a128d20169d71b7e9b4",
                        "imageID": "quay.io/cilium/hubble-ui@sha256:9e37c1296b802830834cc87342a9182ccbb71ffebb711971e849221bd9d59392",
                        "lastState": {},
                        "name": "frontend",
                        "ready": false,
                        "resources": {},
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://ea90dd8ad7b16a9bb9d92a03be49466cf7f608467c3fafa8c90b14eb786d5760",
                                "exitCode": 0,
                                "finishedAt": "2025-08-03T06:19:46Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-03T06:08:36Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 1001,
                                "supplementalGroups": [
                                    1001
                                ],
                                "uid": 1001
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/nginx/conf.d/default.conf",
                                "name": "hubble-ui-nginx-conf"
                            },
                            {
                                "mountPath": "/tmp",
                                "name": "tmp-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-kkwrd",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Succeeded",
                "qosClass": "BestEffort",
                "startTime": "2025-08-03T06:08:35Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubernetes.io/config.hash": "115e93517f94dd244e25c277edec3a49",
                    "kubernetes.io/config.mirror": "115e93517f94dd244e25c277edec3a49",
                    "kubernetes.io/config.seen": "2025-08-06T07:43:19.626432340Z",
                    "kubernetes.io/config.source": "http",
                    "talos.dev/config-file-version": "2111",
                    "talos.dev/config-version": "1",
                    "talos.dev/secrets-version": "1"
                },
                "creationTimestamp": "2025-08-06T07:45:29Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "control-plane",
                    "app.kubernetes.io/managed-by": "Talos",
                    "app.kubernetes.io/name": "kube-apiserver",
                    "app.kubernetes.io/version": "1.33.1",
                    "component": "kube-apiserver",
                    "k8s-app": "kube-apiserver",
                    "tier": "control-plane"
                },
                "name": "kube-apiserver-talos-13b-zf7",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "controller": true,
                        "kind": "Node",
                        "name": "talos-13b-zf7",
                        "uid": "033affc5-b9f3-4d41-99d1-3f8e441af0a5"
                    }
                ],
                "resourceVersion": "733983",
                "uid": "d5c22346-933c-4c91-b762-917b0b0086b6"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/usr/local/bin/kube-apiserver",
                            "--admission-control-config-file=/system/config/kubernetes/kube-apiserver/admission-control-config.yaml",
                            "--advertise-address=$(POD_IP)",
                            "--allow-privileged=true",
                            "--anonymous-auth=false",
                            "--api-audiences=https://192.168.1.16:6443",
                            "--audit-log-maxage=30",
                            "--audit-log-maxbackup=10",
                            "--audit-log-maxsize=100",
                            "--audit-log-path=/var/log/audit/kube/kube-apiserver.log",
                            "--audit-policy-file=/system/config/kubernetes/kube-apiserver/auditpolicy.yaml",
                            "--authorization-config=/system/config/kubernetes/kube-apiserver/authorization-config.yaml",
                            "--bind-address=0.0.0.0",
                            "--client-ca-file=/system/secrets/kubernetes/kube-apiserver/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--encryption-provider-config=/system/secrets/kubernetes/kube-apiserver/encryptionconfig.yaml",
                            "--etcd-cafile=/system/secrets/kubernetes/kube-apiserver/etcd-client-ca.crt",
                            "--etcd-certfile=/system/secrets/kubernetes/kube-apiserver/etcd-client.crt",
                            "--etcd-keyfile=/system/secrets/kubernetes/kube-apiserver/etcd-client.key",
                            "--etcd-servers=https://localhost:2379",
                            "--kubelet-client-certificate=/system/secrets/kubernetes/kube-apiserver/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/system/secrets/kubernetes/kube-apiserver/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--profiling=false",
                            "--proxy-client-cert-file=/system/secrets/kubernetes/kube-apiserver/front-proxy-client.crt",
                            "--proxy-client-key-file=/system/secrets/kubernetes/kube-apiserver/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/system/secrets/kubernetes/kube-apiserver/aggregator-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--secure-port=6443",
                            "--service-account-issuer=https://192.168.1.16:6443",
                            "--service-account-key-file=/system/secrets/kubernetes/kube-apiserver/service-account.pub",
                            "--service-account-signing-key-file=/system/secrets/kubernetes/kube-apiserver/service-account.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--tls-cert-file=/system/secrets/kubernetes/kube-apiserver/apiserver.crt",
                            "--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256",
                            "--tls-min-version=VersionTLS12",
                            "--tls-private-key-file=/system/secrets/kubernetes/kube-apiserver/apiserver.key"
                        ],
                        "env": [
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            }
                        ],
                        "image": "registry.k8s.io/kube-apiserver:v1.33.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "kube-apiserver",
                        "resources": {
                            "requests": {
                                "cpu": "200m",
                                "memory": "512Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/system/secrets/kubernetes/kube-apiserver",
                                "name": "secrets",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/system/config/kubernetes/kube-apiserver",
                                "name": "config",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/audit/kube",
                                "name": "audit"
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsGroup": 65534,
                    "runAsNonRoot": true,
                    "runAsUser": 65534
                },
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/system/secrets/kubernetes/kube-apiserver",
                            "type": ""
                        },
                        "name": "secrets"
                    },
                    {
                        "hostPath": {
                            "path": "/system/config/kubernetes/kube-apiserver",
                            "type": ""
                        },
                        "name": "config"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/audit/kube",
                            "type": ""
                        },
                        "name": "audit"
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-06T07:43:57Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:36Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-06T07:43:57Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-06T07:43:57Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:36Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "200m",
                            "memory": "512Mi"
                        },
                        "containerID": "containerd://6b8e093ba1897f87a9b1092d24beb8db92b4b0a16e32af87c65b0d21e56db1aa",
                        "image": "registry.k8s.io/kube-apiserver:v1.33.1",
                        "imageID": "registry.k8s.io/kube-apiserver@sha256:d8ae2fb01c39aa1c7add84f3d54425cf081c24c11e3946830292a8cfa4293548",
                        "lastState": {},
                        "name": "kube-apiserver",
                        "ready": true,
                        "resources": {
                            "requests": {
                                "cpu": "200m",
                                "memory": "512Mi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-06T07:43:56Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 65534,
                                "supplementalGroups": [
                                    65534
                                ],
                                "uid": 65534
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/system/secrets/kubernetes/kube-apiserver",
                                "name": "secrets",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/system/config/kubernetes/kube-apiserver",
                                "name": "config",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/log/audit/kube",
                                "name": "audit"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.0.0.8",
                "podIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-05T16:19:36Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubernetes.io/config.hash": "4d3b30a044d21fa784146c041bd709f9",
                    "kubernetes.io/config.mirror": "4d3b30a044d21fa784146c041bd709f9",
                    "kubernetes.io/config.seen": "2025-08-03T06:21:02.174435194Z",
                    "kubernetes.io/config.source": "http",
                    "talos.dev/config-version": "1",
                    "talos.dev/secrets-version": "1"
                },
                "creationTimestamp": "2025-08-03T06:22:12Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "control-plane",
                    "app.kubernetes.io/managed-by": "Talos",
                    "app.kubernetes.io/name": "kube-controller-manager",
                    "app.kubernetes.io/version": "1.33.1",
                    "component": "kube-controller-manager",
                    "k8s-app": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "name": "kube-controller-manager-talos-13b-zf7",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "controller": true,
                        "kind": "Node",
                        "name": "talos-13b-zf7",
                        "uid": "033affc5-b9f3-4d41-99d1-3f8e441af0a5"
                    }
                ],
                "resourceVersion": "733895",
                "uid": "ebf4b559-9eb0-4e72-b9af-85486fb9c3f6"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/usr/local/bin/kube-controller-manager",
                            "--use-service-account-credentials",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/system/secrets/kubernetes/kube-controller-manager/kubeconfig",
                            "--authorization-kubeconfig=/system/secrets/kubernetes/kube-controller-manager/kubeconfig",
                            "--bind-address=127.0.0.1",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-signing-cert-file=/system/secrets/kubernetes/kube-controller-manager/ca.crt",
                            "--cluster-signing-key-file=/system/secrets/kubernetes/kube-controller-manager/ca.key",
                            "--configure-cloud-routes=false",
                            "--controllers=*,tokencleaner",
                            "--kubeconfig=/system/secrets/kubernetes/kube-controller-manager/kubeconfig",
                            "--leader-elect=true",
                            "--profiling=false",
                            "--root-ca-file=/system/secrets/kubernetes/kube-controller-manager/ca.crt",
                            "--service-account-private-key-file=/system/secrets/kubernetes/kube-controller-manager/service-account.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--tls-min-version=VersionTLS13"
                        ],
                        "env": [
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            }
                        ],
                        "image": "registry.k8s.io/kube-controller-manager:v1.33.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "host": "localhost",
                                "path": "/healthz",
                                "port": 10257,
                                "scheme": "HTTPS"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "name": "kube-controller-manager",
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "256Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "startupProbe": {
                            "failureThreshold": 12,
                            "httpGet": {
                                "host": "localhost",
                                "path": "/healthz",
                                "port": 10257,
                                "scheme": "HTTPS"
                            },
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/system/secrets/kubernetes/kube-controller-manager",
                                "name": "secrets",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsGroup": 65535,
                    "runAsNonRoot": true,
                    "runAsUser": 65535
                },
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/system/secrets/kubernetes/kube-controller-manager",
                            "type": ""
                        },
                        "name": "secrets"
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:36Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:36Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-06T07:44:53Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-06T07:44:53Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:36Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "50m",
                            "memory": "256Mi"
                        },
                        "containerID": "containerd://33143717dd2344122c13108522df231e1761b904e4e7ab003980215e96c1a0b8",
                        "image": "registry.k8s.io/kube-controller-manager:v1.33.1",
                        "imageID": "registry.k8s.io/kube-controller-manager@sha256:7c9bea694e3a3c01ed6a5ee02d55a6124cc08e0b2eec6caa33f2c396b8cbc3f8",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://678376d544caf7e673da79da08192a654543a93ebbc208a406bbb127f57b6028",
                                "exitCode": 1,
                                "finishedAt": "2025-08-06T07:44:17Z",
                                "reason": "Error",
                                "startedAt": "2025-08-06T07:44:06Z"
                            }
                        },
                        "name": "kube-controller-manager",
                        "ready": true,
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "256Mi"
                            }
                        },
                        "restartCount": 6,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-06T07:44:45Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 65535,
                                "supplementalGroups": [
                                    65535
                                ],
                                "uid": 65535
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.0.0.8",
                "podIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-05T16:19:36Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-01T08:46:36Z",
                "generateName": "kube-proxy-",
                "generation": 1,
                "labels": {
                    "controller-revision-hash": "6df57fdd54",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "name": "kube-proxy-mtqqx",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "c31d3d0c-7e65-4644-bee5-466ef3ec3fc1"
                    }
                ],
                "resourceVersion": "602780",
                "uid": "edd7356c-afee-456f-a6fd-5afa6413a9bf"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "talos-13b-zf7"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--cluster-cidr=10.244.0.0/16",
                            "--conntrack-max-per-core=0",
                            "--hostname-override=$(NODE_NAME)",
                            "--kubeconfig=/etc/kubernetes/kubeconfig",
                            "--proxy-mode=nftables"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            }
                        ],
                        "image": "registry.k8s.io/kube-proxy:v1.33.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "kube-proxy",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/lib/modules",
                                "name": "lib-modules",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/ssl/certs",
                                "name": "ssl-certs-host",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/kubernetes",
                                "name": "kubeconfig",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-q9vpb",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kube-proxy",
                "serviceAccountName": "kube-proxy",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        },
                        "name": "lib-modules"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": ""
                        },
                        "name": "ssl-certs-host"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "kubeconfig-in-cluster"
                        },
                        "name": "kubeconfig"
                    },
                    {
                        "name": "kube-api-access-q9vpb",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:13Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-01T08:46:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:13Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-03T06:22:13Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-01T08:46:36Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://563d2339f08e0411502ef96d2741c9a12e5297c548275090c4ff89312fec8086",
                        "image": "registry.k8s.io/kube-proxy:v1.33.1",
                        "imageID": "registry.k8s.io/kube-proxy@sha256:7ddf379897139ae8ade8b33cb9373b70c632a4d5491da6e234f5d830e0a50807",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://4c496b97956a88869f02ae74aa5d52561e15f53299e2eea434ad30b8630a370e",
                                "exitCode": 2,
                                "finishedAt": "2025-08-03T06:19:49Z",
                                "reason": "Error",
                                "startedAt": "2025-08-03T06:07:50Z"
                            }
                        },
                        "name": "kube-proxy",
                        "ready": true,
                        "resources": {},
                        "restartCount": 5,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-03T06:22:13Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/lib/modules",
                                "name": "lib-modules",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/etc/ssl/certs",
                                "name": "ssl-certs-host",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/etc/kubernetes",
                                "name": "kubeconfig",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-q9vpb",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.0.0.8",
                "podIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-01T08:46:42Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubernetes.io/config.hash": "1b916e1811f10b2aa121041411d1b263",
                    "kubernetes.io/config.mirror": "1b916e1811f10b2aa121041411d1b263",
                    "kubernetes.io/config.seen": "2025-08-03T06:21:02.174436732Z",
                    "kubernetes.io/config.source": "http",
                    "talos.dev/config-version": "1",
                    "talos.dev/secrets-version": "1"
                },
                "creationTimestamp": "2025-08-03T06:22:12Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "control-plane",
                    "app.kubernetes.io/managed-by": "Talos",
                    "app.kubernetes.io/name": "kube-scheduler",
                    "app.kubernetes.io/version": "1.33.1",
                    "component": "kube-scheduler",
                    "k8s-app": "kube-scheduler",
                    "tier": "control-plane"
                },
                "name": "kube-scheduler-talos-13b-zf7",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "controller": true,
                        "kind": "Node",
                        "name": "talos-13b-zf7",
                        "uid": "033affc5-b9f3-4d41-99d1-3f8e441af0a5"
                    }
                ],
                "resourceVersion": "734009",
                "uid": "2f87ae67-b8c3-4135-af46-f793400b3156"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/usr/local/bin/kube-scheduler",
                            "--authentication-kubeconfig=/system/secrets/kubernetes/kube-scheduler/kubeconfig",
                            "--authentication-tolerate-lookup-failure=false",
                            "--authorization-kubeconfig=/system/secrets/kubernetes/kube-scheduler/kubeconfig",
                            "--bind-address=127.0.0.1",
                            "--config=/system/config/kubernetes/kube-scheduler/scheduler-config.yaml",
                            "--leader-elect=true",
                            "--profiling=false",
                            "--tls-min-version=VersionTLS13"
                        ],
                        "env": [
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            }
                        ],
                        "image": "registry.k8s.io/kube-scheduler:v1.33.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "host": "localhost",
                                "path": "/livez",
                                "port": 10259,
                                "scheme": "HTTPS"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "kube-scheduler",
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "host": "localhost",
                                "path": "/readyz",
                                "port": 10259,
                                "scheme": "HTTPS"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m",
                                "memory": "64Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "startupProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "host": "localhost",
                                "path": "/livez",
                                "port": 10259,
                                "scheme": "HTTPS"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/system/secrets/kubernetes/kube-scheduler",
                                "name": "secrets",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/system/config/kubernetes/kube-scheduler",
                                "name": "config",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsGroup": 65536,
                    "runAsNonRoot": true,
                    "runAsUser": 65536
                },
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/system/secrets/kubernetes/kube-scheduler",
                            "type": ""
                        },
                        "name": "secrets"
                    },
                    {
                        "hostPath": {
                            "path": "/system/config/kubernetes/kube-scheduler",
                            "type": ""
                        },
                        "name": "config"
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:36Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:36Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-06T07:45:46Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-06T07:45:46Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T16:19:36Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "10m",
                            "memory": "64Mi"
                        },
                        "containerID": "containerd://84d98bf4f9baf0d11769e5dc5c43534e5628ce12f12c4be79e01b62f618a74a7",
                        "image": "registry.k8s.io/kube-scheduler:v1.33.1",
                        "imageID": "registry.k8s.io/kube-scheduler@sha256:395b7de7cdbdcc3c3a3db270844a3f71d757e2447a1e4db76b4cce46fba7fd55",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://daee2ca62d247d27fa840743cb7915090c777a39a46aff5bbf54134743b01aa2",
                                "exitCode": 0,
                                "finishedAt": "2025-08-06T07:44:50Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-06T07:44:45Z"
                            }
                        },
                        "name": "kube-scheduler",
                        "ready": true,
                        "resources": {
                            "requests": {
                                "cpu": "10m",
                                "memory": "64Mi"
                            }
                        },
                        "restartCount": 7,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-06T07:45:37Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 65536,
                                "supplementalGroups": [
                                    65536
                                ],
                                "uid": 65536
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.0.0.8",
                "podIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-05T16:19:36Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-05T08:33:57Z",
                "generateName": "nvidia-device-plugin-",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "nvidia-device-plugin",
                    "app.kubernetes.io/name": "nvidia-device-plugin",
                    "controller-revision-hash": "797c85f9b",
                    "pod-template-generation": "1"
                },
                "name": "nvidia-device-plugin-pmshr",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "nvidia-device-plugin",
                        "uid": "0bf16e17-63b8-4ed8-8005-7e207f017128"
                    }
                ],
                "resourceVersion": "602804",
                "uid": "22e4be05-a31d-4081-a750-136764d2d70c"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "talos-13b-zf7"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "command": [
                            "nvidia-device-plugin"
                        ],
                        "env": [
                            {
                                "name": "MPS_ROOT",
                                "value": "/run/nvidia/mps"
                            },
                            {
                                "name": "NVIDIA_VISIBLE_DEVICES",
                                "value": "all"
                            },
                            {
                                "name": "NVIDIA_DRIVER_CAPABILITIES",
                                "value": "compute,utility"
                            }
                        ],
                        "image": "nvcr.io/nvidia/k8s-device-plugin:v0.17.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "nvidia-device-plugin-ctr",
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/kubelet/device-plugins",
                                "name": "device-plugin"
                            },
                            {
                                "mountPath": "/dev/shm",
                                "name": "mps-shm"
                            },
                            {
                                "mountPath": "/mps",
                                "name": "mps-root"
                            },
                            {
                                "mountPath": "/var/run/cdi",
                                "name": "cdi-root"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hh22d",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "runtimeClassName": "nvidia",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "nvidia.com/gpu",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/lib/kubelet/device-plugins",
                            "type": ""
                        },
                        "name": "device-plugin"
                    },
                    {
                        "hostPath": {
                            "path": "/run/nvidia/mps",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "mps-root"
                    },
                    {
                        "hostPath": {
                            "path": "/run/nvidia/mps/shm",
                            "type": ""
                        },
                        "name": "mps-shm"
                    },
                    {
                        "hostPath": {
                            "path": "/var/run/cdi",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "cdi-root"
                    },
                    {
                        "name": "kube-api-access-hh22d",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T08:34:11Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T08:33:57Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T08:34:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T08:34:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T08:33:57Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://2d4c8604d70f4c2cb2109e327bd4c996507cee06a630f82b472b1b7b4ca19a39",
                        "image": "nvcr.io/nvidia/k8s-device-plugin:v0.17.0",
                        "imageID": "nvcr.io/nvidia/k8s-device-plugin@sha256:7089559ce6153018806857f5049085bae15b3bf6f1c8bd19d8b12f707d087dea",
                        "lastState": {},
                        "name": "nvidia-device-plugin-ctr",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-05T08:34:11Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/kubelet/device-plugins",
                                "name": "device-plugin"
                            },
                            {
                                "mountPath": "/dev/shm",
                                "name": "mps-shm"
                            },
                            {
                                "mountPath": "/mps",
                                "name": "mps-root"
                            },
                            {
                                "mountPath": "/var/run/cdi",
                                "name": "cdi-root"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hh22d",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.120",
                "podIPs": [
                    {
                        "ip": "10.244.0.120"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-05T08:33:57Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/restartedAt": "2025-08-05T10:49:49+02:00"
                },
                "creationTimestamp": "2025-08-05T08:49:49Z",
                "generateName": "local-path-provisioner-7ccbc84d94-",
                "generation": 1,
                "labels": {
                    "app": "local-path-provisioner",
                    "pod-template-hash": "7ccbc84d94"
                },
                "name": "local-path-provisioner-7ccbc84d94-2zxj9",
                "namespace": "local-path-storage",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "local-path-provisioner-7ccbc84d94",
                        "uid": "536603d7-1ec0-4225-9e67-ca9e0cd629b0"
                    }
                ],
                "resourceVersion": "602791",
                "uid": "b3c08102-ed87-4c1d-8dd2-9f3266247c99"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "local-path-provisioner",
                            "--debug",
                            "start",
                            "--config",
                            "/etc/config/config.json"
                        ],
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "CONFIG_MOUNT_PATH",
                                "value": "/etc/config/"
                            }
                        ],
                        "image": "rancher/local-path-provisioner:v0.0.31",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "local-path-provisioner",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/config/",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-x49zd",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "local-path-provisioner-service-account",
                "serviceAccountName": "local-path-provisioner-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "local-path-config"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "kube-api-access-x49zd",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T08:49:50Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T08:49:49Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T08:49:50Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T08:49:50Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T08:49:49Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://bb5204ee13daff897146e3a55a3bcc09906abbb66bd3ff0f3f825aa2eb9a3770",
                        "image": "docker.io/rancher/local-path-provisioner:v0.0.31",
                        "imageID": "docker.io/rancher/local-path-provisioner@sha256:80496fdeb307541007621959aa13aed41d31db9cd2dc4167c19833e0bfa3878c",
                        "lastState": {},
                        "name": "local-path-provisioner",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-05T08:49:50Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    6,
                                    10,
                                    11,
                                    20,
                                    26,
                                    27
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/config/",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-x49zd",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.8",
                "podIPs": [
                    {
                        "ip": "10.244.0.8"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-05T08:49:49Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "d7787e9aef31fa7be8453cd19a250082a8f94ea127922a45ee713590591c43c7",
                    "checksum/secrets": "af625c2dc8135a58062dd356936a073ab1d71f6a91c906d41d650e3956d4414a"
                },
                "creationTimestamp": "2025-08-05T14:08:37Z",
                "generateName": "minio-68f476c967-",
                "generation": 1,
                "labels": {
                    "app": "minio",
                    "pod-template-hash": "68f476c967",
                    "release": "minio"
                },
                "name": "minio-68f476c967-wd2qb",
                "namespace": "minio",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "minio-68f476c967",
                        "uid": "78927bd6-c7fe-4290-b6f1-95fc657323fd"
                    }
                ],
                "resourceVersion": "602796",
                "uid": "aff39c0c-1a8e-4e56-968b-2320510e497e"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/bin/sh",
                            "-ce",
                            "/usr/bin/docker-entrypoint.sh minio server /export -S /etc/minio/certs/ --address :9000 --console-address :9001"
                        ],
                        "env": [
                            {
                                "name": "MINIO_ROOT_USER",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "rootUser",
                                        "name": "minio"
                                    }
                                }
                            },
                            {
                                "name": "MINIO_ROOT_PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "rootPassword",
                                        "name": "minio"
                                    }
                                }
                            },
                            {
                                "name": "MINIO_PROMETHEUS_AUTH_TYPE",
                                "value": "public"
                            },
                            {
                                "name": "MINIO_BROWSER_REDIRECT_URL",
                                "value": "http://localhost:9001"
                            },
                            {
                                "name": "MINIO_PROMETHEUS_AUTH_TYPE",
                                "value": "public"
                            },
                            {
                                "name": "MINIO_PROMETHEUS_URL",
                                "value": "http://prometheus-stack-kube-prom-prometheus.monitoring.svc.cluster.local:9090"
                            },
                            {
                                "name": "MINIO_SERVER_URL",
                                "value": "http://localhost:9000"
                            }
                        ],
                        "image": "quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "minio",
                        "ports": [
                            {
                                "containerPort": 9000,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9001,
                                "name": "http-console",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "4",
                                "memory": "16Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "4Gi"
                            }
                        },
                        "securityContext": {
                            "readOnlyRootFilesystem": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp/credentials",
                                "name": "minio-user",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/export",
                                "name": "export"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-4p8vn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 1001,
                    "fsGroupChangePolicy": "OnRootMismatch",
                    "runAsGroup": 1001,
                    "runAsUser": 1001
                },
                "serviceAccount": "minio-sa",
                "serviceAccountName": "minio-sa",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "export",
                        "persistentVolumeClaim": {
                            "claimName": "minio"
                        }
                    },
                    {
                        "name": "minio-user",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "minio"
                        }
                    },
                    {
                        "name": "kube-api-access-4p8vn",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T14:08:48Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T14:08:43Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T14:08:48Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T14:08:48Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T14:08:43Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "1",
                            "memory": "4Gi"
                        },
                        "containerID": "containerd://00a68ece794a114f3f2d5374c112d8a2628a1ebf8e9f34ce432908ddffa3e4c9",
                        "image": "quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z",
                        "imageID": "quay.io/minio/minio@sha256:1dce27c494a16bae114774f1cec295493f3613142713130c2d22dd5696be6ad3",
                        "lastState": {},
                        "name": "minio",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "cpu": "4",
                                "memory": "16Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "4Gi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-05T14:08:48Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 1001,
                                "supplementalGroups": [
                                    1001
                                ],
                                "uid": 1001
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp/credentials",
                                "name": "minio-user",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/export",
                                "name": "export"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-4p8vn",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.235",
                "podIPs": [
                    {
                        "ip": "10.244.0.235"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-05T14:08:43Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "prometheus.io/path": "/metrics",
                    "prometheus.io/port": "8080",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2025-08-07T09:01:51Z",
                "generateName": "spark-operator-controller-6b86fc5457-",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "spark-operator",
                    "app.kubernetes.io/name": "spark-operator",
                    "pod-template-hash": "6b86fc5457"
                },
                "name": "spark-operator-controller-6b86fc5457-kd29h",
                "namespace": "spark-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "spark-operator-controller-6b86fc5457",
                        "uid": "8be717d6-bcdd-49bb-ad4d-7ccc517dbb99"
                    }
                ],
                "resourceVersion": "950438",
                "uid": "2dd1fe39-c070-4503-bd74-5293a74bc8da"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "controller",
                            "start",
                            "--zap-log-level=info",
                            "--zap-encoder=console",
                            "--namespaces=default",
                            "--controller-threads=10",
                            "--enable-ui-service=true",
                            "--enable-metrics=true",
                            "--metrics-bind-address=:8080",
                            "--metrics-endpoint=/metrics",
                            "--metrics-prefix=",
                            "--metrics-labels=app_type",
                            "--metrics-job-start-latency-buckets=30,60,90,120,150,180,210,240,270,300",
                            "--leader-election=true",
                            "--leader-election-lock-name=spark-operator-controller-lock",
                            "--leader-election-lock-namespace=spark-operator",
                            "--workqueue-ratelimiter-bucket-qps=50",
                            "--workqueue-ratelimiter-bucket-size=500",
                            "--workqueue-ratelimiter-max-delay=6h",
                            "--driver-pod-creation-grace-period=10s",
                            "--max-tracked-executor-per-app=1000"
                        ],
                        "image": "ghcr.io/kubeflow/spark-operator/controller:2.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "spark-operator-controller",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readyz",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "privileged": false,
                            "readOnlyRootFilesystem": true,
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "tmp"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-znw49",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 185
                },
                "serviceAccount": "spark-operator-controller",
                "serviceAccountName": "spark-operator-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {
                            "sizeLimit": "1Gi"
                        },
                        "name": "tmp"
                    },
                    {
                        "name": "kube-api-access-znw49",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T09:02:20Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T09:01:51Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T09:02:20Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T09:02:20Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T09:01:51Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://aaee27de8909ce9a3513e2d79c417243a18dacc622aa0c5e365bd946920e6d7a",
                        "image": "ghcr.io/kubeflow/spark-operator/controller:2.3.0",
                        "imageID": "ghcr.io/kubeflow/spark-operator/controller@sha256:91354688795e44546cb14965d24331b861c52f6a0f598a74bf1580e16cb4f6ef",
                        "lastState": {},
                        "name": "spark-operator-controller",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-07T09:02:19Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 185,
                                "supplementalGroups": [
                                    185
                                ],
                                "uid": 185
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "tmp"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-znw49",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.62",
                "podIPs": [
                    {
                        "ip": "10.244.0.62"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-07T09:01:51Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-07T09:01:51Z",
                "generateName": "spark-operator-webhook-7d76df45bf-",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "spark-operator",
                    "app.kubernetes.io/name": "spark-operator",
                    "pod-template-hash": "7d76df45bf"
                },
                "name": "spark-operator-webhook-7d76df45bf-z7db7",
                "namespace": "spark-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "spark-operator-webhook-7d76df45bf",
                        "uid": "6e2df6d3-f4b0-40dc-b555-a68acb8787d7"
                    }
                ],
                "resourceVersion": "950434",
                "uid": "e1b67320-8b82-4605-b9b2-d46ddbe5b0b6"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "webhook",
                            "start",
                            "--zap-log-level=info",
                            "--zap-encoder=console",
                            "--namespaces=default",
                            "--webhook-secret-name=spark-operator-webhook-certs",
                            "--webhook-secret-namespace=spark-operator",
                            "--webhook-svc-name=spark-operator-webhook-svc",
                            "--webhook-svc-namespace=spark-operator",
                            "--webhook-port=9443",
                            "--mutating-webhook-name=spark-operator-webhook",
                            "--validating-webhook-name=spark-operator-webhook",
                            "--enable-metrics=true",
                            "--metrics-bind-address=:8080",
                            "--metrics-endpoint=/metrics",
                            "--metrics-prefix=",
                            "--metrics-labels=app_type",
                            "--leader-election=true",
                            "--leader-election-lock-name=spark-operator-webhook-lock",
                            "--leader-election-lock-namespace=spark-operator"
                        ],
                        "image": "ghcr.io/kubeflow/spark-operator/controller:2.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "spark-operator-webhook",
                        "ports": [
                            {
                                "containerPort": 9443,
                                "name": "webhook",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8080,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readyz",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "privileged": false,
                            "readOnlyRootFilesystem": true,
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/k8s-webhook-server/serving-certs",
                                "name": "serving-certs",
                                "subPath": "serving-certs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nc99f",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 185
                },
                "serviceAccount": "spark-operator-webhook",
                "serviceAccountName": "spark-operator-webhook",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {
                            "sizeLimit": "500Mi"
                        },
                        "name": "serving-certs"
                    },
                    {
                        "name": "kube-api-access-nc99f",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T09:02:20Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T09:01:51Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T09:02:20Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T09:02:20Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-07T09:01:51Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://35f237a6be49712fc3b1c0f17f0dd72eebd62714a8f99e349ff43c1d48269722",
                        "image": "ghcr.io/kubeflow/spark-operator/controller:2.3.0",
                        "imageID": "ghcr.io/kubeflow/spark-operator/controller@sha256:91354688795e44546cb14965d24331b861c52f6a0f598a74bf1580e16cb4f6ef",
                        "lastState": {},
                        "name": "spark-operator-webhook",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-07T09:02:19Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 185,
                                "supplementalGroups": [
                                    185
                                ],
                                "uid": 185
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/k8s-webhook-server/serving-certs",
                                "name": "serving-certs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nc99f",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.144",
                "podIPs": [
                    {
                        "ip": "10.244.0.144"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-07T09:01:51Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-05T08:56:16Z",
                "generateName": "strimzi-cluster-operator-57d8ff798f-",
                "generation": 1,
                "labels": {
                    "name": "strimzi-cluster-operator",
                    "pod-template-hash": "57d8ff798f",
                    "strimzi.io/kind": "cluster-operator"
                },
                "name": "strimzi-cluster-operator-57d8ff798f-8t29f",
                "namespace": "strimzi-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "strimzi-cluster-operator-57d8ff798f",
                        "uid": "06079319-233c-4cc7-aa66-3a14c13bfe59"
                    }
                ],
                "resourceVersion": "733814",
                "uid": "f94d9688-6318-47ee-a23f-bfde7fa7a813"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "/opt/strimzi/bin/cluster_operator_run.sh"
                        ],
                        "env": [
                            {
                                "name": "STRIMZI_NAMESPACE",
                                "value": "*"
                            },
                            {
                                "name": "STRIMZI_FULL_RECONCILIATION_INTERVAL_MS",
                                "value": "120000"
                            },
                            {
                                "name": "STRIMZI_OPERATION_TIMEOUT_MS",
                                "value": "300000"
                            },
                            {
                                "name": "STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE",
                                "value": "quay.io/strimzi/kafka:0.46.1-kafka-4.0.0"
                            },
                            {
                                "name": "STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE",
                                "value": "quay.io/strimzi/kafka:0.46.1-kafka-4.0.0"
                            },
                            {
                                "name": "STRIMZI_KAFKA_IMAGES",
                                "value": "3.9.0=quay.io/strimzi/kafka:0.46.1-kafka-3.9.0\n4.0.0=quay.io/strimzi/kafka:0.46.1-kafka-4.0.0\n"
                            },
                            {
                                "name": "STRIMZI_KAFKA_CONNECT_IMAGES",
                                "value": "3.9.0=quay.io/strimzi/kafka:0.46.1-kafka-3.9.0\n4.0.0=quay.io/strimzi/kafka:0.46.1-kafka-4.0.0\n"
                            },
                            {
                                "name": "STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES",
                                "value": "3.9.0=quay.io/strimzi/kafka:0.46.1-kafka-3.9.0\n4.0.0=quay.io/strimzi/kafka:0.46.1-kafka-4.0.0\n"
                            },
                            {
                                "name": "STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE",
                                "value": "quay.io/strimzi/operator:0.46.1"
                            },
                            {
                                "name": "STRIMZI_DEFAULT_USER_OPERATOR_IMAGE",
                                "value": "quay.io/strimzi/operator:0.46.1"
                            },
                            {
                                "name": "STRIMZI_DEFAULT_KAFKA_INIT_IMAGE",
                                "value": "quay.io/strimzi/operator:0.46.1"
                            },
                            {
                                "name": "STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE",
                                "value": "quay.io/strimzi/kafka-bridge:0.32.0"
                            },
                            {
                                "name": "STRIMZI_DEFAULT_KANIKO_EXECUTOR_IMAGE",
                                "value": "quay.io/strimzi/kaniko-executor:0.46.1"
                            },
                            {
                                "name": "STRIMZI_DEFAULT_MAVEN_BUILDER",
                                "value": "quay.io/strimzi/maven-builder:0.46.1"
                            },
                            {
                                "name": "STRIMZI_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "STRIMZI_LEADER_ELECTION_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "STRIMZI_LEADER_ELECTION_LEASE_NAME",
                                "value": "strimzi-cluster-operator"
                            },
                            {
                                "name": "STRIMZI_LEADER_ELECTION_LEASE_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "STRIMZI_LEADER_ELECTION_IDENTITY",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/strimzi/operator:0.46.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthy",
                                "port": "http",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "strimzi-cluster-operator",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": "http",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "8",
                                "memory": "64Gi"
                            },
                            "requests": {
                                "cpu": "4",
                                "memory": "32Gi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "strimzi-tmp"
                            },
                            {
                                "mountPath": "/opt/strimzi/custom-config/",
                                "name": "co-config-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hpvj7",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "strimzi-cluster-operator",
                "serviceAccountName": "strimzi-cluster-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {
                            "medium": "Memory",
                            "sizeLimit": "1Mi"
                        },
                        "name": "strimzi-tmp"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "strimzi-cluster-operator"
                        },
                        "name": "co-config-volume"
                    },
                    {
                        "name": "kube-api-access-hpvj7",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T08:56:36Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T08:56:16Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-06T07:44:32Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-06T07:44:32Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-05T08:56:16Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "4",
                            "memory": "32Gi"
                        },
                        "containerID": "containerd://d40e06aacba6570ef30a0759c6be162883fa76fb815238cad61d7ad3aa5e5c68",
                        "image": "quay.io/strimzi/operator:0.46.1",
                        "imageID": "quay.io/strimzi/operator@sha256:6a22e4968e9d409405423d12c04a0e3fecaea2ee2794bd27de7cf21f59453265",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://bbc348b9ee50477a6353f8b851faabffba09da4163f90c34642a0009e60b41c7",
                                "exitCode": 1,
                                "finishedAt": "2025-08-06T07:43:59Z",
                                "reason": "Error",
                                "startedAt": "2025-08-05T08:56:35Z"
                            }
                        },
                        "name": "strimzi-cluster-operator",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "cpu": "8",
                                "memory": "64Gi"
                            },
                            "requests": {
                                "cpu": "4",
                                "memory": "32Gi"
                            }
                        },
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-06T07:44:00Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 1001
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "strimzi-tmp"
                            },
                            {
                                "mountPath": "/opt/strimzi/custom-config/",
                                "name": "co-config-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hpvj7",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.92",
                "podIPs": [
                    {
                        "ip": "10.244.0.92"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-05T08:56:16Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2025-08-17T07:36:12Z",
                "generation": 1,
                "labels": {
                    "run": "netshoot-debug"
                },
                "name": "netshoot-debug",
                "namespace": "wazuh",
                "resourceVersion": "4496191",
                "uid": "6e1f0514-dec2-483c-a5d3-39c198408ed7"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sleep",
                            "3600"
                        ],
                        "image": "nicolaka/netshoot",
                        "imagePullPolicy": "Always",
                        "name": "netshoot-debug",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-8gsmn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-8gsmn",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:36:15Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:36:12Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T12:37:56Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-19T12:37:56Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:36:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://5093cbac807c087e9f7e514b2835830f931ebdefb5b3a30de513e8f8c303342f",
                        "image": "docker.io/nicolaka/netshoot:latest",
                        "imageID": "docker.io/nicolaka/netshoot@sha256:7f08c4aff13ff61a35d30e30c5c1ea8396eac6ab4ce19fd02d5a4b3b5d0d09a2",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://80ad196f75b2db59afe0defd5bc577bcafffd1844c0129a0855932a37b613c3f",
                                "exitCode": 0,
                                "finishedAt": "2025-08-19T12:37:53Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-19T11:37:53Z"
                            }
                        },
                        "name": "netshoot-debug",
                        "ready": true,
                        "resources": {},
                        "restartCount": 53,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-19T12:37:55Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    6,
                                    10,
                                    11,
                                    20,
                                    26,
                                    27
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-8gsmn",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.180",
                "podIPs": [
                    {
                        "ip": "10.244.0.180"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-17T07:36:12Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"wazuh-admin-tools\"},\"name\":\"wazuh-admin-tools\",\"namespace\":\"wazuh\"},\"spec\":{\"containers\":[{\"args\":[\"-c\",\"apt-get update \\u0026\\u0026 apt-get install -y curl sqlite3 \\u0026\\u0026 while true; do sleep 30; done\"],\"command\":[\"/bin/bash\"],\"env\":[{\"name\":\"WAZUH_API_URL\",\"value\":\"https://wazuh-siem-manager-master-0.wazuh-siem-manager-cluster.wazuh.svc.cluster.local:55000\"}],\"image\":\"python:3.11-slim\",\"name\":\"admin-tools\"}],\"restartPolicy\":\"Always\"}}\n"
                },
                "creationTimestamp": "2025-08-17T07:17:57Z",
                "generation": 1,
                "labels": {
                    "app": "wazuh-admin-tools"
                },
                "name": "wazuh-admin-tools",
                "namespace": "wazuh",
                "resourceVersion": "3816950",
                "uid": "898499e9-9dd7-4743-8e8a-46ffeb1e58b8"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "-c",
                            "apt-get update \u0026\u0026 apt-get install -y curl sqlite3 \u0026\u0026 while true; do sleep 30; done"
                        ],
                        "command": [
                            "/bin/bash"
                        ],
                        "env": [
                            {
                                "name": "WAZUH_API_URL",
                                "value": "https://wazuh-siem-manager-master-0.wazuh-siem-manager-cluster.wazuh.svc.cluster.local:55000"
                            }
                        ],
                        "image": "python:3.11-slim",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "admin-tools",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nxk8n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-nxk8n",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:59Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:57Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:59Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:59Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:57Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://7b6b1ed1788cd6903ce526b27061a89675e9e3c15d0efc06dd41683cb9b6bad4",
                        "image": "docker.io/library/python:3.11-slim",
                        "imageID": "docker.io/library/python@sha256:0ce77749ac83174a31d5e107ce0cfa6b28a2fd6b0615e029d9d84b39c48976ee",
                        "lastState": {},
                        "name": "admin-tools",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-17T07:17:59Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nxk8n",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.105",
                "podIPs": [
                    {
                        "ip": "10.244.0.105"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-17T07:17:57Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"wazuh-diagnostic\"},\"name\":\"wazuh-diagnostic\",\"namespace\":\"wazuh\"},\"spec\":{\"containers\":[{\"args\":[\"-c\",\"while true; do sleep 30; done\"],\"command\":[\"/bin/sh\"],\"env\":[{\"name\":\"WAZUH_API_URL\",\"value\":\"https://wazuh-siem-manager-master-0.wazuh-siem-manager-cluster.wazuh.svc.cluster.local:55000\"},{\"name\":\"WAZUH_API_USER\",\"value\":\"wazuh\"},{\"name\":\"WAZUH_API_PASS\",\"value\":\"wazuh\"}],\"image\":\"curlimages/curl:latest\",\"name\":\"diagnostic\"}],\"restartPolicy\":\"Always\"}}\n"
                },
                "creationTimestamp": "2025-08-17T07:17:57Z",
                "generation": 1,
                "labels": {
                    "app": "wazuh-diagnostic"
                },
                "name": "wazuh-diagnostic",
                "namespace": "wazuh",
                "resourceVersion": "3816949",
                "uid": "51621741-7584-472f-b2c1-0d0897c256ec"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "-c",
                            "while true; do sleep 30; done"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "WAZUH_API_URL",
                                "value": "https://wazuh-siem-manager-master-0.wazuh-siem-manager-cluster.wazuh.svc.cluster.local:55000"
                            },
                            {
                                "name": "WAZUH_API_USER",
                                "value": "wazuh"
                            },
                            {
                                "name": "WAZUH_API_PASS",
                                "value": "wazuh"
                            }
                        ],
                        "image": "curlimages/curl:latest",
                        "imagePullPolicy": "Always",
                        "name": "diagnostic",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hmjw4",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-hmjw4",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:59Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:57Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:59Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:59Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:57Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://28b718f6bbb9d43308a21cc335e48403c98dfffe6ecf34004f8d1a23c625e279",
                        "image": "docker.io/curlimages/curl:latest",
                        "imageID": "docker.io/curlimages/curl@sha256:4026b29997dc7c823b51c164b71e2b51e0fd95cce4601f78202c513d97da2922",
                        "lastState": {},
                        "name": "diagnostic",
                        "ready": true,
                        "resources": {},
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-17T07:17:59Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 101,
                                "supplementalGroups": [
                                    101
                                ],
                                "uid": 100
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hmjw4",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.3",
                "podIPs": [
                    {
                        "ip": "10.244.0.3"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2025-08-17T07:17:57Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "33fa9fcd9b30510dc847b509c5cee98f9c757e2e98ec1d1f2757b0884385d8c9",
                    "kubectl.kubernetes.io/restartedAt": "2025-08-17T10:06:03+02:00"
                },
                "creationTimestamp": "2025-08-17T08:06:03Z",
                "generateName": "wazuh-siem-dashboard-7744b94f58-",
                "generation": 1,
                "labels": {
                    "app": "wazuh-siem-dashboard",
                    "pod-template-hash": "7744b94f58"
                },
                "name": "wazuh-siem-dashboard-7744b94f58-wmlft",
                "namespace": "wazuh",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "wazuh-siem-dashboard-7744b94f58",
                        "uid": "a7064912-05ba-408d-81e2-ecf136029c08"
                    }
                ],
                "resourceVersion": "3827074",
                "uid": "472eb963-8bfa-4110-897d-c04fbe496508"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "INDEXER_URL",
                                "value": "https://indexer:9200"
                            },
                            {
                                "name": "INDEXER_USERNAME",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "username",
                                        "name": "indexer-cred"
                                    }
                                }
                            },
                            {
                                "name": "INDEXER_PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "password",
                                        "name": "indexer-cred"
                                    }
                                }
                            },
                            {
                                "name": "DASHBOARD_USERNAME",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "username",
                                        "name": "dashboard-cred"
                                    }
                                }
                            },
                            {
                                "name": "DASHBOARD_PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "password",
                                        "name": "dashboard-cred"
                                    }
                                }
                            },
                            {
                                "name": "SERVER_SSL_ENABLED",
                                "value": "false"
                            },
                            {
                                "name": "SERVER_SSL_CERTIFICATE",
                                "value": "/usr/share/wazuh-dashboard/certs/cert.pem"
                            },
                            {
                                "name": "SERVER_SSL_KEY",
                                "value": "/usr/share/wazuh-dashboard/certs/key.pem"
                            },
                            {
                                "name": "WAZUH_API_URL",
                                "value": "https://wazuh"
                            },
                            {
                                "name": "API_USERNAME",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "username",
                                        "name": "wazuh-api-cred"
                                    }
                                }
                            },
                            {
                                "name": "API_PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "password",
                                        "name": "wazuh-api-cred"
                                    }
                                }
                            }
                        ],
                        "image": "wazuh/wazuh-dashboard:4.11.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "wazuh-dashboard",
                        "ports": [
                            {
                                "containerPort": 5601,
                                "name": "dashboard",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "4Gi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "2Gi"
                            }
                        },
                        "securityContext": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/usr/share/wazuh-dashboard/config/opensearch_dashboards.yml",
                                "name": "config",
                                "subPath": "opensearch_dashboards.yml"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-dashboard/certs/cert.pem",
                                "name": "dashboard-certs",
                                "readOnly": true,
                                "subPath": "tls.crt"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-dashboard/certs/key.pem",
                                "name": "dashboard-certs",
                                "readOnly": true,
                                "subPath": "tls.key"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-dashboard/certs/root-ca.pem",
                                "name": "dashboard-certs",
                                "readOnly": true,
                                "subPath": "ca.crt"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-p2xhm",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "wazuh-siem-dashboard-config"
                        },
                        "name": "config"
                    },
                    {
                        "name": "dashboard-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "dashboard-tls"
                        }
                    },
                    {
                        "name": "kube-api-access-p2xhm",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T08:06:06Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T08:06:03Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T08:06:06Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T08:06:06Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T08:06:03Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "500m",
                            "memory": "2Gi"
                        },
                        "containerID": "containerd://fdc3a7dd049ddb564f2fe146fd0a0a32b828b6c756d5c70275324a031eeadc22",
                        "image": "docker.io/wazuh/wazuh-dashboard:4.11.1",
                        "imageID": "docker.io/wazuh/wazuh-dashboard@sha256:0c58e7b47bb6fb396c5ed37b036fb36db9f9d110f6d78f01eac4d8e734a81d5d",
                        "lastState": {},
                        "name": "wazuh-dashboard",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "4Gi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "2Gi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-17T08:06:05Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 1000,
                                "supplementalGroups": [
                                    1000
                                ],
                                "uid": 1000
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/usr/share/wazuh-dashboard/config/opensearch_dashboards.yml",
                                "name": "config"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-dashboard/certs/cert.pem",
                                "name": "dashboard-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-dashboard/certs/key.pem",
                                "name": "dashboard-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-dashboard/certs/root-ca.pem",
                                "name": "dashboard-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-p2xhm",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.234",
                "podIPs": [
                    {
                        "ip": "10.244.0.234"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-17T08:06:03Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "39139db6684750dfe34f28fdc238cc7b9c7dab641921cf855bbf1fd9f6e900ed"
                },
                "creationTimestamp": "2025-08-17T07:17:25Z",
                "generateName": "wazuh-siem-indexer-",
                "generation": 1,
                "labels": {
                    "app": "wazuh-siem-indexer",
                    "apps.kubernetes.io/pod-index": "0",
                    "controller-revision-hash": "wazuh-siem-indexer-79c4bf85b4",
                    "statefulset.kubernetes.io/pod-name": "wazuh-siem-indexer-0"
                },
                "name": "wazuh-siem-indexer-0",
                "namespace": "wazuh",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "wazuh-siem-indexer",
                        "uid": "b3b0e1a0-d887-4ee8-8f63-0d64be1fc9e1"
                    }
                ],
                "resourceVersion": "3816833",
                "uid": "da7d93e2-d355-420b-a054-5f6fe5f975c2"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "OPENSEARCH_JAVA_OPTS",
                                "value": "-Xms1g -Xmx1g -Dlog4j2.formatMsgNoLookups=true"
                            },
                            {
                                "name": "CLUSTER_NAME",
                                "value": "wazuh"
                            },
                            {
                                "name": "NETWORK_HOST",
                                "value": "0.0.0.0"
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "DISCOVERY_SERVICE",
                                "value": "wazuh-siem-indexer-rest"
                            },
                            {
                                "name": "KUBERNETES_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DISABLE_INSTALL_DEMO_CONFIG",
                                "value": "true"
                            }
                        ],
                        "image": "wazuh/wazuh-indexer:4.11.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "wazuh-indexer",
                        "ports": [
                            {
                                "containerPort": 9200,
                                "name": "indexer-rest",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9300,
                                "name": "indexer-nodes",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "3Gi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "2Gi"
                            }
                        },
                        "securityContext": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/wazuh-indexer",
                                "name": "wazuh-indexer"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/certs/node-key.pem",
                                "name": "node-certs",
                                "readOnly": true,
                                "subPath": "tls.key"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/certs/node.pem",
                                "name": "node-certs",
                                "readOnly": true,
                                "subPath": "tls.crt"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/certs/root-ca.pem",
                                "name": "node-certs",
                                "readOnly": true,
                                "subPath": "ca.crt"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/certs/admin.pem",
                                "name": "admin-certs",
                                "readOnly": true,
                                "subPath": "tls.crt"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/certs/admin-key.pem",
                                "name": "admin-certs",
                                "readOnly": true,
                                "subPath": "tls.key"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/opensearch.yml",
                                "name": "indexer-conf",
                                "readOnly": true,
                                "subPath": "opensearch.yml"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/opensearch-security/internal_users.yml",
                                "name": "indexer-conf",
                                "readOnly": true,
                                "subPath": "internal_users.yml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-8xzlw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "wazuh-siem-indexer-0",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "chown -R 1000:1000 /var/lib/wazuh-indexer"
                        ],
                        "image": "busybox:stable",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "volume-mount-hack",
                        "resources": {
                            "limits": {
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "50m",
                                "memory": "128Mi"
                            }
                        },
                        "securityContext": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/wazuh-indexer",
                                "name": "wazuh-indexer"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-8xzlw",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "command": [
                            "sysctl",
                            "-w",
                            "vm.max_map_count=262144"
                        ],
                        "image": "busybox:stable",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "increase-the-vm-max-map-count",
                        "resources": {
                            "limits": {
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "50m",
                                "memory": "128Mi"
                            }
                        },
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-8xzlw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "wazuh-siem-indexer-nodes",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "wazuh-indexer",
                        "persistentVolumeClaim": {
                            "claimName": "wazuh-indexer-wazuh-siem-indexer-0"
                        }
                    },
                    {
                        "name": "admin-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "admin-tls"
                        }
                    },
                    {
                        "name": "node-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "node-tls"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "wazuh-siem-indexer-config"
                        },
                        "name": "indexer-conf"
                    },
                    {
                        "name": "kube-api-access-8xzlw",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:34Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:35Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:36Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:36Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:32Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "500m",
                            "memory": "2Gi"
                        },
                        "containerID": "containerd://3693ef0d17c6549c5e2d51ac5ff5312981c0d8f39bdb388264bd5368cd92981b",
                        "image": "docker.io/wazuh/wazuh-indexer:4.11.1",
                        "imageID": "docker.io/wazuh/wazuh-indexer@sha256:a7a2076b167e783752a67a91cc93c1d1863ee71a8d4b15051e7f91051710ec82",
                        "lastState": {},
                        "name": "wazuh-indexer",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "3Gi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "2Gi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-17T07:17:36Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 1000,
                                "supplementalGroups": [
                                    1000
                                ],
                                "uid": 1000
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/wazuh-indexer",
                                "name": "wazuh-indexer"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/certs/node-key.pem",
                                "name": "node-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/certs/node.pem",
                                "name": "node-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/certs/root-ca.pem",
                                "name": "node-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/certs/admin.pem",
                                "name": "admin-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/certs/admin-key.pem",
                                "name": "admin-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/opensearch.yml",
                                "name": "indexer-conf",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/usr/share/wazuh-indexer/opensearch-security/internal_users.yml",
                                "name": "indexer-conf",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-8xzlw",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "initContainerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "50m",
                            "memory": "128Mi"
                        },
                        "containerID": "containerd://4ef1650dfeab02821e5dc087191e3cddf942a596e697edefe39d15341eb1161b",
                        "image": "docker.io/library/busybox:1.36",
                        "imageID": "docker.io/library/busybox@sha256:31f3955f475e40c62c6d4209f09fd9738cf6cadfc0f4aa76ba2d4d86f061c5b5",
                        "lastState": {},
                        "name": "volume-mount-hack",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "50m",
                                "memory": "128Mi"
                            }
                        },
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://4ef1650dfeab02821e5dc087191e3cddf942a596e697edefe39d15341eb1161b",
                                "exitCode": 0,
                                "finishedAt": "2025-08-17T07:17:33Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-17T07:17:33Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0,
                                    10
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/wazuh-indexer",
                                "name": "wazuh-indexer"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-8xzlw",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    },
                    {
                        "allocatedResources": {
                            "cpu": "50m",
                            "memory": "128Mi"
                        },
                        "containerID": "containerd://2e0e3913eeee4fce1ac76c0e8a3bef71b74caa5774d9edae06434b4b6601499d",
                        "image": "docker.io/library/busybox:1.36",
                        "imageID": "docker.io/library/busybox@sha256:31f3955f475e40c62c6d4209f09fd9738cf6cadfc0f4aa76ba2d4d86f061c5b5",
                        "lastState": {},
                        "name": "increase-the-vm-max-map-count",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "memory": "256Mi"
                            },
                            "requests": {
                                "cpu": "50m",
                                "memory": "128Mi"
                            }
                        },
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://2e0e3913eeee4fce1ac76c0e8a3bef71b74caa5774d9edae06434b4b6601499d",
                                "exitCode": 0,
                                "finishedAt": "2025-08-17T07:17:34Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-17T07:17:34Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0,
                                    10
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-8xzlw",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.122",
                "podIPs": [
                    {
                        "ip": "10.244.0.122"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-17T07:17:32Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "52c3130a6e3ad152ae33e7ae42e75f74d33d868ce29d262557a13f92b80e0873"
                },
                "creationTimestamp": "2025-08-17T07:17:25Z",
                "generateName": "wazuh-siem-manager-master-",
                "generation": 1,
                "labels": {
                    "app": "wazuh-siem-manager",
                    "apps.kubernetes.io/pod-index": "0",
                    "controller-revision-hash": "wazuh-siem-manager-master-86856bb8fc",
                    "node-type": "master",
                    "statefulset.kubernetes.io/pod-name": "wazuh-siem-manager-master-0"
                },
                "name": "wazuh-siem-manager-master-0",
                "namespace": "wazuh",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "wazuh-siem-manager-master",
                        "uid": "9fd352bc-f36e-4ca9-8b27-5c75e3b1bba0"
                    }
                ],
                "resourceVersion": "3816839",
                "uid": "83e1cf50-0233-46c5-8ef0-02f36ca9600c"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "INDEXER_URL",
                                "value": "https://indexer:9200"
                            },
                            {
                                "name": "INDEXER_USERNAME",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "username",
                                        "name": "indexer-cred"
                                    }
                                }
                            },
                            {
                                "name": "INDEXER_PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "password",
                                        "name": "indexer-cred"
                                    }
                                }
                            },
                            {
                                "name": "FILEBEAT_SSL_VERIFICATION_MODE",
                                "value": "full"
                            },
                            {
                                "name": "SSL_CERTIFICATE_AUTHORITIES",
                                "value": "/etc/ssl/root-ca.pem"
                            },
                            {
                                "name": "SSL_CERTIFICATE",
                                "value": "/etc/ssl/filebeat.pem"
                            },
                            {
                                "name": "SSL_KEY",
                                "value": "/etc/ssl/filebeat.key"
                            },
                            {
                                "name": "API_USERNAME",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "username",
                                        "name": "wazuh-api-cred"
                                    }
                                }
                            },
                            {
                                "name": "API_PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "password",
                                        "name": "wazuh-api-cred"
                                    }
                                }
                            },
                            {
                                "name": "WAZUH_CLUSTER_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "key",
                                        "name": "wazuh-cluster-key"
                                    }
                                }
                            }
                        ],
                        "image": "wazuh/wazuh-manager:4.11.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "wazuh-manager",
                        "ports": [
                            {
                                "containerPort": 1515,
                                "name": "registration",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1516,
                                "name": "cluster",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 55000,
                                "name": "api",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "2Gi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "1Gi"
                            }
                        },
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "SYS_CHROOT"
                                ]
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/wazuh-config-mount/etc/",
                                "name": "result-config"
                            },
                            {
                                "mountPath": "/var/ossec/etc/local_internal_options.conf",
                                "name": "config",
                                "readOnly": true,
                                "subPath": "master_local_internal_options.conf"
                            },
                            {
                                "mountPath": "/etc/ssl/root-ca.pem",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "subPath": "ca.crt"
                            },
                            {
                                "mountPath": "/etc/ssl/filebeat.pem",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "subPath": "tls.crt"
                            },
                            {
                                "mountPath": "/etc/ssl/filebeat.key",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "subPath": "tls.key"
                            },
                            {
                                "mountPath": "/wazuh-config-mount/etc/authd.pass",
                                "name": "wazuh-authd-pass",
                                "readOnly": true,
                                "subPath": "authd.pass"
                            },
                            {
                                "mountPath": "/var/ossec/api/configuration",
                                "name": "wazuh-siem-manager-master",
                                "subPath": "wazuh/var/ossec/api/configuration"
                            },
                            {
                                "mountPath": "/var/ossec/etc",
                                "name": "wazuh-siem-manager-master",
                                "subPath": "wazuh/var/ossec/etc"
                            },
                            {
                                "mountPath": "/var/ossec/logs",
                                "name": "wazuh-siem-manager-master",
                                "subPath": "wazuh/var/ossec/logs"
                            },
                            {
                                "mountPath": "/var/ossec/queue",
                                "name": "wazuh-siem-manager-master",
                                "subPath": "wazuh/var/ossec/queue"
                            },
                            {
                                "mountPath": "/var/ossec/var/multigroups",
                                "name": "wazuh-siem-manager-master",
                                "subPath": "wazuh/var/ossec/var/multigroups"
                            },
                            {
                                "mountPath": "/var/ossec/integrations",
                                "name": "wazuh-siem-manager-master",
                                "subPath": "wazuh/var/ossec/integrations"
                            },
                            {
                                "mountPath": "/var/ossec/active-response/bin",
                                "name": "wazuh-siem-manager-master",
                                "subPath": "wazuh/var/ossec/active-response/bin"
                            },
                            {
                                "mountPath": "/var/ossec/agentless",
                                "name": "wazuh-siem-manager-master",
                                "subPath": "wazuh/var/ossec/agentless"
                            },
                            {
                                "mountPath": "/var/ossec/wodles",
                                "name": "wazuh-siem-manager-master",
                                "subPath": "wazuh/var/ossec/wodles"
                            },
                            {
                                "mountPath": "/etc/filebeat",
                                "name": "wazuh-siem-manager-master",
                                "subPath": "filebeat/etc/filebeat"
                            },
                            {
                                "mountPath": "/var/lib/filebeat",
                                "name": "wazuh-siem-manager-master",
                                "subPath": "filebeat/var/lib/filebeat"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-fdwcd",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "wazuh-siem-manager-master-0",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/script.sh"
                        ],
                        "image": "busybox:stable",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "update-index",
                        "resources": {
                            "limits": {
                                "memory": "32Mi"
                            },
                            "requests": {
                                "cpu": "5m",
                                "memory": "16Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/ossec.conf",
                                "name": "config",
                                "readOnly": true,
                                "subPath": "master.conf"
                            },
                            {
                                "mountPath": "/wazuh-config-mount/etc/",
                                "name": "result-config"
                            },
                            {
                                "mountPath": "/script.sh",
                                "name": "config",
                                "readOnly": true,
                                "subPath": "script.sh"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-fdwcd",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "wazuh-siem-manager-cluster",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "wazuh-siem-manager-master",
                        "persistentVolumeClaim": {
                            "claimName": "wazuh-siem-manager-master-wazuh-siem-manager-master-0"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 511,
                            "name": "wazuh-siem-manager-config"
                        },
                        "name": "config"
                    },
                    {
                        "name": "filebeat-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "filebeat-tls"
                        }
                    },
                    {
                        "name": "wazuh-authd-pass",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "wazuh-authd-pass"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "result-config"
                    },
                    {
                        "name": "kube-api-access-fdwcd",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:35Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:35Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:36Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:36Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "500m",
                            "memory": "1Gi"
                        },
                        "containerID": "containerd://555bd8970182699557991292f954b22e903bab7d4962b6b05ec059b935343494",
                        "image": "docker.io/wazuh/wazuh-manager:4.11.1",
                        "imageID": "docker.io/wazuh/wazuh-manager@sha256:1da5c38c6a78a3eb2a21dc01da275990ab519a72405ec10ba672256dff513396",
                        "lastState": {},
                        "name": "wazuh-manager",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "memory": "2Gi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "1Gi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-17T07:17:36Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/wazuh-config-mount/etc/",
                                "name": "result-config"
                            },
                            {
                                "mountPath": "/var/ossec/etc/local_internal_options.conf",
                                "name": "config",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/etc/ssl/root-ca.pem",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/etc/ssl/filebeat.pem",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/etc/ssl/filebeat.key",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/wazuh-config-mount/etc/authd.pass",
                                "name": "wazuh-authd-pass",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/ossec/api/configuration",
                                "name": "wazuh-siem-manager-master"
                            },
                            {
                                "mountPath": "/var/ossec/etc",
                                "name": "wazuh-siem-manager-master"
                            },
                            {
                                "mountPath": "/var/ossec/logs",
                                "name": "wazuh-siem-manager-master"
                            },
                            {
                                "mountPath": "/var/ossec/queue",
                                "name": "wazuh-siem-manager-master"
                            },
                            {
                                "mountPath": "/var/ossec/var/multigroups",
                                "name": "wazuh-siem-manager-master"
                            },
                            {
                                "mountPath": "/var/ossec/integrations",
                                "name": "wazuh-siem-manager-master"
                            },
                            {
                                "mountPath": "/var/ossec/active-response/bin",
                                "name": "wazuh-siem-manager-master"
                            },
                            {
                                "mountPath": "/var/ossec/agentless",
                                "name": "wazuh-siem-manager-master"
                            },
                            {
                                "mountPath": "/var/ossec/wodles",
                                "name": "wazuh-siem-manager-master"
                            },
                            {
                                "mountPath": "/etc/filebeat",
                                "name": "wazuh-siem-manager-master"
                            },
                            {
                                "mountPath": "/var/lib/filebeat",
                                "name": "wazuh-siem-manager-master"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-fdwcd",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "initContainerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "5m",
                            "memory": "16Mi"
                        },
                        "containerID": "containerd://cc26d2dfed9317b6dadd70e98ad701377e026ffc9aa6d629ce048e328e01d345",
                        "image": "docker.io/library/busybox:1.36",
                        "imageID": "docker.io/library/busybox@sha256:31f3955f475e40c62c6d4209f09fd9738cf6cadfc0f4aa76ba2d4d86f061c5b5",
                        "lastState": {},
                        "name": "update-index",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "memory": "32Mi"
                            },
                            "requests": {
                                "cpu": "5m",
                                "memory": "16Mi"
                            }
                        },
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://cc26d2dfed9317b6dadd70e98ad701377e026ffc9aa6d629ce048e328e01d345",
                                "exitCode": 0,
                                "finishedAt": "2025-08-17T07:17:34Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-17T07:17:34Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0,
                                    10
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/ossec.conf",
                                "name": "config",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/wazuh-config-mount/etc/",
                                "name": "result-config"
                            },
                            {
                                "mountPath": "/script.sh",
                                "name": "config",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-fdwcd",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.31",
                "podIPs": [
                    {
                        "ip": "10.244.0.31"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-17T07:17:33Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "52c3130a6e3ad152ae33e7ae42e75f74d33d868ce29d262557a13f92b80e0873"
                },
                "creationTimestamp": "2025-08-17T07:17:25Z",
                "generateName": "wazuh-siem-manager-worker-",
                "generation": 1,
                "labels": {
                    "app": "wazuh-siem-manager",
                    "apps.kubernetes.io/pod-index": "0",
                    "controller-revision-hash": "wazuh-siem-manager-worker-6f477ffbb8",
                    "node-type": "worker",
                    "statefulset.kubernetes.io/pod-name": "wazuh-siem-manager-worker-0"
                },
                "name": "wazuh-siem-manager-worker-0",
                "namespace": "wazuh",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "wazuh-siem-manager-worker",
                        "uid": "a4a3f935-ab90-4f3f-a2f4-8cf370b12b5d"
                    }
                ],
                "resourceVersion": "3816816",
                "uid": "22658eb9-2d2b-4ccb-8888-1b97c540ea4c"
            },
            "spec": {
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchLabels": {
                                            "app": "wazuh-siem-manager-worker",
                                            "node-type": "worker"
                                        }
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                },
                                "weight": 100
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "INDEXER_URL",
                                "value": "https://indexer:9200"
                            },
                            {
                                "name": "INDEXER_USERNAME",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "username",
                                        "name": "indexer-cred"
                                    }
                                }
                            },
                            {
                                "name": "INDEXER_PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "password",
                                        "name": "indexer-cred"
                                    }
                                }
                            },
                            {
                                "name": "FILEBEAT_SSL_VERIFICATION_MODE",
                                "value": "full"
                            },
                            {
                                "name": "WAZUH_CLUSTER_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "key",
                                        "name": "wazuh-cluster-key"
                                    }
                                }
                            },
                            {
                                "name": "SSL_CERTIFICATE_AUTHORITIES",
                                "value": "/etc/ssl/root-ca.pem"
                            },
                            {
                                "name": "SSL_CERTIFICATE",
                                "value": "/etc/ssl/filebeat.pem"
                            },
                            {
                                "name": "SSL_KEY",
                                "value": "/etc/ssl/filebeat.key"
                            }
                        ],
                        "image": "wazuh/wazuh-manager:4.11.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "wazuh-manager",
                        "ports": [
                            {
                                "containerPort": 1514,
                                "name": "agents-events",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1516,
                                "name": "cluster",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "2Gi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "1Gi"
                            }
                        },
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "SYS_CHROOT"
                                ]
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/wazuh-config-mount/etc/",
                                "name": "result-config"
                            },
                            {
                                "mountPath": "/var/ossec/etc/local_internal_options.conf",
                                "name": "config",
                                "readOnly": true,
                                "subPath": "master_local_internal_options.conf"
                            },
                            {
                                "mountPath": "/etc/ssl/root-ca.pem",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "subPath": "ca.crt"
                            },
                            {
                                "mountPath": "/etc/ssl/filebeat.pem",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "subPath": "tls.crt"
                            },
                            {
                                "mountPath": "/etc/ssl/filebeat.key",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "subPath": "tls.key"
                            },
                            {
                                "mountPath": "/var/ossec/api/configuration",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/api/configuration"
                            },
                            {
                                "mountPath": "/var/ossec/etc",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/etc"
                            },
                            {
                                "mountPath": "/var/ossec/logs",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/logs"
                            },
                            {
                                "mountPath": "/var/ossec/queue",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/queue"
                            },
                            {
                                "mountPath": "/var/ossec/var/multigroups",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/var/multigroups"
                            },
                            {
                                "mountPath": "/var/ossec/integrations",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/integrations"
                            },
                            {
                                "mountPath": "/var/ossec/active-response/bin",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/active-response/bin"
                            },
                            {
                                "mountPath": "/var/ossec/agentless",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/agentless"
                            },
                            {
                                "mountPath": "/var/ossec/wodles",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/wodles"
                            },
                            {
                                "mountPath": "/etc/filebeat",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "filebeat/etc/filebeat"
                            },
                            {
                                "mountPath": "/var/lib/filebeat",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "filebeat/var/lib/filebeat"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-gc9s8",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "wazuh-siem-manager-worker-0",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/script.sh"
                        ],
                        "image": "busybox:stable",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "update-index",
                        "resources": {
                            "limits": {
                                "memory": "32Mi"
                            },
                            "requests": {
                                "cpu": "5m",
                                "memory": "16Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/ossec.conf",
                                "name": "config",
                                "readOnly": true,
                                "subPath": "worker.conf"
                            },
                            {
                                "mountPath": "/wazuh-config-mount/etc/",
                                "name": "result-config"
                            },
                            {
                                "mountPath": "/script.sh",
                                "name": "config",
                                "readOnly": true,
                                "subPath": "script.sh"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-gc9s8",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 101
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "wazuh-siem-manager-cluster",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "wazuh-siem-manager-worker",
                        "persistentVolumeClaim": {
                            "claimName": "wazuh-siem-manager-worker-wazuh-siem-manager-worker-0"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 511,
                            "name": "wazuh-siem-manager-config"
                        },
                        "name": "config"
                    },
                    {
                        "name": "filebeat-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "filebeat-tls"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "result-config"
                    },
                    {
                        "name": "kube-api-access-gc9s8",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:34Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:34Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:35Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:35Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:32Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "500m",
                            "memory": "1Gi"
                        },
                        "containerID": "containerd://f8801e5888765510f5aa99b170955935dc39930041aa9028a938c9e0c69499a1",
                        "image": "docker.io/wazuh/wazuh-manager:4.11.1",
                        "imageID": "docker.io/wazuh/wazuh-manager@sha256:1da5c38c6a78a3eb2a21dc01da275990ab519a72405ec10ba672256dff513396",
                        "lastState": {},
                        "name": "wazuh-manager",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "memory": "2Gi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "1Gi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-17T07:17:35Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0,
                                    101
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/wazuh-config-mount/etc/",
                                "name": "result-config"
                            },
                            {
                                "mountPath": "/var/ossec/etc/local_internal_options.conf",
                                "name": "config",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/etc/ssl/root-ca.pem",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/etc/ssl/filebeat.pem",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/etc/ssl/filebeat.key",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/ossec/api/configuration",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/etc",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/logs",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/queue",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/var/multigroups",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/integrations",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/active-response/bin",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/agentless",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/wodles",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/etc/filebeat",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/lib/filebeat",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-gc9s8",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "initContainerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "5m",
                            "memory": "16Mi"
                        },
                        "containerID": "containerd://17e14446bffe452bd782d9239b302bb02acc14e3d99a2427d8942c5b3eb8bb3d",
                        "image": "docker.io/library/busybox:1.36",
                        "imageID": "docker.io/library/busybox@sha256:31f3955f475e40c62c6d4209f09fd9738cf6cadfc0f4aa76ba2d4d86f061c5b5",
                        "lastState": {},
                        "name": "update-index",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "memory": "32Mi"
                            },
                            "requests": {
                                "cpu": "5m",
                                "memory": "16Mi"
                            }
                        },
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://17e14446bffe452bd782d9239b302bb02acc14e3d99a2427d8942c5b3eb8bb3d",
                                "exitCode": 0,
                                "finishedAt": "2025-08-17T07:17:34Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-17T07:17:34Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0,
                                    10,
                                    101
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/ossec.conf",
                                "name": "config",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/wazuh-config-mount/etc/",
                                "name": "result-config"
                            },
                            {
                                "mountPath": "/script.sh",
                                "name": "config",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-gc9s8",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.25",
                "podIPs": [
                    {
                        "ip": "10.244.0.25"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-17T07:17:32Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "52c3130a6e3ad152ae33e7ae42e75f74d33d868ce29d262557a13f92b80e0873"
                },
                "creationTimestamp": "2025-08-17T07:17:25Z",
                "generateName": "wazuh-siem-manager-worker-",
                "generation": 1,
                "labels": {
                    "app": "wazuh-siem-manager",
                    "apps.kubernetes.io/pod-index": "1",
                    "controller-revision-hash": "wazuh-siem-manager-worker-6f477ffbb8",
                    "node-type": "worker",
                    "statefulset.kubernetes.io/pod-name": "wazuh-siem-manager-worker-1"
                },
                "name": "wazuh-siem-manager-worker-1",
                "namespace": "wazuh",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "wazuh-siem-manager-worker",
                        "uid": "a4a3f935-ab90-4f3f-a2f4-8cf370b12b5d"
                    }
                ],
                "resourceVersion": "3816844",
                "uid": "895a006a-9770-46b0-bfba-a6652d83a35d"
            },
            "spec": {
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchLabels": {
                                            "app": "wazuh-siem-manager-worker",
                                            "node-type": "worker"
                                        }
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                },
                                "weight": 100
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "INDEXER_URL",
                                "value": "https://indexer:9200"
                            },
                            {
                                "name": "INDEXER_USERNAME",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "username",
                                        "name": "indexer-cred"
                                    }
                                }
                            },
                            {
                                "name": "INDEXER_PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "password",
                                        "name": "indexer-cred"
                                    }
                                }
                            },
                            {
                                "name": "FILEBEAT_SSL_VERIFICATION_MODE",
                                "value": "full"
                            },
                            {
                                "name": "WAZUH_CLUSTER_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "key",
                                        "name": "wazuh-cluster-key"
                                    }
                                }
                            },
                            {
                                "name": "SSL_CERTIFICATE_AUTHORITIES",
                                "value": "/etc/ssl/root-ca.pem"
                            },
                            {
                                "name": "SSL_CERTIFICATE",
                                "value": "/etc/ssl/filebeat.pem"
                            },
                            {
                                "name": "SSL_KEY",
                                "value": "/etc/ssl/filebeat.key"
                            }
                        ],
                        "image": "wazuh/wazuh-manager:4.11.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "wazuh-manager",
                        "ports": [
                            {
                                "containerPort": 1514,
                                "name": "agents-events",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1516,
                                "name": "cluster",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "2Gi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "1Gi"
                            }
                        },
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "SYS_CHROOT"
                                ]
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/wazuh-config-mount/etc/",
                                "name": "result-config"
                            },
                            {
                                "mountPath": "/var/ossec/etc/local_internal_options.conf",
                                "name": "config",
                                "readOnly": true,
                                "subPath": "master_local_internal_options.conf"
                            },
                            {
                                "mountPath": "/etc/ssl/root-ca.pem",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "subPath": "ca.crt"
                            },
                            {
                                "mountPath": "/etc/ssl/filebeat.pem",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "subPath": "tls.crt"
                            },
                            {
                                "mountPath": "/etc/ssl/filebeat.key",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "subPath": "tls.key"
                            },
                            {
                                "mountPath": "/var/ossec/api/configuration",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/api/configuration"
                            },
                            {
                                "mountPath": "/var/ossec/etc",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/etc"
                            },
                            {
                                "mountPath": "/var/ossec/logs",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/logs"
                            },
                            {
                                "mountPath": "/var/ossec/queue",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/queue"
                            },
                            {
                                "mountPath": "/var/ossec/var/multigroups",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/var/multigroups"
                            },
                            {
                                "mountPath": "/var/ossec/integrations",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/integrations"
                            },
                            {
                                "mountPath": "/var/ossec/active-response/bin",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/active-response/bin"
                            },
                            {
                                "mountPath": "/var/ossec/agentless",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/agentless"
                            },
                            {
                                "mountPath": "/var/ossec/wodles",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "wazuh/var/ossec/wodles"
                            },
                            {
                                "mountPath": "/etc/filebeat",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "filebeat/etc/filebeat"
                            },
                            {
                                "mountPath": "/var/lib/filebeat",
                                "name": "wazuh-siem-manager-worker",
                                "subPath": "filebeat/var/lib/filebeat"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-whgj5",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "wazuh-siem-manager-worker-1",
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/script.sh"
                        ],
                        "image": "busybox:stable",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "update-index",
                        "resources": {
                            "limits": {
                                "memory": "32Mi"
                            },
                            "requests": {
                                "cpu": "5m",
                                "memory": "16Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/ossec.conf",
                                "name": "config",
                                "readOnly": true,
                                "subPath": "worker.conf"
                            },
                            {
                                "mountPath": "/wazuh-config-mount/etc/",
                                "name": "result-config"
                            },
                            {
                                "mountPath": "/script.sh",
                                "name": "config",
                                "readOnly": true,
                                "subPath": "script.sh"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-whgj5",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "talos-13b-zf7",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 101
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "wazuh-siem-manager-cluster",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "wazuh-siem-manager-worker",
                        "persistentVolumeClaim": {
                            "claimName": "wazuh-siem-manager-worker-wazuh-siem-manager-worker-1"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 511,
                            "name": "wazuh-siem-manager-config"
                        },
                        "name": "config"
                    },
                    {
                        "name": "filebeat-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "filebeat-tls"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "result-config"
                    },
                    {
                        "name": "kube-api-access-whgj5",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:35Z",
                        "status": "True",
                        "type": "PodReadyToStartContainers"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:35Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:36Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:36Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-08-17T07:17:33Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "500m",
                            "memory": "1Gi"
                        },
                        "containerID": "containerd://164d49a99668ed0155ee5d1837b8c9ddde52972921eb1a5cee381ba26affdecd",
                        "image": "docker.io/wazuh/wazuh-manager:4.11.1",
                        "imageID": "docker.io/wazuh/wazuh-manager@sha256:1da5c38c6a78a3eb2a21dc01da275990ab519a72405ec10ba672256dff513396",
                        "lastState": {},
                        "name": "wazuh-manager",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "memory": "2Gi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "1Gi"
                            }
                        },
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2025-08-17T07:17:36Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0,
                                    101
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/wazuh-config-mount/etc/",
                                "name": "result-config"
                            },
                            {
                                "mountPath": "/var/ossec/etc/local_internal_options.conf",
                                "name": "config",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/etc/ssl/root-ca.pem",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/etc/ssl/filebeat.pem",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/etc/ssl/filebeat.key",
                                "name": "filebeat-certs",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/ossec/api/configuration",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/etc",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/logs",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/queue",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/var/multigroups",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/integrations",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/active-response/bin",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/agentless",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/ossec/wodles",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/etc/filebeat",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/lib/filebeat",
                                "name": "wazuh-siem-manager-worker"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-whgj5",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "hostIP": "10.0.0.8",
                "hostIPs": [
                    {
                        "ip": "10.0.0.8"
                    }
                ],
                "initContainerStatuses": [
                    {
                        "allocatedResources": {
                            "cpu": "5m",
                            "memory": "16Mi"
                        },
                        "containerID": "containerd://9042354529771c30fe5d99eadac465b44a8b3021151a1a3ede61c0cbff2f25e4",
                        "image": "docker.io/library/busybox:1.36",
                        "imageID": "docker.io/library/busybox@sha256:31f3955f475e40c62c6d4209f09fd9738cf6cadfc0f4aa76ba2d4d86f061c5b5",
                        "lastState": {},
                        "name": "update-index",
                        "ready": true,
                        "resources": {
                            "limits": {
                                "memory": "32Mi"
                            },
                            "requests": {
                                "cpu": "5m",
                                "memory": "16Mi"
                            }
                        },
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://9042354529771c30fe5d99eadac465b44a8b3021151a1a3ede61c0cbff2f25e4",
                                "exitCode": 0,
                                "finishedAt": "2025-08-17T07:17:35Z",
                                "reason": "Completed",
                                "startedAt": "2025-08-17T07:17:35Z"
                            }
                        },
                        "user": {
                            "linux": {
                                "gid": 0,
                                "supplementalGroups": [
                                    0,
                                    10,
                                    101
                                ],
                                "uid": 0
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/ossec.conf",
                                "name": "config",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/wazuh-config-mount/etc/",
                                "name": "result-config"
                            },
                            {
                                "mountPath": "/script.sh",
                                "name": "config",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-whgj5",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "phase": "Running",
                "podIP": "10.244.0.44",
                "podIPs": [
                    {
                        "ip": "10.244.0.44"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2025-08-17T07:17:33Z"
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": ""
    }
}
